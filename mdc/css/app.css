@charset "UTF-8";
@keyframes mdc-ripple-fg-radius-in { from { animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1); }
  to { transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }
@keyframes mdc-ripple-fg-opacity-in { from { animation-timing-function: linear; opacity: 0; }
  to { opacity: 1; } }
@keyframes mdc-ripple-fg-opacity-out { from { animation-timing-function: linear; opacity: 1; }
  to { opacity: 0; } }
.mdc-ripple-surface--test-edge-var-bug { --mdc-ripple-surface-test-edge-var: 1px solid #000; visibility: hidden; }
.mdc-ripple-surface--test-edge-var-bug::before { border: var(--mdc-ripple-surface-test-edge-var); }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-button, .cta-button, .cta-actions button, .flat-button, .raised-accent-button, #contribution-selections li a { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 2.25rem; text-decoration: none; text-transform: uppercase; --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); display: inline-block; position: relative; box-sizing: border-box; min-width: 64px; height: 36px; padding: 0 16px; border: none; outline: none; text-align: center; user-select: none; -webkit-appearance: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); overflow: hidden; vertical-align: middle; border-radius: 2px; }
.mdc-button::before, .cta-button::before, .cta-actions button::before, .flat-button::before, .raised-accent-button::before, #contribution-selections li a::before, .mdc-button::after, .cta-button::after, .cta-actions button::after, .flat-button::after, .raised-accent-button::after, #contribution-selections li a::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-button::before, .cta-button::before, .cta-actions button::before, .flat-button::before, .raised-accent-button::before, #contribution-selections li a::before, .mdc-button::after, .cta-button::after, .cta-actions button::after, .flat-button::after, .raised-accent-button::after, #contribution-selections li a::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-button.mdc-ripple-upgraded::before, .mdc-ripple-upgraded.cta-button::before, .cta-actions button.mdc-ripple-upgraded::before, .mdc-ripple-upgraded.flat-button::before, .mdc-ripple-upgraded.raised-accent-button::before, #contribution-selections li a.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-button.mdc-ripple-upgraded--unbounded::before, .mdc-ripple-upgraded--unbounded.cta-button::before, .cta-actions button.mdc-ripple-upgraded--unbounded::before, .mdc-ripple-upgraded--unbounded.flat-button::before, .mdc-ripple-upgraded--unbounded.raised-accent-button::before, #contribution-selections li a.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-button.mdc-ripple-upgraded::after, .mdc-ripple-upgraded.cta-button::after, .cta-actions button.mdc-ripple-upgraded::after, .mdc-ripple-upgraded.flat-button::after, .mdc-ripple-upgraded.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-button.mdc-ripple-upgraded--unbounded::after, .mdc-ripple-upgraded--unbounded.cta-button::after, .cta-actions button.mdc-ripple-upgraded--unbounded::after, .mdc-ripple-upgraded--unbounded.flat-button::after, .mdc-ripple-upgraded--unbounded.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-button:active, .cta-button:active, .cta-actions button:active, .flat-button:active, .raised-accent-button:active, #contribution-selections li a:active { outline: none; }
.mdc-button:hover, .cta-button:hover, .cta-actions button:hover, .flat-button:hover, .raised-accent-button:hover, #contribution-selections li a:hover { cursor: pointer; }
.mdc-button::-moz-focus-inner, .cta-button::-moz-focus-inner, .cta-actions button::-moz-focus-inner, .flat-button::-moz-focus-inner, .raised-accent-button::-moz-focus-inner, #contribution-selections li a::-moz-focus-inner { padding: 0; border: 0; }
.mdc-button:disabled, .cta-button:disabled, .cta-actions button:disabled, .flat-button:disabled, .raised-accent-button:disabled, #contribution-selections li a:disabled { background-color: transparent; /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); cursor: default; pointer-events: none; }
.mdc-button--theme-dark .mdc-button:disabled, .mdc-button--theme-dark .cta-button:disabled, .mdc-button--theme-dark .cta-actions button:disabled, .cta-actions .mdc-button--theme-dark button:disabled, .mdc-button--theme-dark .flat-button:disabled, .mdc-button--theme-dark .raised-accent-button:disabled, .mdc-button--theme-dark #contribution-selections li a:disabled, #contribution-selections li .mdc-button--theme-dark a:disabled, .mdc-theme--dark .mdc-button:disabled, .mdc-theme--dark .cta-button:disabled, .mdc-theme--dark .cta-actions button:disabled, .cta-actions .mdc-theme--dark button:disabled, .mdc-theme--dark .flat-button:disabled, .mdc-theme--dark .raised-accent-button:disabled, .mdc-theme--dark #contribution-selections li a:disabled, #contribution-selections li .mdc-theme--dark a:disabled { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-button:not(:disabled), .cta-button:not(:disabled), .cta-actions button:not(:disabled), .flat-button:not(:disabled), .raised-accent-button:not(:disabled), #contribution-selections li a:not(:disabled) { background-color: transparent; }
.mdc-button:not(:disabled), .cta-button:not(:disabled), .cta-actions button:not(:disabled), .flat-button:not(:disabled), .raised-accent-button:not(:disabled), #contribution-selections li a:not(:disabled) { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-button::before, .cta-button::before, .cta-actions button::before, .flat-button::before, .raised-accent-button::before, #contribution-selections li a::before, .mdc-button::after, .cta-button::after, .cta-actions button::after, .flat-button::after, .raised-accent-button::after, #contribution-selections li a::after { background-color: rgba(229, 198, 1, 0.16); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-button::before, .cta-button::before, .cta-actions button::before, .flat-button::before, .raised-accent-button::before, #contribution-selections li a::before, .mdc-button::after, .cta-button::after, .cta-actions button::after, .flat-button::after, .raised-accent-button::after, #contribution-selections li a::after { background-color: color(var(--mdc-theme-primary, #e5c601) a(16%)); } }
.mdc-button:not(.mdc-ripple-upgraded):hover::before, .cta-button:not(.mdc-ripple-upgraded):hover::before, .cta-actions button:not(.mdc-ripple-upgraded):hover::before, .flat-button:not(.mdc-ripple-upgraded):hover::before, .raised-accent-button:not(.mdc-ripple-upgraded):hover::before, #contribution-selections li a:not(.mdc-ripple-upgraded):hover::before, .mdc-button:not(.mdc-ripple-upgraded):focus::before, .cta-button:not(.mdc-ripple-upgraded):focus::before, .cta-actions button:not(.mdc-ripple-upgraded):focus::before, .flat-button:not(.mdc-ripple-upgraded):focus::before, .raised-accent-button:not(.mdc-ripple-upgraded):focus::before, #contribution-selections li a:not(.mdc-ripple-upgraded):focus::before, .mdc-button:not(.mdc-ripple-upgraded):active::after, .cta-button:not(.mdc-ripple-upgraded):active::after, .cta-actions button:not(.mdc-ripple-upgraded):active::after, .flat-button:not(.mdc-ripple-upgraded):active::after, .raised-accent-button:not(.mdc-ripple-upgraded):active::after, #contribution-selections li a:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-button.mdc-ripple-upgraded--background-focused::before, .mdc-ripple-upgraded--background-focused.cta-button::before, .cta-actions button.mdc-ripple-upgraded--background-focused::before, .mdc-ripple-upgraded--background-focused.flat-button::before, .mdc-ripple-upgraded--background-focused.raised-accent-button::before, #contribution-selections li a.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-button.mdc-ripple-upgraded--background-active-fill::before, .mdc-ripple-upgraded--background-active-fill.cta-button::before, .cta-actions button.mdc-ripple-upgraded--background-active-fill::before, .mdc-ripple-upgraded--background-active-fill.flat-button::before, .mdc-ripple-upgraded--background-active-fill.raised-accent-button::before, #contribution-selections li a.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-button.mdc-ripple-upgraded::after, .mdc-ripple-upgraded.cta-button::after, .cta-actions button.mdc-ripple-upgraded::after, .mdc-ripple-upgraded.flat-button::after, .mdc-ripple-upgraded.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-button.mdc-ripple-upgraded--foreground-activation::after, .mdc-ripple-upgraded--foreground-activation.cta-button::after, .cta-actions button.mdc-ripple-upgraded--foreground-activation::after, .mdc-ripple-upgraded--foreground-activation.flat-button::after, .mdc-ripple-upgraded--foreground-activation.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-button.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-ripple-upgraded--foreground-deactivation.cta-button::after, .cta-actions button.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-ripple-upgraded--foreground-deactivation.flat-button::after, .mdc-ripple-upgraded--foreground-deactivation.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

.mdc-button--raised:disabled, .cta-button:disabled, .cta-actions button:disabled, .flat-button:disabled, .raised-accent-button:disabled, #contribution-selections li a:disabled, .mdc-button--unelevated:disabled { background-color: rgba(0, 0, 0, 0.12); /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-button--theme-dark .mdc-button--raised:disabled, .mdc-button--theme-dark .cta-button:disabled, .mdc-button--theme-dark .cta-actions button:disabled, .cta-actions .mdc-button--theme-dark button:disabled, .mdc-button--theme-dark .flat-button:disabled, .mdc-button--theme-dark .raised-accent-button:disabled, .mdc-button--theme-dark #contribution-selections li a:disabled, #contribution-selections li .mdc-button--theme-dark a:disabled, .mdc-theme--dark .mdc-button--raised:disabled, .mdc-theme--dark .cta-button:disabled, .mdc-theme--dark .cta-actions button:disabled, .cta-actions .mdc-theme--dark button:disabled, .mdc-theme--dark .flat-button:disabled, .mdc-theme--dark .raised-accent-button:disabled, .mdc-theme--dark #contribution-selections li a:disabled, #contribution-selections li .mdc-theme--dark a:disabled, .mdc-button--theme-dark .mdc-button--unelevated:disabled, .mdc-theme--dark .mdc-button--unelevated:disabled { background-color: rgba(255, 255, 255, 0.12); /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-button--raised:not(:disabled), .cta-button:not(:disabled), .cta-actions button:not(:disabled), .flat-button:not(:disabled), .raised-accent-button:not(:disabled), #contribution-selections li a:not(:disabled), .mdc-button--unelevated:not(:disabled) { /* @alternate */ background-color: #e5c601; }
@supports not (-ms-ime-align: auto) { .mdc-button--raised:not(:disabled), .cta-button:not(:disabled), .cta-actions button:not(:disabled), .flat-button:not(:disabled), .raised-accent-button:not(:disabled), #contribution-selections li a:not(:disabled), .mdc-button--unelevated:not(:disabled) { background-color: var(--mdc-theme-primary, #e5c601); } }
.mdc-button--raised:not(:disabled), .cta-button:not(:disabled), .cta-actions button:not(:disabled), .flat-button:not(:disabled), .raised-accent-button:not(:disabled), #contribution-selections li a:not(:disabled), .mdc-button--unelevated:not(:disabled) { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); }
.mdc-button--raised::before, .cta-button::before, .cta-actions button::before, .flat-button::before, .raised-accent-button::before, #contribution-selections li a::before, .mdc-button--raised::after, .cta-button::after, .cta-actions button::after, .flat-button::after, .raised-accent-button::after, #contribution-selections li a::after, .mdc-button--unelevated::before, .mdc-button--unelevated::after { background-color: rgba(0, 0, 0, 0.32); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-button--raised::before, .cta-button::before, .cta-actions button::before, .flat-button::before, .raised-accent-button::before, #contribution-selections li a::before, .mdc-button--raised::after, .cta-button::after, .cta-actions button::after, .flat-button::after, .raised-accent-button::after, #contribution-selections li a::after, .mdc-button--unelevated::before, .mdc-button--unelevated::after { background-color: color(var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)) a(32%)); } }
.mdc-button--raised:not(.mdc-ripple-upgraded):hover::before, .cta-button:not(.mdc-ripple-upgraded):hover::before, .cta-actions button:not(.mdc-ripple-upgraded):hover::before, .flat-button:not(.mdc-ripple-upgraded):hover::before, .raised-accent-button:not(.mdc-ripple-upgraded):hover::before, #contribution-selections li a:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised:not(.mdc-ripple-upgraded):focus::before, .cta-button:not(.mdc-ripple-upgraded):focus::before, .cta-actions button:not(.mdc-ripple-upgraded):focus::before, .flat-button:not(.mdc-ripple-upgraded):focus::before, .raised-accent-button:not(.mdc-ripple-upgraded):focus::before, #contribution-selections li a:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised:not(.mdc-ripple-upgraded):active::after, .cta-button:not(.mdc-ripple-upgraded):active::after, .cta-actions button:not(.mdc-ripple-upgraded):active::after, .flat-button:not(.mdc-ripple-upgraded):active::after, .raised-accent-button:not(.mdc-ripple-upgraded):active::after, #contribution-selections li a:not(.mdc-ripple-upgraded):active::after, .mdc-button--unelevated:not(.mdc-ripple-upgraded):hover::before, .mdc-button--unelevated:not(.mdc-ripple-upgraded):focus::before, .mdc-button--unelevated:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-button--raised.mdc-ripple-upgraded--background-focused::before, .mdc-ripple-upgraded--background-focused.cta-button::before, .cta-actions button.mdc-ripple-upgraded--background-focused::before, .mdc-ripple-upgraded--background-focused.flat-button::before, .mdc-ripple-upgraded--background-focused.raised-accent-button::before, #contribution-selections li a.mdc-ripple-upgraded--background-focused::before, .mdc-button--unelevated.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-button--raised.mdc-ripple-upgraded--background-active-fill::before, .mdc-ripple-upgraded--background-active-fill.cta-button::before, .cta-actions button.mdc-ripple-upgraded--background-active-fill::before, .mdc-ripple-upgraded--background-active-fill.flat-button::before, .mdc-ripple-upgraded--background-active-fill.raised-accent-button::before, #contribution-selections li a.mdc-ripple-upgraded--background-active-fill::before, .mdc-button--unelevated.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-button--raised.mdc-ripple-upgraded::after, .mdc-ripple-upgraded.cta-button::after, .cta-actions button.mdc-ripple-upgraded::after, .mdc-ripple-upgraded.flat-button::after, .mdc-ripple-upgraded.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded::after, .mdc-button--unelevated.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-button--raised.mdc-ripple-upgraded--foreground-activation::after, .mdc-ripple-upgraded--foreground-activation.cta-button::after, .cta-actions button.mdc-ripple-upgraded--foreground-activation::after, .mdc-ripple-upgraded--foreground-activation.flat-button::after, .mdc-ripple-upgraded--foreground-activation.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded--foreground-activation::after, .mdc-button--unelevated.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-button--raised.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-ripple-upgraded--foreground-deactivation.cta-button::after, .cta-actions button.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-ripple-upgraded--foreground-deactivation.flat-button::after, .mdc-ripple-upgraded--foreground-deactivation.raised-accent-button::after, #contribution-selections li a.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-button--unelevated.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

.mdc-button--raised, .cta-button, .cta-actions button, .flat-button, .raised-accent-button, #contribution-selections li a { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); will-change: box-shadow; }
.mdc-button--raised:hover, .cta-button:hover, .cta-actions button:hover, .flat-button:hover, .raised-accent-button:hover, #contribution-selections li a:hover, .mdc-button--raised:focus, .cta-button:focus, .cta-actions button:focus, .flat-button:focus, .raised-accent-button:focus, #contribution-selections li a:focus { box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }
.mdc-button--raised:active, .cta-button:active, .cta-actions button:active, .flat-button:active, .raised-accent-button:active, #contribution-selections li a:active { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }
.mdc-button--raised:disabled, .cta-button:disabled, .cta-actions button:disabled, .flat-button:disabled, .raised-accent-button:disabled, #contribution-selections li a:disabled { box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }

.mdc-button--stroked { border-style: solid; border-width: 2px; line-height: 32px; }
.mdc-button--stroked:disabled { /* @alternate */ border-color: rgba(0, 0, 0, 0.38); border-color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-button--theme-dark .mdc-button--stroked:disabled, .mdc-theme--dark .mdc-button--stroked:disabled { /* @alternate */ border-color: rgba(255, 255, 255, 0.5); border-color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-button--stroked.mdc-button--dense { line-height: 27px; }
.mdc-button--stroked:not(:disabled) { /* @alternate */ border-color: #e5c601; border-color: var(--mdc-theme-primary, #e5c601); }

.mdc-button--compact { padding: 0 8px; }

.mdc-button--dense { height: 32px; font-size: .8125rem; line-height: 32px; }

.mdc-button__icon { display: inline-block; width: 18px; height: 18px; margin-right: 8px; font-size: 18px; line-height: inherit; vertical-align: top; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
.mdc-card { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); display: flex; flex-direction: column; justify-content: flex-end; box-sizing: border-box; padding: 0; border-radius: 2px; overflow: hidden; }
.mdc-card__primary, .header-quote blockquote { padding: 16px; }
.mdc-card__primary .mdc-card__title--large, .header-quote blockquote .mdc-card__title--large { padding-top: 8px; }
.mdc-card__primary:last-child, .header-quote blockquote:last-child { padding-bottom: 24px; }
.mdc-card__supporting-text { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); box-sizing: border-box; padding: 8px 16px; }
.mdc-card--theme-dark .mdc-card__supporting-text, .mdc-theme--dark .mdc-card__supporting-text { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-card__primary + .mdc-card__supporting-text, .header-quote blockquote + .mdc-card__supporting-text { margin-top: -8px; padding-top: 0; }
.mdc-card__supporting-text:last-child { padding-bottom: 24px; }
.mdc-card__actions { display: flex; box-sizing: border-box; padding: 8px; }
.mdc-card--theme-dark .mdc-card__actions, .mdc-theme--dark .mdc-card__actions { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-card__actions .mdc-card__action { margin: 0 8px 0 0; }
[dir="rtl"] .mdc-card__actions .mdc-card__action, .mdc-card__actions .mdc-card__action[dir="rtl"] { margin: 0 0 0 8px; }
.mdc-card__actions .mdc-card__action:last-child { margin-left: 0; margin-right: 0; }
[dir="rtl"] .mdc-card__actions .mdc-card__action:last-child, .mdc-card__actions .mdc-card__action:last-child[dir="rtl"] { margin-left: 0; margin-right: 0; }
.mdc-card__actions--vertical { flex-flow: column; align-items: flex-start; }
.mdc-card__actions--vertical .mdc-card__action { margin: 0 0 4px; }
.mdc-card__actions--vertical .mdc-card__action:last-child { margin-bottom: 0; }
.mdc-card__media { display: flex; flex-direction: column; justify-content: flex-end; box-sizing: border-box; padding: 16px; }
.mdc-card__media-item { display: inline-block; width: auto; height: 80px; margin: 16px 0 0; padding: 0; }
.mdc-card__media-item--1dot5x { width: auto; height: 120px; }
.mdc-card__media-item--2x { width: auto; height: 160px; }
.mdc-card__media-item--3x { width: auto; height: 240px; }
.mdc-card__title { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); margin: -.063rem 0; }
.mdc-card--theme-dark .mdc-card__title, .mdc-theme--dark .mdc-card__title { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-card__title--large { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1.5rem; font-weight: 400; letter-spacing: normal; line-height: 2rem; text-decoration: inherit; text-transform: inherit; margin: 0; }
.mdc-card__subtitle { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); margin: -.063rem 0; }
.mdc-card--theme-dark .mdc-card__subtitle, .mdc-theme--dark .mdc-card__subtitle { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-card__horizontal-block { padding-left: 0; padding-right: 16px; display: flex; flex-direction: row; align-items: flex-start; justify-content: space-between; box-sizing: border-box; }
[dir="rtl"] .mdc-card__horizontal-block, .mdc-card__horizontal-block[dir="rtl"] { padding-left: 16px; padding-right: 0; }
.mdc-card__horizontal-block .mdc-card__actions--vertical { margin: 16px; }
.mdc-card__horizontal-block .mdc-card__media-item { margin-left: 16px; margin-right: 0; }
[dir="rtl"] .mdc-card__horizontal-block .mdc-card__media-item, .mdc-card__horizontal-block .mdc-card__media-item[dir="rtl"] { margin-left: 0; margin-right: 16px; }
.mdc-card__horizontal-block .mdc-card__media-item--3x { margin-bottom: 16px; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
@keyframes mdc-checkbox-unchecked-checked-checkmark-path { 0%,
  50% { stroke-dashoffset: 29.7833385; }
  50% { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
  100% { stroke-dashoffset: 0; } }
@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark { 0%,
  68.2% { transform: scaleX(0); }
  68.2% { animation-timing-function: cubic-bezier(0, 0, 0, 1); }
  100% { transform: scaleX(1); } }
@keyframes mdc-checkbox-checked-unchecked-checkmark-path { from { animation-timing-function: cubic-bezier(0.4, 0, 1, 1); opacity: 1; stroke-dashoffset: 0; }
  to { opacity: 0; stroke-dashoffset: -29.7833385; } }
@keyframes mdc-checkbox-checked-indeterminate-checkmark { from { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); transform: rotate(0deg); opacity: 1; }
  to { transform: rotate(45deg); opacity: 0; } }
@keyframes mdc-checkbox-indeterminate-checked-checkmark { from { animation-timing-function: cubic-bezier(0.14, 0, 0, 1); transform: rotate(45deg); opacity: 0; }
  to { transform: rotate(360deg); opacity: 1; } }
@keyframes mdc-checkbox-checked-indeterminate-mixedmark { from { animation-timing-function: mdc-animation-deceleration-curve-timing-function; transform: rotate(-45deg); opacity: 0; }
  to { transform: rotate(0deg); opacity: 1; } }
@keyframes mdc-checkbox-indeterminate-checked-mixedmark { from { animation-timing-function: cubic-bezier(0.14, 0, 0, 1); transform: rotate(0deg); opacity: 1; }
  to { transform: rotate(315deg); opacity: 0; } }
@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark { 0% { animation-timing-function: linear; transform: scaleX(1); opacity: 1; }
  32.8%,
  100% { transform: scaleX(0); opacity: 0; } }
.mdc-checkbox { display: inline-block; position: relative; flex: 0 0 18px; box-sizing: content-box; width: 18px; height: 18px; padding: 11px; line-height: 0; white-space: nowrap; cursor: pointer; vertical-align: bottom; --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
.mdc-checkbox .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background { border-color: rgba(0, 0, 0, 0.26); }
.mdc-checkbox .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background { border-color: transparent; background-color: rgba(0, 0, 0, 0.26); }
.mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background { border-color: rgba(255, 255, 255, 0.3); }
.mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background { background-color: rgba(255, 255, 255, 0.3); }
.mdc-checkbox .mdc-checkbox__checkmark__path { stroke: white !important; }
.mdc-checkbox .mdc-checkbox__mixedmark { background-color: white; }
.mdc-checkbox .mdc-checkbox__background::before { /* @alternate */ background-color: #00bcd4; }
@supports not (-ms-ime-align: auto) { .mdc-checkbox .mdc-checkbox__background::before { background-color: var(--mdc-theme-secondary, #00bcd4); } }
.mdc-checkbox::before, .mdc-checkbox::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-checkbox::before, .mdc-checkbox::after { background-color: rgba(0, 188, 212, 0.14); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-checkbox::before, .mdc-checkbox::after { background-color: color(var(--mdc-theme-secondary, #00bcd4) a(14%)); } }
.mdc-checkbox:not(.mdc-ripple-upgraded):hover::before, .mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-checkbox.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-checkbox.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-checkbox.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-checkbox::before, .mdc-checkbox::after { top: calc(50% - 50%); left: calc(50% - 50%); width: 100%; height: 100%; }
.mdc-checkbox.mdc-ripple-upgraded::before { top: calc(50% - 50%); left: calc(50% - 50%); width: 100%; height: 100%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-checkbox.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 25%)); left: var(--mdc-ripple-left, calc(50% - 25%)); width: var(--mdc-ripple-fg-size, 50%); height: var(--mdc-ripple-fg-size, 50%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-checkbox.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 50%); height: var(--mdc-ripple-fg-size, 50%); transform: scale(0); transform-origin: center center; }
.mdc-checkbox.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background { border-color: rgba(0, 0, 0, 0.54); background-color: transparent; }
.mdc-checkbox .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background, .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background { /* @alternate */ border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4); /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
@keyframes mdc-checkbox-fade-in-background-0 { 0% { border-color: rgba(0, 0, 0, 0.54); background-color: transparent; }
  50% { /* @alternate */
border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4);
    /* @alternate */
background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); } }
@keyframes mdc-checkbox-fade-out-background-0 { 0%,
    80% { /* @alternate */
border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4);
    /* @alternate */
background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
  100% { border-color: rgba(0, 0, 0, 0.54); background-color: transparent; } }
.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background { animation-name: mdc-checkbox-fade-in-background-0; }
.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background { animation-name: mdc-checkbox-fade-out-background-0; }
.mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate) ~ .mdc-checkbox__background { border-color: white; background-color: transparent; }
.mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background { /* @alternate */ border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4); /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
@keyframes mdc-checkbox-fade-in-background-1 { 0% { border-color: white; background-color: transparent; }
  50% { /* @alternate */
border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4);
    /* @alternate */
background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); } }
@keyframes mdc-checkbox-fade-out-background-1 { 0%,
    80% { /* @alternate */
border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4);
    /* @alternate */
background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
  100% { border-color: white; background-color: transparent; } }
.mdc-checkbox--theme-dark.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background { animation-name: mdc-checkbox-fade-in-background-1; }
.mdc-checkbox--theme-dark.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background, .mdc-theme--dark .mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background { animation-name: mdc-checkbox-fade-out-background-1; }

.mdc-checkbox--disabled { cursor: default; pointer-events: none; }

.mdc-checkbox--upgraded .mdc-checkbox__background, .mdc-checkbox--upgraded .mdc-checkbox__checkmark, .mdc-checkbox--upgraded .mdc-checkbox__checkmark__path, .mdc-checkbox--upgraded .mdc-checkbox__mixedmark { transition: none !important; }

.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background, .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background { animation-duration: 180ms; animation-timing-function: linear; }
.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark__path { animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path; transition: none; }
.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark { animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark; transition: none; }
.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark__path { animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path; transition: none; }
.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark { animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark; transition: none; }
.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark { animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark; transition: none; }
.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark { animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark; transition: none; }
.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark { animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark; transition: none; }
.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark { animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark; transition: none; }

.mdc-checkbox__background { position: absolute; top: 0; right: 0; bottom: 0; left: 0; left: 11px; right: initial; display: inline-flex; top: 11px; align-items: center; justify-content: center; box-sizing: border-box; width: 45%; height: 45%; transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border: 2px solid currentColor; border-radius: 2px; background-color: transparent; pointer-events: none; will-change: background-color, border-color; }
[dir="rtl"] .mdc-checkbox .mdc-checkbox__background, .mdc-checkbox[dir="rtl"] .mdc-checkbox__background { left: initial; right: 11px; }
.mdc-checkbox__native-control:enabled:checked ~ .mdc-checkbox__background, .mdc-checkbox__native-control:enabled:indeterminate ~ .mdc-checkbox__background { transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1); }

.mdc-checkbox__background::before { position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%; transform: scale(0, 0); transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-radius: 50%; opacity: 0; pointer-events: none; content: ""; will-change: opacity, transform; }
.mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before { transform: scale(2.75, 2.75); transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: 0.26; }
.mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before { content: none; }

.mdc-checkbox__native-control { position: absolute; top: 0; left: 0; width: 100%; height: 100%; margin: 0; padding: 0; opacity: 0; cursor: inherit; }
.mdc-checkbox__native-control:disabled { cursor: default; pointer-events: none; }

.mdc-checkbox__checkmark { position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1); opacity: 0; }
.mdc-checkbox--upgraded .mdc-checkbox__checkmark { opacity: 1; }
.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark { transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: 1; }
.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark { transform: rotate(45deg); transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1); opacity: 0; }

.mdc-checkbox__checkmark__path { transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1); stroke-width: 3.12px; stroke-dashoffset: 29.7833385; stroke-dasharray: 29.7833385; }
.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path, .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path { stroke-dashoffset: 0; }

.mdc-checkbox__mixedmark { width: 100%; height: 2px; transform: scaleX(0) rotate(0deg); transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1); opacity: 0; }
.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark { transform: scaleX(1) rotate(-45deg); }
.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark { transform: scaleX(1) rotate(0deg); opacity: 1; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
:root { --mdc-dialog-dark-theme-bg-color: #303030; }

.mdc-dialog { display: flex; position: fixed; top: 0; left: 0; align-items: center; justify-content: center; width: 100%; height: 100%; visibility: hidden; z-index: 5; }
.mdc-dialog__backdrop { /* @alternate */ background-color: rgba(0, 0, 0, 0.87); background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); position: fixed; top: 0; left: 0; align-items: center; justify-content: center; width: 100%; height: 100%; opacity: 0; z-index: -1; }
.mdc-dialog__surface { box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); /* @alternate */ background-color: #fff; background-color: var(--mdc-theme-background, #fff); display: inline-flex; flex-direction: column; width: calc(100% - 30px); min-width: 640px; max-width: 865px; transform: translateY(150px) scale(0.8); border-radius: 2px; opacity: 0; }
.mdc-dialog--theme-dark .mdc-dialog__surface, .mdc-theme--dark .mdc-dialog__surface { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); background-color: #303030; background-color: var(--mdc-dialog-dark-theme-bg-color, #303030); }
[dir="rtl"] .mdc-dialog .mdc-dialog__surface, .mdc-dialog[dir="rtl"] .mdc-dialog__surface { text-align: right; }
.mdc-dialog__header { display: flex; align-items: center; padding: 24px 24px 0; }
.mdc-dialog__header__empty { padding: 0; }
[dir="rtl"] .mdc-dialog .mdc-dialog__header, .mdc-dialog[dir="rtl"] .mdc-dialog__header { text-align: right; }
.mdc-dialog__header__title { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1.25rem; font-weight: 500; letter-spacing: 0.02em; line-height: 2rem; text-decoration: inherit; text-transform: inherit; flex: 1; margin: 0; }
.mdc-dialog__body { /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; margin-top: 20px; padding: 0 24px 24px; }
.mdc-dialog--theme-dark.mdc-dialog__body, .mdc-theme--dark .mdc-dialog__body { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-dialog__body--scrollable { max-height: 195px; border-top: 1px solid rgba(0, 0, 0, 0.1); border-bottom: 1px solid rgba(0, 0, 0, 0.1); overflow-x: auto; overflow-y: scroll; -webkit-overflow-scrolling: touch; }
.mdc-dialog__footer { display: flex; flex-wrap: wrap; align-items: center; justify-content: flex-end; padding: 8px; }
.mdc-dialog__footer__button { margin-left: 0; margin-right: 8px; }
[dir="rtl"] .mdc-dialog__footer__button, .mdc-dialog__footer__button[dir="rtl"] { margin-left: 8px; margin-right: 0; }
.mdc-dialog__footer__button:last-child { margin-left: 0; margin-right: 0; }
[dir="rtl"] .mdc-dialog__footer__button:last-child, .mdc-dialog__footer__button:last-child[dir="rtl"] { margin-left: 0; margin-right: 0; }
.mdc-dialog__action { /* @alternate */ color: #00bcd4; color: var(--mdc-theme-secondary, #00bcd4); }
@media (max-width: 640px) { .mdc-dialog { min-width: 280px; }
  .mdc-dialog__surface { min-width: 280px; }
  .mdc-dialog__body { line-height: 24px; } }
.mdc-dialog--animating { visibility: visible; }
.mdc-dialog--animating .mdc-dialog__backdrop { transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-dialog--animating .mdc-dialog--open .mdc-dialog__surface { transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-dialog--animating .mdc-dialog__surface { transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-dialog--open { visibility: visible; }
.mdc-dialog--open .mdc-dialog__backdrop { opacity: .3; }
.mdc-dialog--open .mdc-dialog__surface { transform: translateY(0) scale(1); opacity: 1; }

.mdc-dialog-scroll-lock { height: 100vh; overflow: hidden; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
:root { --mdc-persistent-drawer-dark-theme-bg-color: #212121; }

.mdc-persistent-drawer { /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */ /* TODO(sgomes): Revisit when we have interactive lists. */ width: 0; }
.mdc-persistent-drawer__toolbar-spacer { display: flex; position: relative; flex-direction: row; flex-shrink: 0; align-items: center; box-sizing: border-box; height: 56px; padding: 16px; border-bottom: 1px solid rgba(0, 0, 0, 0.12); /* TODO(sgomes): replace with global breakpoints when we have them */ }
.mdc-persistent-drawer__toolbar-spacer--theme-dark .mdc-persistent-drawer__toolbar-spacer, .mdc-theme--dark .mdc-persistent-drawer__toolbar-spacer { border-bottom: 1px solid rgba(255, 255, 255, 0.12); }
@media (min-width: 600px) { .mdc-persistent-drawer__toolbar-spacer { height: 64px; } }
.mdc-persistent-drawer__header { position: relative; }
.mdc-persistent-drawer__header::before { display: block; padding-top: 56.25%; content: ""; }
.mdc-persistent-drawer__header-content { display: flex; position: absolute; top: 0; right: 0; bottom: 0; left: 0; align-items: flex-end; box-sizing: border-box; padding: 16px; }
.mdc-persistent-drawer .mdc-list-group, .mdc-persistent-drawer .mdc-list { padding-right: 0; padding-left: 0; }
.mdc-persistent-drawer .mdc-list-item { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; position: relative; padding: 0 16px; outline: none; color: inherit; text-decoration: none; }
.mdc-persistent-drawer .mdc-list-item.mdc-ripple-upgraded { left: 0; }
.mdc-persistent-drawer .mdc-list-item__start-detail { color: rgba(0, 0, 0, 0.54); }
.mdc-persistent-drawer .mdc-list-item__start-detail--theme-dark .mdc-persistent-drawer .mdc-list-item__start-detail, .mdc-theme--dark .mdc-persistent-drawer .mdc-list-item__start-detail { color: rgba(255, 255, 255, 0.54); }
.mdc-persistent-drawer--selected.mdc-list-item, .mdc-persistent-drawer--selected.mdc-list-item .mdc-list-item__start-detail { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-persistent-drawer .mdc-list-item::before { position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-radius: inherit; background: currentColor; opacity: 0; content: ""; }
.mdc-persistent-drawer .mdc-list-item:focus::before { transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .12; }
.mdc-persistent-drawer .mdc-list-item:active::before { /* Slightly darker value for visual distinction. This allows a full base that has distinct modes. Progressive enhancement with ripples will provide complete button spec alignment.
*/ transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .18; }
.mdc-persistent-drawer .mdc-list-item:active:focus::before { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
.mdc-persistent-drawer__drawer { /* @alternate */ background: #fff; background: var(--mdc-theme-background, #fff); border-left: 0; border-right: 1px solid #e4e4e4; left: 0; right: initial; height: 100%; transform: translateX(-107%); transform: translateX(calc(-100% - 20px)); will-change: transform; display: inline-flex; flex-direction: column; box-sizing: border-box; width: 240px; overflow: hidden; touch-action: none; }
[dir="rtl"] .mdc-persistent-drawer__drawer, .mdc-persistent-drawer__drawer[dir="rtl"] { border-left: 1px solid #e4e4e4; border-right: 0; }
[dir="rtl"] .mdc-persistent-drawer__drawer, .mdc-persistent-drawer__drawer[dir="rtl"] { left: initial; right: 0; }
.mdc-persistent-drawer__drawer--theme-dark, .mdc-theme--dark .mdc-persistent-drawer__drawer { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); border-left: 0; border-right: 1px solid rgba(255, 255, 255, 0.12); background-color: #212121; background-color: var(--mdc-persistent-drawer-dark-theme-bg-color, #212121); }
[dir="rtl"] .mdc-persistent-drawer__drawer--theme-dark, .mdc-persistent-drawer__drawer--theme-dark[dir="rtl"], [dir="rtl"] .mdc-theme--dark .mdc-persistent-drawer__drawer, .mdc-theme--dark .mdc-persistent-drawer__drawer[dir="rtl"] { border-left: 1px solid rgba(255, 255, 255, 0.12); border-right: 0; }
[dir="rtl"] .mdc-persistent-drawer .mdc-persistent-drawer__drawer, .mdc-persistent-drawer[dir="rtl"] .mdc-persistent-drawer__drawer { transform: translateX(107%); transform: translateX(calc(100% + 20px)); }
.mdc-persistent-drawer--animating .mdc-persistent-drawer__drawer { transition: transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1); }
.mdc-persistent-drawer--animating.mdc-persistent-drawer--open .mdc-persistent-drawer__drawer { transition: transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-persistent-drawer--open { width: 240px; pointer-events: auto; }
.mdc-persistent-drawer--open .mdc-persistent-drawer__drawer { transform: none; }
[dir="rtl"] .mdc-persistent-drawer--open .mdc-persistent-drawer__drawer, .mdc-persistent-drawer--open[dir="rtl"] .mdc-persistent-drawer__drawer { transform: none; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
:root { --mdc-permanent-drawer-dark-theme-bg-color: #212121; }

.mdc-permanent-drawer { /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */ /* TODO(sgomes): Revisit when we have interactive lists. */ /* @alternate */ background: #fff; background: var(--mdc-theme-background, #fff); border-left: 0; border-right: 1px solid #e4e4e4; left: 0; right: initial; display: inline-flex; flex: 0 0 auto; flex-direction: column; box-sizing: border-box; width: 240px; overflow: hidden; }
.mdc-permanent-drawer__toolbar-spacer { display: flex; position: relative; flex-direction: row; flex-shrink: 0; align-items: center; box-sizing: border-box; height: 56px; padding: 16px; border-bottom: 1px solid rgba(0, 0, 0, 0.12); /* TODO(sgomes): replace with global breakpoints when we have them */ }
.mdc-permanent-drawer__toolbar-spacer--theme-dark .mdc-permanent-drawer__toolbar-spacer, .mdc-theme--dark .mdc-permanent-drawer__toolbar-spacer { border-bottom: 1px solid rgba(255, 255, 255, 0.12); }
@media (min-width: 600px) { .mdc-permanent-drawer__toolbar-spacer { height: 64px; } }
.mdc-permanent-drawer__header { position: relative; }
.mdc-permanent-drawer__header::before { display: block; padding-top: 56.25%; content: ""; }
.mdc-permanent-drawer__header-content { display: flex; position: absolute; top: 0; right: 0; bottom: 0; left: 0; align-items: flex-end; box-sizing: border-box; padding: 16px; }
.mdc-permanent-drawer .mdc-list-group, .mdc-permanent-drawer .mdc-list { padding-right: 0; padding-left: 0; }
.mdc-permanent-drawer .mdc-list-item { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; position: relative; padding: 0 16px; outline: none; color: inherit; text-decoration: none; }
.mdc-permanent-drawer .mdc-list-item.mdc-ripple-upgraded { left: 0; }
.mdc-permanent-drawer .mdc-list-item__start-detail { color: rgba(0, 0, 0, 0.54); }
.mdc-permanent-drawer .mdc-list-item__start-detail--theme-dark .mdc-permanent-drawer .mdc-list-item__start-detail, .mdc-theme--dark .mdc-permanent-drawer .mdc-list-item__start-detail { color: rgba(255, 255, 255, 0.54); }
.mdc-permanent-drawer--selected.mdc-list-item, .mdc-permanent-drawer--selected.mdc-list-item .mdc-list-item__start-detail { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-permanent-drawer .mdc-list-item::before { position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-radius: inherit; background: currentColor; opacity: 0; content: ""; }
.mdc-permanent-drawer .mdc-list-item:focus::before { transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .12; }
.mdc-permanent-drawer .mdc-list-item:active::before { /* Slightly darker value for visual distinction. This allows a full base that has distinct modes. Progressive enhancement with ripples will provide complete button spec alignment.
*/ transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .18; }
.mdc-permanent-drawer .mdc-list-item:active:focus::before { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
[dir="rtl"] .mdc-permanent-drawer, .mdc-permanent-drawer[dir="rtl"] { border-left: 1px solid #e4e4e4; border-right: 0; }
[dir="rtl"] .mdc-permanent-drawer, .mdc-permanent-drawer[dir="rtl"] { left: initial; right: 0; }
.mdc-permanent-drawer--theme-dark, .mdc-theme--dark .mdc-permanent-drawer { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); border-left: 0; border-right: 1px solid rgba(255, 255, 255, 0.12); background-color: #212121; background-color: var(--mdc-permanent-drawer-dark-theme-bg-color, #212121); }
[dir="rtl"] .mdc-permanent-drawer--theme-dark, .mdc-permanent-drawer--theme-dark[dir="rtl"], [dir="rtl"] .mdc-theme--dark .mdc-permanent-drawer, .mdc-theme--dark .mdc-permanent-drawer[dir="rtl"] { border-left: 1px solid rgba(255, 255, 255, 0.12); border-right: 0; }
.mdc-permanent-drawer--floating { border-left: 0; border-right: none; background: none; }
[dir="rtl"] .mdc-permanent-drawer--floating, .mdc-permanent-drawer--floating[dir="rtl"] { border-left: none; border-right: 0; }
.mdc-permanent-drawer--floating--theme-dark, .mdc-theme--dark .mdc-permanent-drawer--floating { border-left: 0; border-right: none; background: none; }
[dir="rtl"] .mdc-permanent-drawer--floating--theme-dark, .mdc-permanent-drawer--floating--theme-dark[dir="rtl"], [dir="rtl"] .mdc-theme--dark .mdc-permanent-drawer--floating, .mdc-theme--dark .mdc-permanent-drawer--floating[dir="rtl"] { border-left: none; border-right: 0; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
.mdc-temporary-drawer { /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */ /* TODO(sgomes): Revisit when we have interactive lists. */ position: fixed; top: 0; left: 0; box-sizing: border-box; width: 100%; height: 100%; pointer-events: none; overflow: hidden; contain: strict; z-index: 5; /* Shaded background */ }
.mdc-temporary-drawer__toolbar-spacer { display: flex; position: relative; flex-direction: row; flex-shrink: 0; align-items: center; box-sizing: border-box; height: 56px; padding: 16px; border-bottom: 1px solid rgba(0, 0, 0, 0.12); /* TODO(sgomes): replace with global breakpoints when we have them */ }
.mdc-temporary-drawer__toolbar-spacer--theme-dark .mdc-temporary-drawer__toolbar-spacer, .mdc-theme--dark .mdc-temporary-drawer__toolbar-spacer { border-bottom: 1px solid rgba(255, 255, 255, 0.12); }
@media (min-width: 600px) { .mdc-temporary-drawer__toolbar-spacer { height: 64px; } }
.mdc-temporary-drawer__header { position: relative; }
.mdc-temporary-drawer__header::before { display: block; padding-top: 56.25%; content: ""; }
.mdc-temporary-drawer__header-content { display: flex; position: absolute; top: 0; right: 0; bottom: 0; left: 0; align-items: flex-end; box-sizing: border-box; padding: 16px; }
.mdc-temporary-drawer .mdc-list-group, .mdc-temporary-drawer .mdc-list { padding-right: 0; padding-left: 0; }
.mdc-temporary-drawer .mdc-list-item { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; position: relative; padding: 0 16px; outline: none; color: inherit; text-decoration: none; }
.mdc-temporary-drawer .mdc-list-item.mdc-ripple-upgraded { left: 0; }
.mdc-temporary-drawer .mdc-list-item__start-detail { color: rgba(0, 0, 0, 0.54); }
.mdc-temporary-drawer .mdc-list-item__start-detail--theme-dark .mdc-temporary-drawer .mdc-list-item__start-detail, .mdc-theme--dark .mdc-temporary-drawer .mdc-list-item__start-detail { color: rgba(255, 255, 255, 0.54); }
.mdc-temporary-drawer--selected.mdc-list-item, .mdc-temporary-drawer--selected.mdc-list-item .mdc-list-item__start-detail { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-temporary-drawer .mdc-list-item::before { position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-radius: inherit; background: currentColor; opacity: 0; content: ""; }
.mdc-temporary-drawer .mdc-list-item:focus::before { transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .12; }
.mdc-temporary-drawer .mdc-list-item:active::before { /* Slightly darker value for visual distinction. This allows a full base that has distinct modes. Progressive enhancement with ripples will provide complete button spec alignment.
*/ transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .18; }
.mdc-temporary-drawer .mdc-list-item:active:focus::before { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
.mdc-temporary-drawer::before { display: block; position: absolute; top: 0; left: 0; box-sizing: border-box; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.6); opacity: 0; opacity: var(--mdc-temporary-drawer-opacity, 0); content: ""; will-change: opacity; }
.mdc-temporary-drawer__drawer { /* @alternate */ background: #fff; background: var(--mdc-theme-background, #fff); box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); left: 0; right: initial; height: 100%; transform: translateX(-107%); transform: translateX(calc(-100% - 20px)); will-change: transform; display: flex; position: absolute; flex-direction: column; box-sizing: border-box; width: calc(100% - 56px); max-width: 280px; overflow: hidden; touch-action: none; /* TODO(sgomes): replace with global breakpoints when we have them */ }
[dir="rtl"] .mdc-temporary-drawer__drawer, .mdc-temporary-drawer__drawer[dir="rtl"] { left: initial; right: 0; }
.mdc-temporary-drawer--theme-dark .mdc-temporary-drawer__drawer, .mdc-theme--dark .mdc-temporary-drawer__drawer { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); background: #303030; }
[dir="rtl"] .mdc-temporary-drawer .mdc-temporary-drawer__drawer, .mdc-temporary-drawer[dir="rtl"] .mdc-temporary-drawer__drawer { transform: translateX(107%); transform: translateX(calc(100% + 20px)); }
@media (min-width: 600px) { .mdc-temporary-drawer__drawer { width: calc(100% - 64px); max-width: 320px; } }
.mdc-temporary-drawer__content { flex-grow: 1; box-sizing: border-box; margin: 0; overflow-x: hidden; overflow-y: auto; -webkit-overflow-scrolling: touch; touch-action: pan-y; }
.mdc-temporary-drawer__footer { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); flex-shrink: 0; }
.mdc-temporary-drawer--animating::before { transition: opacity 0.3s 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-temporary-drawer--animating.mdc-temporary-drawer--open .mdc-temporary-drawer__drawer { transition: transform 0.225s 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-temporary-drawer--animating .mdc-temporary-drawer__drawer { transition: transform 0.195s 0ms cubic-bezier(0.4, 0, 0.6, 1); }
.mdc-temporary-drawer--open { pointer-events: auto; }
.mdc-temporary-drawer--open::before { opacity: 1; opacity: var(--mdc-temporary-drawer-opacity, 1); }
.mdc-temporary-drawer--open .mdc-temporary-drawer__drawer { transform: none; }
[dir="rtl"] .mdc-temporary-drawer--open .mdc-temporary-drawer__drawer, .mdc-temporary-drawer--open[dir="rtl"] .mdc-temporary-drawer__drawer { transform: none; }

.mdc-drawer-scroll-lock { height: 100vh; overflow: hidden; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
.mdc-elevation--z0 { box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z1 { box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z2 { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z3 { box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z4 { box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z5 { box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z6 { box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z7 { box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z8 { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z9 { box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z10 { box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z11 { box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z12 { box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z13 { box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z14 { box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z15 { box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z16 { box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z17 { box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z18 { box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z19 { box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z20 { box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z21 { box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z22 { box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z23 { box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }

.mdc-elevation--z24 { box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }

.mdc-elevation-transition { transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); will-change: box-shadow; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
.mdc-fab { --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); display: inline-flex; position: relative; justify-content: center; box-sizing: border-box; width: 56px; height: 56px; padding: 0; transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), opacity 15ms linear 30ms, transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1); border: none; border-radius: 50%; fill: currentColor; cursor: pointer; user-select: none; -moz-appearance: none; -webkit-appearance: none; overflow: hidden; /* @alternate */ background-color: #00bcd4; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-secondary, rgba(0, 0, 0, 0.87)); }
.mdc-fab::before, .mdc-fab::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-fab::before, .mdc-fab::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-fab.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-fab.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-fab.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-fab.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-fab:hover, .mdc-fab:focus { box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }
.mdc-fab:active { box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }
.mdc-fab:active, .mdc-fab:focus { outline: none; }
.mdc-fab:hover { cursor: pointer; }
.mdc-fab::-moz-focus-inner { padding: 0; border: 0; }
.mdc-fab > svg { width: 100%; }
@supports not (-ms-ime-align: auto) { .mdc-fab { background-color: var(--mdc-theme-secondary, #00bcd4); } }
.mdc-fab::before, .mdc-fab::after { background-color: rgba(0, 0, 0, 0.16); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-fab::before, .mdc-fab::after { background-color: color(var(--mdc-theme-text-primary-on-secondary, rgba(0, 0, 0, 0.87)) a(16%)); } }
.mdc-fab:not(.mdc-ripple-upgraded):hover::before, .mdc-fab:not(.mdc-ripple-upgraded):focus::before, .mdc-fab:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-fab.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-fab.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-fab.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-fab.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-fab.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-fab:not(.mdc-ripple-upgraded) { -webkit-tap-highlight-color: rgba(0, 0, 0, 0.18); }

.mdc-fab--mini { width: 40px; height: 40px; }

.mdc-fab__icon { display: flex; align-items: center; justify-content: center; width: 100%; transition: transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1); will-change: transform; }

.mdc-fab--exited { transform: scale(0); transition: opacity 15ms linear 150ms, transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1); opacity: 0; }
.mdc-fab--exited .mdc-fab__icon { transform: scale(0); transition: transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1); }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* stylelint-disable selector-max-type */
.mdc-form-field { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); display: inline-flex; align-items: center; vertical-align: middle; }
.mdc-form-field--theme-dark, .mdc-theme--dark .mdc-form-field { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-form-field > label { order: 0; margin-right: auto; padding-left: 4px; }
[dir="rtl"] .mdc-form-field > label, .mdc-form-field[dir="rtl"] > label { margin-left: auto; padding-right: 4px; }

.mdc-form-field--align-end > label { order: -1; margin-left: auto; padding-right: 4px; }
[dir="rtl"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir="rtl"] > label { margin-right: auto; padding-left: 4px; }

/* stylelint-enable selector-max-type */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-grid-list .mdc-grid-tile__primary { padding-bottom: calc(100% / 1); }
.mdc-grid-list .mdc-grid-tile { margin: 2px 0; padding: 0 2px; }
.mdc-grid-list .mdc-grid-tile__secondary { left: 2px; width: calc(100% - 4px); }
.mdc-grid-list .mdc-grid-list__tiles { margin: 2px auto; }
.mdc-grid-list__tiles { display: flex; flex-flow: row wrap; margin: 0; padding: 0; }

.mdc-grid-list--tile-gutter-1 .mdc-grid-tile { margin: 0.5px 0; padding: 0 0.5px; }
.mdc-grid-list--tile-gutter-1 .mdc-grid-tile__secondary { left: 0.5px; width: calc(100% - 1px); }
.mdc-grid-list--tile-gutter-1 .mdc-grid-list__tiles { margin: 0.5px auto; }

.mdc-grid-list--tile-aspect-16x9 .mdc-grid-tile__primary { padding-bottom: calc(100% / 1.7777777778); }

.mdc-grid-list--tile-aspect-3x2 .mdc-grid-tile__primary { padding-bottom: calc(100% / 1.5); }

.mdc-grid-list--tile-aspect-2x3 .mdc-grid-tile__primary { padding-bottom: calc(100% / 0.6666666667); }

.mdc-grid-list--tile-aspect-4x3 .mdc-grid-tile__primary { padding-bottom: calc(100% / 1.3333333333); }

.mdc-grid-list--tile-aspect-3x4 .mdc-grid-tile__primary { padding-bottom: calc(100% / 0.75); }

.mdc-grid-list--twoline-caption .mdc-grid-tile__secondary { height: 68px; }

.mdc-grid-list--header-caption .mdc-grid-tile__secondary { top: 0; bottom: auto; }

.mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary { padding-left: 56px; padding-right: 8px; }
[dir="rtl"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary, .mdc-grid-list[dir="rtl"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary { padding-left: 8px; padding-right: 56px; }
.mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon { left: 16px; right: initial; font-size: 24px; }
[dir="rtl"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon, .mdc-grid-list[dir="rtl"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon { left: initial; right: 16px; }

.mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary { padding-left: 16px; padding-right: 56px; }
[dir="rtl"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary, .mdc-grid-list[dir="rtl"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary { padding-left: 56px; padding-right: 16px; }
.mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon { left: initial; right: 16px; font-size: 24px; }
[dir="rtl"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon, .mdc-grid-list[dir="rtl"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon { left: 16px; right: initial; }

.mdc-grid-tile { display: block; position: relative; /* @alternate */ width: 200px; width: var(--mdc-grid-list-tile-width, 200px); }
.mdc-grid-tile__primary { /* @alternate */ background-color: #fff; background-color: var(--mdc-theme-background, #fff); /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); position: relative; height: 0; }
.mdc-grid-tile__primary-content { position: absolute; top: 0; right: 0; bottom: 0; left: 0; width: 100%; height: 100%; background-repeat: no-repeat; background-position: center; background-size: cover; }
.mdc-grid-tile__secondary { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); position: absolute; bottom: 0; box-sizing: border-box; height: 48px; padding: 16px; }
.mdc-grid-tile__title { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block; margin: 0; padding: 0; font-size: 1rem; font-weight: 500; line-height: 1rem; }
.mdc-grid-tile__support-text { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block; margin: 0; margin-top: 4px; padding: 0; }
.mdc-grid-tile__icon { position: absolute; top: calc(50% - 24px / 2); font-size: 0; }

/** postcss-bem-linter: define icon-toggle */
.mdc-icon-toggle { /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); display: flex; position: relative; align-items: center; justify-content: center; box-sizing: border-box; width: 48px; height: 48px; padding: 12px; outline: none; font-size: 1.5rem; cursor: pointer; user-select: none; will-change: initial; }
.mdc-icon-toggle::before, .mdc-icon-toggle::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-icon-toggle::before, .mdc-icon-toggle::after { background-color: rgba(0, 0, 0, 0.062); opacity: 0; }
.mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-icon-toggle.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-icon-toggle::before, .mdc-icon-toggle::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-icon-toggle.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-icon-toggle.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle::before, .mdc-icon-toggle--theme-dark.mdc-icon-toggle::after, .mdc-theme--dark .mdc-icon-toggle::before, .mdc-theme--dark .mdc-icon-toggle::after { background-color: rgba(255, 255, 255, 0.16); opacity: 0; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle--theme-dark.mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle--theme-dark.mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after, .mdc-theme--dark .mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, .mdc-theme--dark .mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-theme--dark .mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before, .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before, .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after, .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-icon-toggle::after { position: absolute; border-radius: 50%; opacity: 0; pointer-events: none; content: ""; }
.mdc-icon-toggle--theme-dark, .mdc-theme--dark .mdc-icon-toggle { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }

.mdc-icon-toggle--primary { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-icon-toggle--primary::before, .mdc-icon-toggle--primary::after { background-color: rgba(229, 198, 1, 0.14); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-icon-toggle--primary::before, .mdc-icon-toggle--primary::after { background-color: color(var(--mdc-theme-primary, #e5c601) a(14%)); } }
.mdc-icon-toggle--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle--primary:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-icon-toggle--primary.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-icon-toggle--primary.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-icon-toggle--primary.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

.mdc-icon-toggle--accent { /* @alternate */ color: #00bcd4; color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-icon-toggle--accent::before, .mdc-icon-toggle--accent::after { background-color: rgba(0, 188, 212, 0.14); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-icon-toggle--accent::before, .mdc-icon-toggle--accent::after { background-color: color(var(--mdc-theme-secondary, #00bcd4) a(14%)); } }
.mdc-icon-toggle--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle--accent:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-icon-toggle--accent.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-icon-toggle--accent.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-icon-toggle--accent.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

.mdc-icon-toggle--disabled { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); pointer-events: none; }
.mdc-icon-toggle--theme-dark.mdc-icon-toggle--disabled, .mdc-theme--dark .mdc-icon-toggle--disabled { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }

/** postcss-bem-linter: end */
:root { --mdc-layout-grid-margin-desktop: 24px; --mdc-layout-grid-gutter-desktop: 24px; --mdc-layout-grid-column-width-desktop: 72px; --mdc-layout-grid-margin-tablet: 16px; --mdc-layout-grid-gutter-tablet: 16px; --mdc-layout-grid-column-width-tablet: 72px; --mdc-layout-grid-margin-phone: 16px; --mdc-layout-grid-gutter-phone: 16px; --mdc-layout-grid-column-width-phone: 72px; }

@media (min-width: 840px) { .mdc-layout-grid, header, main, #who-we-are, #meet-us, #get-involved { box-sizing: border-box; margin: 0 auto; padding: 24px; padding: var(--mdc-layout-grid-margin-desktop, 24px); } }
@media (min-width: 480px) and (max-width: 839px) { .mdc-layout-grid, header, main, #who-we-are, #meet-us, #get-involved { box-sizing: border-box; margin: 0 auto; padding: 16px; padding: var(--mdc-layout-grid-margin-tablet, 16px); } }
@media (max-width: 479px) { .mdc-layout-grid, header, main, #who-we-are, #meet-us, #get-involved { box-sizing: border-box; margin: 0 auto; padding: 16px; padding: var(--mdc-layout-grid-margin-phone, 16px); } }

@media (min-width: 840px) { .mdc-layout-grid__inner, header div, .header-quote, main section, #stay-in-contact form, #contribute form { display: flex; flex-flow: row wrap; align-items: stretch; margin: -12px; margin: calc(var(--mdc-layout-grid-gutter-desktop, 24px) / 2 * -1); }
  @supports (display: grid) { .mdc-layout-grid__inner, header div, .header-quote, main section, #stay-in-contact form, #contribute form { display: grid; margin: 0; grid-gap: 24px; grid-gap: var(--mdc-layout-grid-gutter-desktop, 24px); grid-template-columns: repeat(12, minmax(0, 1fr)); } } }
@media (min-width: 480px) and (max-width: 839px) { .mdc-layout-grid__inner, header div, .header-quote, main section, #stay-in-contact form, #contribute form { display: flex; flex-flow: row wrap; align-items: stretch; margin: -8px; margin: calc(var(--mdc-layout-grid-gutter-tablet, 16px) / 2 * -1); }
  @supports (display: grid) { .mdc-layout-grid__inner, header div, .header-quote, main section, #stay-in-contact form, #contribute form { display: grid; margin: 0; grid-gap: 16px; grid-gap: var(--mdc-layout-grid-gutter-tablet, 16px); grid-template-columns: repeat(8, minmax(0, 1fr)); } } }
@media (max-width: 479px) { .mdc-layout-grid__inner, header div, .header-quote, main section, #stay-in-contact form, #contribute form { display: flex; flex-flow: row wrap; align-items: stretch; margin: -8px; margin: calc(var(--mdc-layout-grid-gutter-phone, 16px) / 2 * -1); }
  @supports (display: grid) { .mdc-layout-grid__inner, header div, .header-quote, main section, #stay-in-contact form, #contribute form { display: grid; margin: 0; grid-gap: 16px; grid-gap: var(--mdc-layout-grid-gutter-phone, 16px); grid-template-columns: repeat(4, minmax(0, 1fr)); } } }

@media (min-width: 840px) { .mdc-layout-grid__cell, #intro-section div { width: calc(33.3333333333% - 24px); width: calc(33.3333333333% - var(--mdc-layout-grid-gutter-desktop, 24px)); box-sizing: border-box; margin: 12px; margin: calc(var(--mdc-layout-grid-gutter-desktop, 24px) / 2); }
  @supports (display: grid) { .mdc-layout-grid__cell, #intro-section div { width: auto; grid-column-end: span 4; } }
  @supports (display: grid) { .mdc-layout-grid__cell, #intro-section div { margin: 0; } }
  .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-desktop { width: calc(8.3333333333% - 24px); width: calc(8.3333333333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-desktop { width: auto; grid-column-end: span 1; } }
  .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-desktop { width: calc(16.6666666667% - 24px); width: calc(16.6666666667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-desktop { width: auto; grid-column-end: span 2; } }
  .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-desktop { width: calc(25% - 24px); width: calc(25% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-desktop { width: auto; grid-column-end: span 3; } }
  .mdc-layout-grid__cell--span-4, .cta-actions, #who-we-are header, #meet-us header, #get-involved header, .mdc-layout-grid__cell--span-4-desktop { width: calc(33.3333333333% - 24px); width: calc(33.3333333333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-4, .cta-actions, #who-we-are header, #meet-us header, #get-involved header, .mdc-layout-grid__cell--span-4-desktop { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-desktop { width: calc(41.6666666667% - 24px); width: calc(41.6666666667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-desktop { width: auto; grid-column-end: span 5; } }
  .mdc-layout-grid__cell--span-6, header div h1, #cta-section div, .input-field, .mdc-layout-grid__cell--span-6-desktop { width: calc(50% - 24px); width: calc(50% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-6, header div h1, #cta-section div, .input-field, .mdc-layout-grid__cell--span-6-desktop { width: auto; grid-column-end: span 6; } }
  .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-desktop { width: calc(58.3333333333% - 24px); width: calc(58.3333333333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-desktop { width: auto; grid-column-end: span 7; } }
  .mdc-layout-grid__cell--span-8, .helper-info, #who-we-are div, #meet-us div, #get-involved div, #who-we-are footer, #meet-us footer, #get-involved footer, .mdc-layout-grid__cell--span-8-desktop { width: calc(66.6666666667% - 24px); width: calc(66.6666666667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-8, .helper-info, #who-we-are div, #meet-us div, #get-involved div, #who-we-are footer, #meet-us footer, #get-involved footer, .mdc-layout-grid__cell--span-8-desktop { width: auto; grid-column-end: span 8; } }
  .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-desktop { width: calc(75% - 24px); width: calc(75% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-desktop { width: auto; grid-column-end: span 9; } }
  .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-desktop { width: calc(83.3333333333% - 24px); width: calc(83.3333333333% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-desktop { width: auto; grid-column-end: span 10; } }
  .mdc-layout-grid__cell--span-11, #contribution-selections, .mdc-layout-grid__cell--span-11-desktop { width: calc(91.6666666667% - 24px); width: calc(91.6666666667% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-11, #contribution-selections, .mdc-layout-grid__cell--span-11-desktop { width: auto; grid-column-end: span 11; } }
  .mdc-layout-grid__cell--span-12, .header-quote blockquote, .mdc-layout-grid__cell--span-12-desktop { width: calc(100% - 24px); width: calc(100% - var(--mdc-layout-grid-gutter-desktop, 24px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-12, .header-quote blockquote, .mdc-layout-grid__cell--span-12-desktop { width: auto; grid-column-end: span 12; } } }
@media (min-width: 480px) and (max-width: 839px) { .mdc-layout-grid__cell, #intro-section div { width: calc(50% - 16px); width: calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px)); box-sizing: border-box; margin: 8px; margin: calc(var(--mdc-layout-grid-gutter-tablet, 16px) / 2); }
  @supports (display: grid) { .mdc-layout-grid__cell, #intro-section div { width: auto; grid-column-end: span 4; } }
  @supports (display: grid) { .mdc-layout-grid__cell, #intro-section div { margin: 0; } }
  .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-tablet { width: calc(12.5% - 16px); width: calc(12.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-tablet { width: auto; grid-column-end: span 1; } }
  .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-tablet { width: calc(25% - 16px); width: calc(25% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-tablet { width: auto; grid-column-end: span 2; } }
  .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-tablet { width: calc(37.5% - 16px); width: calc(37.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-tablet { width: auto; grid-column-end: span 3; } }
  .mdc-layout-grid__cell--span-4, .cta-actions, #who-we-are header, #meet-us header, #get-involved header, .mdc-layout-grid__cell--span-4-tablet { width: calc(50% - 16px); width: calc(50% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-4, .cta-actions, #who-we-are header, #meet-us header, #get-involved header, .mdc-layout-grid__cell--span-4-tablet { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-tablet { width: calc(62.5% - 16px); width: calc(62.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-tablet { width: auto; grid-column-end: span 5; } }
  .mdc-layout-grid__cell--span-6, header div h1, #cta-section div, .input-field, .mdc-layout-grid__cell--span-6-tablet { width: calc(75% - 16px); width: calc(75% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-6, header div h1, #cta-section div, .input-field, .mdc-layout-grid__cell--span-6-tablet { width: auto; grid-column-end: span 6; } }
  .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-tablet { width: calc(87.5% - 16px); width: calc(87.5% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-tablet { width: auto; grid-column-end: span 7; } }
  .mdc-layout-grid__cell--span-8, .helper-info, #who-we-are div, #meet-us div, #get-involved div, #who-we-are footer, #meet-us footer, #get-involved footer, .mdc-layout-grid__cell--span-8-tablet { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-8, .helper-info, #who-we-are div, #meet-us div, #get-involved div, #who-we-are footer, #meet-us footer, #get-involved footer, .mdc-layout-grid__cell--span-8-tablet { width: auto; grid-column-end: span 8; } }
  .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-tablet { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-tablet { width: auto; grid-column-end: span 8; } }
  .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-tablet { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-tablet { width: auto; grid-column-end: span 8; } }
  .mdc-layout-grid__cell--span-11, #contribution-selections, .mdc-layout-grid__cell--span-11-tablet { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-11, #contribution-selections, .mdc-layout-grid__cell--span-11-tablet { width: auto; grid-column-end: span 8; } }
  .mdc-layout-grid__cell--span-12, .header-quote blockquote, .mdc-layout-grid__cell--span-12-tablet { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-tablet, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-12, .header-quote blockquote, .mdc-layout-grid__cell--span-12-tablet { width: auto; grid-column-end: span 8; } } }
@media (max-width: 479px) { .mdc-layout-grid__cell, #intro-section div { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); box-sizing: border-box; margin: 8px; margin: calc(var(--mdc-layout-grid-gutter-phone, 16px) / 2); }
  @supports (display: grid) { .mdc-layout-grid__cell, #intro-section div { width: auto; grid-column-end: span 4; } }
  @supports (display: grid) { .mdc-layout-grid__cell, #intro-section div { margin: 0; } }
  .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-phone { width: calc(25% - 16px); width: calc(25% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-phone { width: auto; grid-column-end: span 1; } }
  .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-phone { width: calc(50% - 16px); width: calc(50% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-phone { width: auto; grid-column-end: span 2; } }
  .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-phone { width: calc(75% - 16px); width: calc(75% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-phone { width: auto; grid-column-end: span 3; } }
  .mdc-layout-grid__cell--span-4, .cta-actions, #who-we-are header, #meet-us header, #get-involved header, .mdc-layout-grid__cell--span-4-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-4, .cta-actions, #who-we-are header, #meet-us header, #get-involved header, .mdc-layout-grid__cell--span-4-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-6, header div h1, #cta-section div, .input-field, .mdc-layout-grid__cell--span-6-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-6, header div h1, #cta-section div, .input-field, .mdc-layout-grid__cell--span-6-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-8, .helper-info, #who-we-are div, #meet-us div, #get-involved div, #who-we-are footer, #meet-us footer, #get-involved footer, .mdc-layout-grid__cell--span-8-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-8, .helper-info, #who-we-are div, #meet-us div, #get-involved div, #who-we-are footer, #meet-us footer, #get-involved footer, .mdc-layout-grid__cell--span-8-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-11, #contribution-selections, .mdc-layout-grid__cell--span-11-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-11, #contribution-selections, .mdc-layout-grid__cell--span-11-phone { width: auto; grid-column-end: span 4; } }
  .mdc-layout-grid__cell--span-12, .header-quote blockquote, .mdc-layout-grid__cell--span-12-phone { width: calc(100% - 16px); width: calc(100% - var(--mdc-layout-grid-gutter-phone, 16px)); }
  @supports (display: grid) { .mdc-layout-grid__cell--span-12, .header-quote blockquote, .mdc-layout-grid__cell--span-12-phone { width: auto; grid-column-end: span 4; } } }
.mdc-layout-grid__cell--order-1 { order: 1; }
.mdc-layout-grid__cell--order-2 { order: 2; }
.mdc-layout-grid__cell--order-3 { order: 3; }
.mdc-layout-grid__cell--order-4 { order: 4; }
.mdc-layout-grid__cell--order-5 { order: 5; }
.mdc-layout-grid__cell--order-6 { order: 6; }
.mdc-layout-grid__cell--order-7 { order: 7; }
.mdc-layout-grid__cell--order-8 { order: 8; }
.mdc-layout-grid__cell--order-9 { order: 9; }
.mdc-layout-grid__cell--order-10 { order: 10; }
.mdc-layout-grid__cell--order-11 { order: 11; }
.mdc-layout-grid__cell--order-12 { order: 12; }
.mdc-layout-grid__cell--align-top { align-self: flex-start; }
@supports (display: grid) { .mdc-layout-grid__cell--align-top { align-self: start; } }
.mdc-layout-grid__cell--align-middle, .input-field, .helper-info, .cta-actions { align-self: center; }
.mdc-layout-grid__cell--align-bottom { align-self: flex-end; }
@supports (display: grid) { .mdc-layout-grid__cell--align-bottom { align-self: end; } }

@media (min-width: 840px) { .mdc-layout-grid--fixed-column-width { width: 1176px; width: calc( var(--mdc-layout-grid-column-width-desktop, 72px) * 12 + var(--mdc-layout-grid-gutter-desktop, 24px) * 11 + var(--mdc-layout-grid-margin-desktop, 24px) * 2 ); } }
@media (min-width: 480px) and (max-width: 839px) { .mdc-layout-grid--fixed-column-width { width: 720px; width: calc( var(--mdc-layout-grid-column-width-tablet, 72px) * 8 + var(--mdc-layout-grid-gutter-tablet, 16px) * 7 + var(--mdc-layout-grid-margin-tablet, 16px) * 2 ); } }
@media (max-width: 479px) { .mdc-layout-grid--fixed-column-width { width: 368px; width: calc( var(--mdc-layout-grid-column-width-phone, 72px) * 4 + var(--mdc-layout-grid-gutter-phone, 16px) * 3 + var(--mdc-layout-grid-margin-phone, 16px) * 2 ); } }

.mdc-layout-grid--align-left { margin-right: auto; margin-left: 0; }

.mdc-layout-grid--align-right, #who-we-are footer, #meet-us footer, #get-involved footer { margin-right: 0; margin-left: auto; }

@keyframes primary-indeterminate-translate { 0% { transform: translateX(0); }
  20% { animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819); transform: translateX(0); }
  59.15% { animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352); transform: translateX(83.67142%); }
  100% { transform: translateX(200.611057%); } }
@keyframes primary-indeterminate-scale { 0% { transform: scaleX(0.08); }
  36.65% { animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1); transform: scaleX(0.08); }
  69.15% { animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1); transform: scaleX(0.661479); }
  100% { transform: scaleX(0.08); } }
@keyframes secondary-indeterminate-translate { 0% { animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685); transform: translateX(0); }
  25% { animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712); transform: translateX(37.651913%); }
  48.35% { animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026); transform: translateX(84.386165%); }
  100% { transform: translateX(160.277782%); } }
@keyframes secondary-indeterminate-scale { 0% { animation-timing-function: cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971); transform: scaleX(0.08); }
  19.15% { animation-timing-function: cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315); transform: scaleX(0.457104); }
  44.15% { animation-timing-function: cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179); transform: scaleX(0.72796); }
  100% { transform: scaleX(0.08); } }
@keyframes buffering { to { transform: translateX(-10px); } }
@keyframes primary-indeterminate-translate-reverse { 0% { transform: translateX(0); }
  20% { animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819); transform: translateX(0); }
  59.15% { animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352); transform: translateX(-83.67142%); }
  100% { transform: translateX(-200.611057%); } }
@keyframes secondary-indeterminate-translate-reverse { 0% { animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685); transform: translateX(0); }
  25% { animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712); transform: translateX(-37.651913%); }
  48.35% { animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026); transform: translateX(-84.386165%); }
  100% { transform: translateX(-160.277782%); } }
@keyframes buffering-reverse { to { transform: translateX(10px); } }
.mdc-linear-progress { position: relative; width: 100%; height: 4px; transform: translateZ(0); transition: opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1); overflow: hidden; }
.mdc-linear-progress__bar { position: absolute; width: 100%; height: 100%; animation: none; transform-origin: top left; transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1); }
.mdc-linear-progress__bar-inner { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); display: inline-block; position: absolute; width: 100%; height: 100%; animation: none; }
.mdc-linear-progress--accent .mdc-linear-progress__bar-inner { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-linear-progress__buffering-dots { position: absolute; width: 100%; height: 100%; animation: buffering 250ms infinite linear; background-image: url("data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='%23e6e6e6'/%3E%3C/svg%3E"); background-repeat: repeat-x; background-size: 10px 4px; }
.mdc-linear-progress__buffer { position: absolute; width: 100%; height: 100%; transform-origin: top left; transition: transform 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1); background-color: #e6e6e6; }
.mdc-linear-progress__secondary-bar { visibility: hidden; }
.mdc-linear-progress--indeterminate .mdc-linear-progress__bar { transition: none; }
.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar { left: -145.166611%; animation: primary-indeterminate-translate 2s infinite linear; }
.mdc-linear-progress--indeterminate .mdc-linear-progress__primary-bar > .mdc-linear-progress__bar-inner { animation: primary-indeterminate-scale 2s infinite linear; }
.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar { left: -54.888891%; animation: secondary-indeterminate-translate 2s infinite linear; visibility: visible; }
.mdc-linear-progress--indeterminate .mdc-linear-progress__secondary-bar > .mdc-linear-progress__bar-inner { animation: secondary-indeterminate-scale 2s infinite linear; }
.mdc-linear-progress--reversed .mdc-linear-progress__bar, .mdc-linear-progress--reversed .mdc-linear-progress__buffer { right: 0; transform-origin: center right; }
.mdc-linear-progress--reversed .mdc-linear-progress__primary-bar { animation-name: primary-indeterminate-translate-reverse; }
.mdc-linear-progress--reversed .mdc-linear-progress__secondary-bar { animation-name: secondary-indeterminate-translate-reverse; }
.mdc-linear-progress--reversed .mdc-linear-progress__buffering-dots { animation: buffering-reverse 250ms infinite linear; }
.mdc-linear-progress--closed { opacity: 0; }

.mdc-linear-progress--indeterminate.mdc-linear-progress--reversed .mdc-linear-progress__primary-bar { right: -145.166611%; left: auto; }
.mdc-linear-progress--indeterminate.mdc-linear-progress--reversed .mdc-linear-progress__secondary-bar { right: -54.888891%; left: auto; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-list { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.75rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); margin: 0; padding: 8px 16px 0; line-height: 1.5rem; list-style-type: none; }
.mdc-list--theme-dark, .mdc-theme--dark .mdc-list { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }

.mdc-list--dense { padding-top: 4px; font-size: .812rem; }

.mdc-list-item { text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: flex; align-items: center; justify-content: flex-start; height: 48px; }
.mdc-list-item__start-detail { width: 24px; height: 24px; margin-left: 0; margin-right: 32px; }
[dir="rtl"] .mdc-list-item .mdc-list-item__start-detail, .mdc-list-item[dir="rtl"] .mdc-list-item__start-detail { margin-left: 32px; margin-right: 0; }
.mdc-list-item__end-detail { width: 24px; height: 24px; margin-left: auto; margin-right: 0; }
[dir="rtl"] .mdc-list-item .mdc-list-item__end-detail, .mdc-list-item[dir="rtl"] .mdc-list-item__end-detail { margin-left: 0; margin-right: auto; }
.mdc-list-item__text { display: inline-flex; flex-direction: column; }
.mdc-list-item__text__secondary { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }
.mdc-list-item__text__secondary--theme-dark, .mdc-theme--dark .mdc-list-item__text__secondary { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-list--dense .mdc-list-item__text__secondary { font-size: inherit; }
.mdc-list--dense .mdc-list-item { height: 40px; }
.mdc-list--dense .mdc-list-item__start-detail { width: 20px; height: 20px; margin-left: 0; margin-right: 36px; }
[dir="rtl"] .mdc-list-item .mdc-list--dense .mdc-list-item__start-detail, .mdc-list-item[dir="rtl"] .mdc-list--dense .mdc-list-item__start-detail { margin-left: 36px; margin-right: 0; }
.mdc-list--dense .mdc-list-item__end-detail { width: 20px; height: 20px; }
.mdc-list--avatar-list .mdc-list-item { height: 56px; }
.mdc-list--avatar-list .mdc-list-item__start-detail { width: 40px; height: 40px; margin-left: 0; margin-right: 16px; border-radius: 50%; }
[dir="rtl"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__start-detail, .mdc-list-item[dir="rtl"] .mdc-list--avatar-list .mdc-list-item__start-detail { margin-left: 16px; margin-right: 0; }
.mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item { height: 48px; }
.mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail { width: 36px; height: 36px; margin-left: 0; margin-right: 20px; }
[dir="rtl"] .mdc-list-item .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail, .mdc-list-item[dir="rtl"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail { margin-left: 20px; margin-right: 0; }
.mdc-list--two-line .mdc-list-item { height: 72px; }
.mdc-list--two-line.mdc-list--dense .mdc-list-item { height: 60px; }

a.mdc-list-item { color: inherit; text-decoration: none; }

.mdc-list-item.mdc-ripple-upgraded { --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); left: -16px; right: initial; position: relative; width: 100%; padding: 0 16px; overflow: hidden; }
.mdc-list-item.mdc-ripple-upgraded::before, .mdc-list-item.mdc-ripple-upgraded::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-list-item.mdc-ripple-upgraded::before, .mdc-list-item.mdc-ripple-upgraded::after { background-color: rgba(0, 0, 0, 0.06); opacity: 0; }
.mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-list-item.mdc-ripple-upgraded::before, .mdc-list-item.mdc-ripple-upgraded::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
[dir="rtl"] .mdc-list-item.mdc-ripple-upgraded, .mdc-list-item.mdc-ripple-upgraded[dir="rtl"] { left: initial; right: -16px; }
.mdc-list-item.mdc-ripple-upgraded:focus { outline: none; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::before, .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::before, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::after { background-color: rgba(255, 255, 255, 0.12); opacity: 0; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

.mdc-list-divider { height: 0; margin: 0; border: none; border-bottom: 1px solid rgba(0, 0, 0, 0.12); }
.mdc-list--theme-dark .mdc-list-divider, .mdc-theme--dark .mdc-list-divider { border-bottom-color: rgba(255, 255, 255, 0.2); }

.mdc-list-divider--inset { margin-left: 56px; margin-right: 0; width: calc(100% - 56px); }
[dir="rtl"] .mdc-list-group .mdc-list-divider--inset, .mdc-list-group[dir="rtl"] .mdc-list-divider--inset { margin-left: 0; margin-right: 56px; }

.mdc-list-group { padding: 0 16px; }
.mdc-list-group__subheader { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); margin: 0.75rem 0; }
.mdc-list-group__subheader--theme-dark, .mdc-theme--dark .mdc-list-group__subheader { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-list-group .mdc-list { padding: 0; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* postcss-bem-linter: define simple-menu */
.mdc-simple-menu { display: none; position: absolute; min-width: 170px; max-width: calc(100vw - 32px); max-height: calc(100vh - 32px); margin: 0; padding: 0; transform: scale(0); transform-origin: top left; border-radius: 2px; background-color: white; white-space: nowrap; opacity: 0; overflow-x: hidden; overflow-y: auto; box-sizing: border-box; will-change: transform, opacity; z-index: 4; box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); /* stylelint-disable plugin/selector-bem-pattern */ /* stylelint-enable plugin/selector-bem-pattern */ /* stylelint-disable plugin/selector-bem-pattern */ /* stylelint-disable selector-no-qualifying-type */ /* stylelint-enable selector-no-qualifying-type */ /* TODO(sgomes): Revisit when we have interactive lists. */ /* stylelint-enable plugin/selector-bem-pattern */ }
.mdc-simple-menu--theme-dark, .mdc-theme--dark .mdc-simple-menu { background-color: #424242; }
.mdc-simple-menu:focus { outline: none; }
.mdc-simple-menu--open { display: inline-block; transform: scale(1); opacity: 1; }
.mdc-simple-menu--animating { display: inline-block; transition: opacity 0.2s cubic-bezier(0, 0, 0.2, 1); }
.mdc-simple-menu__items { overflow-x: hidden; overflow-y: auto; box-sizing: border-box; will-change: transform; /* stylelint-disable plugin/selector-bem-pattern, selector-no-universal */ /* stylelint-enable plugin/selector-bem-pattern, selector-no-universal */ }
.mdc-simple-menu__items > * { opacity: 0; }
.mdc-simple-menu__items > .mdc-list-item { cursor: pointer; }
.mdc-simple-menu--animating .mdc-simple-menu__items { overflow-y: hidden; }
.mdc-simple-menu--animating .mdc-simple-menu__items > * { transition-duration: 0.3s; transition-property: opacity; transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }
.mdc-simple-menu--open .mdc-simple-menu__items > * { opacity: 1; will-change: opacity; }
[dir="rtl"] .mdc-simple-menu { transform-origin: top right; }
.mdc-simple-menu--open-from-top-left { transform-origin: top left !important; }
.mdc-simple-menu--open-from-top-right { transform-origin: top right !important; }
.mdc-simple-menu--open-from-bottom-left { transform-origin: bottom left !important; }
.mdc-simple-menu--open-from-bottom-right { transform-origin: bottom right !important; }
.mdc-simple-menu .mdc-list-group, .mdc-simple-menu .mdc-list { padding: 8px 0; }
.mdc-simple-menu .mdc-list-item { position: relative; padding: 0 16px; outline: none; color: inherit; text-decoration: none; user-select: none; font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.75rem; text-decoration: inherit; text-transform: inherit; }
.mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item, .mdc-theme--dark .mdc-simple-menu .mdc-list-item { color: white; }
.mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-divider, .mdc-theme--dark .mdc-simple-menu .mdc-list-divider { border-color: rgba(255, 255, 255, 0.12); }
.mdc-simple-menu .mdc-list-item__start-detail { color: rgba(0, 0, 0, 0.54); }
.mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item__start-detail, .mdc-theme--dark .mdc-simple-menu .mdc-list-item__start-detail { color: rgba(255, 255, 255, 0.54); }
.mdc-simple-menu--selected.mdc-list-item, .mdc-simple-menu--selected.mdc-list-item .mdc-list-item__start-detail { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-simple-menu .mdc-list-item::before { position: absolute; top: 0; left: 0; width: 100%; height: 100%; transition: opacity 120ms cubic-bezier(0, 0, 0.2, 1); border-radius: inherit; background: currentColor; content: ""; opacity: 0; pointer-events: none; }
.mdc-simple-menu .mdc-list-item:focus::before { opacity: .12; }
.mdc-simple-menu .mdc-list-item:active::before { /* Slightly darker value for visual distinction. This allows a full base that has distinct modes. Progressive enhancement with ripples will provide complete button spec alignment.
*/ opacity: .18; }
.mdc-simple-menu .mdc-list-item[aria-disabled="true"] { cursor: default; /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-select--theme-dark .mdc-simple-menu .mdc-list-item[aria-disabled="true"], .mdc-theme--dark .mdc-simple-menu .mdc-list-item[aria-disabled="true"] { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-simple-menu .mdc-list-item[aria-disabled="true"]:focus::before, .mdc-simple-menu .mdc-list-item[aria-disabled="true"]:active::before { opacity: 0; }

/* postcss-bem-linter: end */
.mdc-menu-anchor { position: relative; overflow: visible; }

.mdc-radio { --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); display: inline-block; position: relative; flex: 0 0 auto; box-sizing: border-box; width: 40px; height: 40px; padding: 10px; cursor: pointer; will-change: opacity, transform, border-color, background-color, color; }
.mdc-radio .mdc-radio__native-control:enabled:not(:checked) + .mdc-radio__background .mdc-radio__outer-circle { /* @alternate */ border-color: rgba(0, 0, 0, 0.54); border-color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }
.mdc-radio--theme-dark .mdc-radio__native-control:enabled:not(:checked) + .mdc-radio__background .mdc-radio__outer-circle, .mdc-theme--dark .mdc-radio .mdc-radio__native-control:enabled:not(:checked) + .mdc-radio__background .mdc-radio__outer-circle { /* @alternate */ border-color: rgba(255, 255, 255, 0.7); border-color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-radio .mdc-radio__native-control:enabled:checked + .mdc-radio__background .mdc-radio__outer-circle { /* @alternate */ border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-radio .mdc-radio__native-control:enabled + .mdc-radio__background .mdc-radio__inner-circle { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-radio .mdc-radio__background::before { /* @alternate */ background-color: #00bcd4; }
@supports not (-ms-ime-align: auto) { .mdc-radio .mdc-radio__background::before { background-color: var(--mdc-theme-secondary, #00bcd4); } }
.mdc-radio::before, .mdc-radio::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-radio::before, .mdc-radio::after { background-color: rgba(0, 188, 212, 0.14); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-radio::before, .mdc-radio::after { background-color: color(var(--mdc-theme-secondary, #00bcd4) a(14%)); } }
.mdc-radio:not(.mdc-ripple-upgraded):hover::before, .mdc-radio:not(.mdc-ripple-upgraded):focus::before, .mdc-radio:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-radio.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-radio.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-radio.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-radio.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-radio.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-radio::before, .mdc-radio::after { top: calc(50% - 50%); left: calc(50% - 50%); width: 100%; height: 100%; }
.mdc-radio.mdc-ripple-upgraded::before { top: calc(50% - 50%); left: calc(50% - 50%); width: 100%; height: 100%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-radio.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 25%)); left: var(--mdc-ripple-left, calc(50% - 25%)); width: var(--mdc-ripple-fg-size, 50%); height: var(--mdc-ripple-fg-size, 50%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-radio.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 50%); height: var(--mdc-ripple-fg-size, 50%); transform: scale(0); transform-origin: center center; }
.mdc-radio.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-radio.mdc-ripple-upgraded .mdc-radio__background::before { content: none; }
.mdc-radio__background { display: inline-block; position: absolute; left: 10px; box-sizing: border-box; width: 50%; height: 50%; }
.mdc-radio__background::before { position: absolute; top: 0; left: 0; width: 100%; height: 100%; transform: scale(0, 0); transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-radius: 50%; opacity: 0; pointer-events: none; content: ""; }
.mdc-radio__outer-circle { position: absolute; top: 0; left: 0; box-sizing: border-box; width: 100%; height: 100%; transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-width: 2px; border-style: solid; border-radius: 50%; }
.mdc-radio__inner-circle { position: absolute; top: 0; left: 0; box-sizing: border-box; width: 100%; height: 100%; transform: scale(0, 0); transition: transform 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1), background-color 120ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border-radius: 50%; }
.mdc-radio__native-control { position: absolute; top: 0; left: 0; width: 100%; height: 100%; margin: 0; padding: 0; opacity: 0; cursor: inherit; z-index: 1; }

.mdc-radio__native-control:checked + .mdc-radio__background, .mdc-radio__native-control:disabled + .mdc-radio__background { transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle, .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle { transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }
.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle, .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle { transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }

.mdc-radio--disabled { cursor: default; pointer-events: none; }

.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle { transform: scale(0.5); transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }

.mdc-radio__native-control:disabled + .mdc-radio__background, [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background { cursor: default; }
.mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle, [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle { border-color: rgba(0, 0, 0, 0.26); }
.mdc-radio--theme-dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle, .mdc-theme--dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle, .mdc-radio--theme-dark [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle, .mdc-theme--dark [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle { border-color: rgba(255, 255, 255, 0.3); }
.mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle, [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle { background-color: rgba(0, 0, 0, 0.26); }
.mdc-radio--theme-dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle, .mdc-theme--dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle, .mdc-radio--theme-dark [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle, .mdc-theme--dark [aria-disabled="true"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle { background-color: rgba(255, 255, 255, 0.3); }

.mdc-radio__native-control:focus + .mdc-radio__background::before { transform: scale(2, 2); transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); opacity: .26; }

.mdc-ripple-surface { --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); position: relative; outline: none; overflow: hidden; }
.mdc-ripple-surface::before, .mdc-ripple-surface::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-ripple-surface::before, .mdc-ripple-surface::after { background-color: rgba(0, 0, 0, 0.06); opacity: 0; }
.mdc-ripple-surface:not(.mdc-ripple-upgraded):hover::before, .mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-ripple-surface.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-ripple-surface.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-ripple-surface::before, .mdc-ripple-surface::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-ripple-surface.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-ripple-surface.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-ripple-surface.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-ripple-surface[data-mdc-ripple-is-unbounded] { overflow: visible; }
.mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after { background-color: rgba(229, 198, 1, 0.16); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after { background-color: color(var(--mdc-theme-primary, #e5c601) a(16%)); } }
.mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-ripple-surface--primary.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-ripple-surface--primary.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-ripple-surface--primary.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-ripple-surface--primary.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after { background-color: rgba(0, 188, 212, 0.16); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after { background-color: color(var(--mdc-theme-secondary, #00bcd4) a(16%)); } }
.mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-ripple-surface--accent.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-ripple-surface--accent.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-ripple-surface--accent.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-ripple-surface--accent.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
.mdc-select { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.75rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); padding-left: 0; padding-right: 24px; background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E); display: inline-flex; align-items: center; justify-content: flex-start; max-width: calc(100% - 24px); height: 32px; transition: border-bottom-color 150ms 0ms cubic-bezier(0.4, 0, 0.6, 1), background-color 150ms 0ms cubic-bezier(0.4, 0, 0.6, 1); border: none; border-bottom: 1px solid rgba(0, 0, 0, 0.12); border-radius: 0; background-repeat: no-repeat; background-position: right center; font-family: Roboto, sans-serif; font-size: .936rem; cursor: pointer; appearance: none; }
[dir="rtl"] .mdc-select, .mdc-select[dir="rtl"] { padding-left: 24px; padding-right: 0; }
.mdc-select::-ms-expand { display: none; }
.mdc-select:focus { /* @alternate */ border-bottom-color: #e5c601; border-bottom-color: var(--mdc-theme-primary, #e5c601); outline: none; background-color: rgba(0, 0, 0, 0.06); }
[dir="rtl"] .mdc-select, .mdc-select[dir="rtl"] { background-position: left center; }
.mdc-select--theme-dark, .mdc-theme--dark .mdc-select { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E); border-bottom: 1px solid rgba(255, 255, 255, 0.12); }
.mdc-select--theme-dark:focus, .mdc-theme--dark .mdc-select:focus { /* @alternate */ border-bottom-color: #e5c601; border-bottom-color: var(--mdc-theme-primary, #e5c601); background-color: rgba(255, 255, 255, 0.09); }
.mdc-select__menu { position: fixed; top: 0; left: 0; max-height: 100%; transform-origin: center center; z-index: 4; }
.mdc-select__selected-text { transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1), transform 125ms 0ms cubic-bezier(0.4, 0, 0.6, 1); white-space: nowrap; overflow: hidden; }

.mdc-select--open .mdc-select__selected-text { transform: translateY(8px); transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1); opacity: 0; }

.mdc-select--disabled, .mdc-select[disabled] { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E); border-bottom-style: dotted; cursor: default; pointer-events: none; user-select: none; }

.mdc-select--theme-dark.mdc-select--disabled, .mdc-theme--dark .mdc-select--disabled { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E); border-bottom: 1px dotted rgba(255, 255, 255, 0.38); }

.mdc-select--theme-dark.mdc-select[disabled], .mdc-theme--dark .mdc-select[disabled] { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E); border-bottom: 1px dotted rgba(255, 255, 255, 0.38); }

.mdc-select__menu .mdc-list-item { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.75rem; text-decoration: inherit; text-transform: inherit; /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }
.mdc-select__menu .mdc-list-item[aria-selected="true"] { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-select--theme-dark .mdc-select__menu .mdc-list-item, .mdc-theme--dark .mdc-select__menu .mdc-list-item { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-select--theme-dark .mdc-select__menu .mdc-list-item[aria-selected="true"], .mdc-theme--dark .mdc-select__menu .mdc-list-item[aria-selected="true"] { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-select__menu .mdc-list-group, .mdc-select__menu .mdc-list-group > .mdc-list-item:first-child { margin-top: 12px; }
.mdc-select__menu .mdc-list-group { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)); font-weight: normal; }
.mdc-select__menu .mdc-list-group .mdc-list-item { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-select--theme-dark .mdc-select__menu .mdc-list-group, .mdc-theme--dark .mdc-select__menu .mdc-list-group { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-select--theme-dark .mdc-select__menu .mdc-list-group .mdc-list-item, .mdc-theme--dark .mdc-select__menu .mdc-list-group .mdc-list-item { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }

.mdc-multi-select { /* @alternate */ border-color: rgba(0, 0, 0, 0.38); border-color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)); width: 250px; padding: 0; border-width: 1px; border-style: solid; outline: none; appearance: none; }
.mdc-multi-select--theme-dark, .mdc-theme--dark .mdc-multi-select { /* @alternate */ border-color: rgba(255, 255, 255, 0.5); border-color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-multi-select .mdc-list-group { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)); margin: 16px 0 0; padding: 0 0 0 16px; font-weight: normal; }
.mdc-multi-select .mdc-list-group--theme-dark, .mdc-theme--dark .mdc-multi-select .mdc-list-group { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-multi-select .mdc-list-group:last-child { margin-bottom: 16px; }
.mdc-multi-select .mdc-list-group .mdc-list-divider { margin-left: -16px; }
.mdc-multi-select .mdc-list-item { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); margin: 0 0 0 -16px; padding: 0 16px; }
.mdc-multi-select .mdc-list-item--theme-dark, .mdc-theme--dark .mdc-multi-select .mdc-list-item { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-multi-select .mdc-list-item:first-child { margin-top: 12px; }
.mdc-multi-select .mdc-list-item:last-child { margin-bottom: 8px; }
.mdc-multi-select .mdc-list-item:checked { /* @alternate */ background-color: #fff; background-color: var(--mdc-theme-background, #fff); }
.mdc-multi-select .mdc-list-item:checked--theme-dark, .mdc-theme--dark .mdc-multi-select .mdc-list-item:checked { /* @alternate */ background-color: white; background-color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-multi-select .mdc-list-divider { margin-bottom: 8px; padding-top: 8px; font-size: 0; }

.mdc-multi-select:focus .mdc-list-item:checked { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); }
.mdc-multi-select:focus .mdc-list-item:checked--theme-dark, .mdc-theme--dark .mdc-multi-select:focus .mdc-list-item:checked { /* @alternate */ background-color: white; background-color: var(--mdc-theme-text-primary-on-dark, white); }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
@keyframes mdc-slider-emphasize { 0% { animation-timing-function: ease-out; }
  50% { animation-timing-function: ease-in; transform: scale(0.85); }
  100% { transform: scale(0.571); } }
.mdc-slider { position: relative; width: 100%; height: 48px; cursor: pointer; touch-action: pan-x; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
.mdc-slider:focus { outline: none; }
.mdc-slider__track-container { position: absolute; top: 50%; width: 100%; height: 2px; background-color: #bdbdbd; overflow: hidden; }
.mdc-slider--theme-dark .mdc-slider__track-container, .mdc-theme--dark .mdc-slider__track-container { background-color: #5c5c5c; }
.mdc-slider__track { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); position: absolute; width: 100%; height: 100%; transform-origin: left top; will-change: transform; }
[dir="rtl"] .mdc-slider .mdc-slider__track, .mdc-slider[dir="rtl"] .mdc-slider__track { transform-origin: right top; }
.mdc-slider__track-marker-container { display: flex; margin-right: 0; margin-left: -1px; visibility: hidden; }
[dir="rtl"] .mdc-slider .mdc-slider__track-marker-container, .mdc-slider[dir="rtl"] .mdc-slider__track-marker-container { margin-right: -1px; margin-left: 0; }
.mdc-slider__track-marker-container::after { display: block; width: 2px; height: 2px; background-color: #5c5c5c; content: ""; }
.mdc-slider--theme-dark.mdc-slider__track-marker-container::after, .mdc-theme--dark .mdc-slider__track-marker-container::after { background-color: #bdbdbd; }
.mdc-slider__track-marker { flex: 1; }
.mdc-slider__track-marker::after { display: block; width: 2px; height: 2px; background-color: #5c5c5c; content: ""; }
.mdc-slider--theme-dark.mdc-slider__track-marker::after, .mdc-theme--dark .mdc-slider__track-marker::after { background-color: #bdbdbd; }
.mdc-slider__track-marker:first-child::after { width: 3px; }
.mdc-slider__thumb-container { position: absolute; top: 15px; left: 0; width: 21px; height: 100%; user-select: none; will-change: transform; }
.mdc-slider__thumb { /* @alternate */ fill: #e5c601; fill: var(--mdc-theme-primary, #e5c601); /* @alternate */ stroke: #e5c601; stroke: var(--mdc-theme-primary, #e5c601); position: absolute; top: 0; left: 0; transform: scale(0.571); transition: transform 100ms ease-out, fill 100ms ease-out, stroke 100ms ease-out; stroke-width: 3.5; }
.mdc-slider__focus-ring { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); width: 21px; height: 21px; transition: transform 266.67ms ease-out, opacity 266.67ms ease-out, background-color 266.67ms ease-out; border-radius: 50%; opacity: 0; }
.mdc-slider__pin { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); display: flex; position: absolute; top: 0; left: 0; align-items: center; justify-content: center; width: 26px; height: 26px; margin-top: -2px; margin-left: -2px; transform: rotate(-45deg) scale(0) translate(0, 0); transition: transform 100ms ease-out; border-radius: 50% 50% 50% 0%; /** Ensuring that the pin is higher than the thumb in the stacking order removes some rendering jank observed in Chrome. */ z-index: 1; }
.mdc-slider__pin-value-marker { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.75rem; font-weight: 400; letter-spacing: 0.08em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; transform: rotate(45deg); }

.mdc-slider--active .mdc-slider__thumb { transform: scale3d(1, 1, 1); }

.mdc-slider--focus .mdc-slider__thumb { animation: mdc-slider-emphasize 266.67ms linear; }
.mdc-slider--focus .mdc-slider__focus-ring { transform: scale3d(1.55, 1.55, 1.55); opacity: .25; }

.mdc-slider--disabled { cursor: auto; }
.mdc-slider--disabled .mdc-slider__track { background-color: #bdbdbd; }
.mdc-slider--theme-dark.mdc-slider--disabled .mdc-slider__track, .mdc-theme--dark .mdc-slider--disabled .mdc-slider__track { background-color: #5c5c5c; }
.mdc-slider--disabled .mdc-slider__thumb { fill: #bdbdbd !important; stroke: white !important; stroke: var(--mdc-slider-bg-color-behind-component, white) !important; }
.mdc-slider--theme-dark.mdc-slider--disabled .mdc-slider__thumb, .mdc-theme--dark .mdc-slider--disabled .mdc-slider__thumb { fill: #5c5c5c !important; stroke: #333 !important; stroke: var(--mdc-slider-bg-color-behind-component, #333) !important; }

.mdc-slider--off .mdc-slider__track { opacity: 0; }
.mdc-slider--off .mdc-slider__thumb { fill: white; fill: var(--mdc-slider-bg-color-behind-component, white); stroke: #bdbdbd; }
.mdc-slider--theme-dark.mdc-slider--off .mdc-slider__thumb, .mdc-theme--dark .mdc-slider--off .mdc-slider__thumb { fill: #333; fill: var(--mdc-slider-bg-color-behind-component, #333); stroke: #5c5c5c; }
.mdc-slider--off .mdc-slider__pin { background-color: #bdbdbd; }
.mdc-slider--theme-dark.mdc-slider--off .mdc-slider__pin, .mdc-theme--dark .mdc-slider--off .mdc-slider__pin { background-color: #5c5c5c; }
.mdc-slider--off.mdc-slider--focus .mdc-slider__thumb { fill: #dedede; }
.mdc-slider--theme-dark.mdc-slider--off.mdc-slider--focus .mdc-slider__thumb, .mdc-theme--dark .mdc-slider--off.mdc-slider--focus .mdc-slider__thumb { fill: #82848c; stroke: #82848c; }
.mdc-slider--off.mdc-slider--active.mdc-slider--focus .mdc-slider__thumb { stroke: #8c8c8c; }
.mdc-slider--theme-dark.mdc-slider--off.mdc-slider--active.mdc-slider--focus .mdc-slider__thumb, .mdc-theme--dark .mdc-slider--off.mdc-slider--active.mdc-slider--focus .mdc-slider__thumb { stroke: #5c5c5c; }
.mdc-slider--off .mdc-slider__focus-ring { background-color: #bdbdbd; }

.mdc-slider--in-transit .mdc-slider__thumb { transition-delay: 140ms; }

.mdc-slider--in-transit .mdc-slider__thumb-container, .mdc-slider--in-transit .mdc-slider__track, .mdc-slider:focus:not(.mdc-slider--active) .mdc-slider__thumb-container, .mdc-slider:focus:not(.mdc-slider--active) .mdc-slider__track { transition: transform 80ms ease; }

.mdc-slider--discrete.mdc-slider--active .mdc-slider__thumb { transform: scale(calc(12 / 21)); }
.mdc-slider--discrete.mdc-slider--active .mdc-slider__pin { transform: rotate(-45deg) scale(1) translate(19px, -20px); }
.mdc-slider--discrete.mdc-slider--focus .mdc-slider__thumb { animation: none; }
.mdc-slider--discrete.mdc-slider--focus .mdc-slider__focus-ring { transform: none; opacity: 0; }
.mdc-slider--discrete.mdc-slider--display-markers .mdc-slider__track-marker-container { visibility: visible; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* postcss-bem-linter: define snackbar */
.mdc-snackbar { display: flex; position: fixed; bottom: 0; left: 50%; align-items: center; justify-content: flex-start; box-sizing: border-box; padding-right: 24px; padding-left: 24px; transform: translate(-50%, 100%); transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1); background-color: #323232; pointer-events: none; will-change: transform; /* stylelint-disable plugin/selector-bem-pattern */ /* stylelint-enable plugin/selector-bem-pattern */ }
.mdc-snackbar--theme-dark .mdc-snackbar, .mdc-theme--dark .mdc-snackbar { background-color: #fafafa; }
@media (max-width: 599px) { .mdc-snackbar { left: 0; width: 100%; transform: translate(0, 100%); } }
@media (min-width: 600px) { .mdc-snackbar { min-width: 288px; max-width: 568px; border-radius: 2px; } }
@media (min-width: 600px) { .mdc-snackbar--align-start { left: 24px; right: initial; bottom: 24px; transform: translate(0, 200%); }
  [dir="rtl"] .mdc-snackbar--align-start, .mdc-snackbar--align-start[dir="rtl"] { left: initial; right: 24px; } }
@media (max-width: 599px) { .mdc-snackbar--align-start { bottom: 0; left: 0; width: 100%; transform: translate(0, 100%); } }
.mdc-snackbar--active { transform: translate(0); transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1); pointer-events: auto; }
.mdc-snackbar--active:not(.mdc-snackbar--align-start) { transform: translate(-50%, 0); }
@media (max-width: 599px) { .mdc-snackbar--active:not(.mdc-snackbar--align-start) { bottom: 0; left: 0; width: 100%; transform: translate(0); } }
.mdc-snackbar--action-on-bottom { flex-direction: column; }
.mdc-snackbar--action-on-bottom .mdc-snackbar__text { margin-right: inherit; }
.mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper { margin-left: auto; margin-right: 0; flex-direction: column; justify-content: flex-start; margin-top: -12px; margin-bottom: 8px; }
[dir="rtl"] .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper, .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper[dir="rtl"] { margin-left: 0; margin-right: auto; }
.mdc-snackbar__text { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; margin-left: 0; margin-right: auto; display: flex; align-items: center; height: 48px; transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1); opacity: 0; color: white; }
[dir="rtl"] .mdc-snackbar .mdc-snackbar__text, .mdc-snackbar[dir="rtl"] .mdc-snackbar__text { margin-left: auto; margin-right: 0; }
.mdc-snackbar--theme-dark .mdc-snackbar__text, .mdc-theme--dark .mdc-snackbar__text { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-snackbar--multiline .mdc-snackbar__text { height: 80px; }
.mdc-snackbar--multiline.mdc-snackbar--action-on-bottom .mdc-snackbar__text { margin: 0; }
.mdc-snackbar__action-button { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 2.25rem; text-decoration: none; text-transform: uppercase; /* @alternate */ color: #00bcd4; color: var(--mdc-theme-secondary, #00bcd4); padding: 0; transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1); border: none; outline: none; background-color: transparent; opacity: 0; user-select: none; -webkit-appearance: none; visibility: hidden; }
.mdc-snackbar--theme-dark .mdc-snackbar__action-button, .mdc-theme--dark .mdc-snackbar__action-button { /* @alternate */ color: #e5c601; color: var(--mdc-theme-primary, #e5c601); }
.mdc-snackbar__action-button:hover { cursor: pointer; }
.mdc-snackbar__action-button::-moz-focus-inner { border: 0; }
.mdc-snackbar__action-button:not([aria-hidden]) { visibility: inherit; }
.mdc-snackbar--active .mdc-snackbar__text, .mdc-snackbar--active .mdc-snackbar__action-button:not([aria-hidden]) { transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1); opacity: 1; }

/* postcss-bem-linter: end */
/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
.mdc-switch { display: inline-block; position: relative; }
.mdc-switch .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background::before { background-color: #000; }
.mdc-switch .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob { background-color: #fafafa; }
.mdc-switch .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob::before { background-color: #9e9e9e; }
.mdc-switch--theme-dark .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background::before, .mdc-theme--dark .mdc-switch .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background::before { background-color: #fff; }
.mdc-switch--theme-dark .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob, .mdc-theme--dark .mdc-switch .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob { background-color: #bdbdbd; }
.mdc-switch--theme-dark .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob::before, .mdc-theme--dark .mdc-switch .mdc-switch__native-control:enabled:not(:checked) ~ .mdc-switch__background .mdc-switch__knob::before { background-color: #f1f1f1; }
.mdc-switch .mdc-switch__native-control:enabled:checked ~ .mdc-switch__background::before { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-switch .mdc-switch__native-control:enabled:checked ~ .mdc-switch__background .mdc-switch__knob { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-switch .mdc-switch__native-control:enabled:checked ~ .mdc-switch__background .mdc-switch__knob::before { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-switch__native-control { position: absolute; top: -14px; left: -14px; width: 48px; height: 48px; display: inline-block; margin-top: -3px; transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1); opacity: 0; cursor: pointer; z-index: 2; }
.mdc-switch__native-control:checked { transform: translateX(14px); }
.mdc-switch__background { display: block; position: relative; width: 34px; height: 14px; border-radius: 7px; outline: none; user-select: none; }
.mdc-switch__background::before { display: block; position: absolute; top: 0; right: 0; bottom: 0; left: 0; transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1); border-radius: 7px; opacity: .38; content: ""; }
.mdc-switch--theme-dark .mdc-switch__background::before, .mdc-theme--dark .mdc-switch__background::before { opacity: .3; }
.mdc-switch__background .mdc-switch__knob { box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); display: block; position: absolute; top: -3px; left: 0; width: 20px; height: 20px; transform: translateX(0); transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1); border-radius: 10px; z-index: 1; }
.mdc-switch__background .mdc-switch__knob::before { position: absolute; top: -14px; left: -14px; width: 48px; height: 48px; transform: scale(0); transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1); border-radius: 24px; opacity: .2; content: ""; }

.mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before { position: absolute; width: 48px; height: 48px; transform: scale(1); transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1); border-radius: 24px; }
.mdc-switch--theme-dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before, .mdc-theme--dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before { opacity: .14; }

.mdc-switch__native-control:checked ~ .mdc-switch__background::before { opacity: .5; }
.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob { transform: translateX(14px); transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1); }
.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before { opacity: .15; }

.mdc-switch__native-control:disabled { cursor: initial; }

.mdc-switch__native-control:disabled ~ .mdc-switch__background::before { background-color: #000; opacity: .12; }
.mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before, .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before { background-color: #fff; opacity: .1; }
.mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob { background-color: #bdbdbd; }
.mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob, .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob { background-color: #424242; }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
.mdc-tab { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; display: table-cell; position: relative; box-sizing: border-box; min-width: 160px; min-height: 48px; padding: 0 24px; text-align: center; text-decoration: none; white-space: nowrap; cursor: pointer; overflow: hidden; vertical-align: middle; /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }
.mdc-tab:hover { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-tab:focus { /* @alternate */ outline-color: rgba(0, 0, 0, 0.54); outline-color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }
.mdc-tab-bar--theme-dark .mdc-tab, .mdc-theme--dark .mdc-tab { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-tab-bar--theme-dark .mdc-tab:hover, .mdc-theme--dark .mdc-tab:hover { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-tab-bar--theme-dark .mdc-tab:focus, .mdc-theme--dark .mdc-tab:focus { /* @alternate */ outline-color: rgba(255, 255, 255, 0.7); outline-color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
@media screen and (max-width: 600px) { .mdc-tab { min-width: 72px; padding: 0 12px; } }
.mdc-tab__icon { display: block; margin: 0 auto; width: 24px; height: 24px; }
.mdc-tab-bar--icons-with-text .mdc-tab__icon { margin-top: 4px; }
.mdc-tab__icon-text { display: block; margin: 0 auto; }
.mdc-tab__icon + .mdc-tab__icon-text { padding-top: 6px; }

.mdc-tab--active { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-tab-bar--theme-dark .mdc-tab--active, .mdc-theme--dark .mdc-tab--active { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-tab--active::before { bottom: 0; }

.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab { position: relative; }
.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after { display: none; position: absolute; top: 46px; left: 0; width: calc(100% - 4px); height: 2px; content: ""; pointer-events: none; /* @alternate */ background-color: rgba(0, 0, 0, 0.87); background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-tab-bar--theme-dark.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after, .mdc-theme--dark .mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after { /* @alternate */ background-color: white; background-color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-toolbar .mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after { /* @alternate */ background-color: rgba(0, 0, 0, 0.87); background-color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); }
.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab--active::after, .mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:active::after, .mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:hover::after { display: block; }
.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:not(.mdc-tab--active):hover::after { opacity: .38; }
.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab--active, .mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab:not(.mdc-tab--active):active::after { opacity: .87; }

.mdc-tab-bar--icons-with-text:not(.mdc-tab-bar-upgraded) .mdc-tab::after { top: 70px; }

.mdc-tab.mdc-ripple-upgraded { --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }
.mdc-tab.mdc-ripple-upgraded::before, .mdc-tab.mdc-ripple-upgraded::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-tab.mdc-ripple-upgraded::before, .mdc-tab.mdc-ripple-upgraded::after { background-color: rgba(0, 0, 0, 0.06); opacity: 0; }
.mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-tab.mdc-ripple-upgraded::before, .mdc-tab.mdc-ripple-upgraded::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded::before, .mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded::before, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded::after { background-color: rgba(255, 255, 255, 0.16); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded::before, .mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded::before, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded::after { background-color: color(var(--mdc-theme-text-primary-on-dark, white) a(16%)); } }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-tab-bar--theme-dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-theme--dark .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded::before, .mdc-toolbar .mdc-tab.mdc-ripple-upgraded::after { background-color: rgba(0, 0, 0, 0.16); opacity: 0; }
@supports (background-color: color(green a(10%))) { .mdc-toolbar .mdc-tab.mdc-ripple-upgraded::before, .mdc-toolbar .mdc-tab.mdc-ripple-upgraded::after { background-color: color(var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)) a(16%)); } }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-toolbar .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-toolbar .mdc-tab.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-toolbar .mdc-tab.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-tab.mdc-ripple-upgraded:focus { outline: none; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
.mdc-tab-bar { display: table; position: relative; height: 48px; margin: 0 auto; text-transform: uppercase; }
.mdc-tab-bar__indicator { position: absolute; bottom: 0; left: 0; width: 100%; height: 2px; /* @alternate */ background-color: rgba(0, 0, 0, 0.87); background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); transform-origin: left top; transition: transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1); will-change: transform; visibility: hidden; }
.mdc-tab-bar--theme-dark .mdc-tab-bar__indicator, .mdc-theme--dark .mdc-tab-bar__indicator { /* @alternate */ background-color: white; background-color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-toolbar .mdc-tab-bar .mdc-tab { /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-primary, rgba(0, 0, 0, 0.54)); }
.mdc-tab-bar--theme-dark .mdc-toolbar .mdc-tab-bar .mdc-tab, .mdc-theme--dark .mdc-toolbar .mdc-tab-bar .mdc-tab { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-toolbar .mdc-tab-bar .mdc-tab--active, .mdc-toolbar .mdc-tab-bar .mdc-tab:hover { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); }
.mdc-tab-bar--theme-dark .mdc-toolbar .mdc-tab-bar .mdc-tab--active, .mdc-theme--dark .mdc-toolbar .mdc-tab-bar .mdc-tab--active, .mdc-tab-bar--theme-dark .mdc-toolbar .mdc-tab-bar .mdc-tab:hover, .mdc-theme--dark .mdc-toolbar .mdc-tab-bar .mdc-tab:hover { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-toolbar .mdc-tab-bar .mdc-tab-bar__indicator { /* @alternate */ background-color: rgba(0, 0, 0, 0.87); background-color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); }
.mdc-tab-bar--theme-dark .mdc-toolbar .mdc-tab-bar .mdc-tab-bar__indicator, .mdc-theme--dark .mdc-toolbar .mdc-tab-bar .mdc-tab-bar__indicator { /* @alternate */ background-color: white; background-color: var(--mdc-theme-text-primary-on-dark, white); }

.mdc-tab-bar--icons-with-text { height: 72px; }

.mdc-tab-bar--indicator-primary .mdc-tab-bar__indicator, .mdc-toolbar .mdc-tab-bar--indicator-primary .mdc-tab-bar__indicator { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); }
.mdc-tab-bar--theme-dark .mdc-tab-bar--indicator-primary .mdc-tab-bar__indicator, .mdc-theme--dark .mdc-tab-bar--indicator-primary .mdc-tab-bar__indicator, .mdc-tab-bar--theme-dark .mdc-toolbar .mdc-tab-bar--indicator-primary .mdc-tab-bar__indicator, .mdc-theme--dark .mdc-toolbar .mdc-tab-bar--indicator-primary .mdc-tab-bar__indicator { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); }
.mdc-tab-bar--indicator-primary.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after, .mdc-toolbar .mdc-tab-bar--indicator-primary.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); }

.mdc-tab-bar--indicator-accent .mdc-tab-bar__indicator, .mdc-toolbar .mdc-tab-bar--indicator-accent .mdc-tab-bar__indicator { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-tab-bar--theme-dark .mdc-tab-bar--indicator-accent .mdc-tab-bar__indicator, .mdc-theme--dark .mdc-tab-bar--indicator-accent .mdc-tab-bar__indicator, .mdc-tab-bar--theme-dark .mdc-toolbar .mdc-tab-bar--indicator-accent .mdc-tab-bar__indicator, .mdc-theme--dark .mdc-toolbar .mdc-tab-bar--indicator-accent .mdc-tab-bar__indicator { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-tab-bar--indicator-accent.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after, .mdc-toolbar .mdc-tab-bar--indicator-accent.mdc-tab-bar:not(.mdc-tab-bar-upgraded) .mdc-tab::after { /* @alternate */ background-color: #00bcd4; background-color: var(--mdc-theme-secondary, #00bcd4); }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
.mdc-tab-bar-scroller { display: flex; align-items: center; box-sizing: border-box; width: 100%; background-color: inherit; overflow: hidden; }
.mdc-tab-bar-scroller__scroll-frame { display: flex; position: relative; flex: 1; justify-content: flex-start; overflow: hidden; }
.mdc-tab-bar-scroller__scroll-frame__tabs { transition: transform 240ms 0ms cubic-bezier(0, 0, 0.2, 1); will-change: transform; }
.mdc-tab-bar-scroller__indicator { display: flex; align-items: center; justify-content: center; width: 48px; cursor: pointer; visibility: hidden; /* @alternate */ color: rgba(0, 0, 0, 0.54); color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }
.mdc-tab-bar--theme-dark .mdc-tab-bar-scroller__indicator, .mdc-theme--dark .mdc-tab-bar-scroller__indicator { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-tab-bar-scroller__indicator:hover { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.mdc-tab-bar--theme-dark .mdc-tab-bar-scroller__indicator:hover, .mdc-theme--dark .mdc-tab-bar-scroller__indicator:hover { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); }
.mdc-tab-bar-scroller__indicator__inner { color: inherit; text-decoration: inherit; cursor: inherit; }
.mdc-tab-bar-scroller__indicator__inner:focus { outline-color: inherit; }
[dir="rtl"] .mdc-tab-bar-scroller .mdc-tab-bar-scroller__indicator__inner, .mdc-tab-bar-scroller[dir="rtl"] .mdc-tab-bar-scroller__indicator__inner { transform: rotate(180deg); }
.mdc-tab-bar-scroller__indicator__inner:hover { color: inherit; }
.mdc-tab-bar--theme-dark .mdc-tab-bar-scroller__indicator__inner:hover, .mdc-theme--dark .mdc-tab-bar-scroller__indicator__inner:hover { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-tab-bar-scroller__indicator--enabled { visibility: visible; }

/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
@keyframes invalid-shake-float-above-standard { 0% { transform: translateX(0) translateY(-100%) scale(0.75, 0.75); }
  33% { animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819); transform: translateX(10px) translateY(-100%) scale(0.75, 0.75); }
  66% { animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352); transform: translateX(-5px) translateY(-100%) scale(0.75, 0.75); }
  100% { transform: translateX(0) translateY(-100%) scale(0.75, 0.75); } }
@keyframes invalid-shake-float-above-box { 0% { transform: translateX(0) translateY(-50%) scale(0.75, 0.75); }
  33% { animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819); transform: translateX(10px) translateY(-50%) scale(0.75, 0.75); }
  66% { animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352); transform: translateX(-5px) translateY(-50%) scale(0.75, 0.75); }
  100% { transform: translateX(0) translateY(-50%) scale(0.75, 0.75); } }
.mdc-text-field, .input-field { display: inline-block; position: relative; margin-bottom: 8px; will-change: opacity, transform, color; }
.mdc-text-field__input, .input-field input { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; letter-spacing: 0.04em; width: 100%; padding: 0 0 8px; transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1); border: none; border-bottom: 1px solid rgba(0, 0, 0, 0.5); background: none; font-size: inherit; appearance: none; }
.mdc-text-field__input::placeholder, .input-field input::placeholder { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)); transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1); opacity: 1; }
.mdc-text-field__input:hover, .input-field input:hover { border-color: black; }
.mdc-text-field__input:focus, .input-field input:focus { outline: none; }
.mdc-text-field__input:focus::placeholder, .input-field input:focus::placeholder { color: rgba(255, 255, 255, 0.3); }
.mdc-text-field__input:invalid, .input-field input:invalid { box-shadow: none; }
.mdc-text-field__input--theme-dark, .mdc-theme--dark .mdc-text-field__input, .mdc-theme--dark .input-field input, .input-field .mdc-theme--dark input { /* @alternate */ color: white; color: var(--mdc-theme-text-primary-on-dark, white); border-bottom: 1px solid rgba(255, 255, 255, 0.5); }
.mdc-text-field__input--theme-dark:hover, .mdc-theme--dark .mdc-text-field__input:hover, .mdc-theme--dark .input-field input:hover, .input-field .mdc-theme--dark input:hover { border-bottom: 1px solid white; }
.mdc-text-field__input--theme-dark::placeholder, .mdc-theme--dark .mdc-text-field__input::placeholder, .mdc-theme--dark .input-field input::placeholder, .input-field .mdc-theme--dark input::placeholder { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-text-field__input--theme-dark:focus::placeholder, .mdc-theme--dark .mdc-text-field__input:focus::placeholder, .mdc-theme--dark .input-field input:focus::placeholder, .input-field .mdc-theme--dark input:focus::placeholder { color: rgba(0, 0, 0, 0.38); }
.mdc-text-field__bottom-line, .input-field div { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); position: absolute; bottom: 0; left: 0; width: 100%; height: 2px; transform: scaleX(0); transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), opacity 180ms cubic-bezier(0.4, 0, 0.2, 1); opacity: 0; z-index: 2; }
.mdc-text-field__bottom-line--active { transform: scaleX(1); }
.mdc-text-field .mdc-text-field__input:focus ~ .mdc-text-field__bottom-line, .input-field .mdc-text-field__input:focus ~ .mdc-text-field__bottom-line, .mdc-text-field .input-field input:focus ~ .mdc-text-field__bottom-line, .input-field .mdc-text-field input:focus ~ .mdc-text-field__bottom-line, .input-field input:focus ~ .mdc-text-field__bottom-line, .mdc-text-field .input-field .mdc-text-field__input:focus ~ div, .input-field .mdc-text-field .mdc-text-field__input:focus ~ div, .input-field .mdc-text-field__input:focus ~ div, .mdc-text-field .input-field input:focus ~ div, .input-field .mdc-text-field input:focus ~ div, .input-field input:focus ~ div { opacity: 1; }
.mdc-text-field__label, .input-field label { position: absolute; bottom: 8px; left: 0; transform-origin: left top; transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1); color: rgba(0, 0, 0, 0.5); cursor: text; }
[dir="rtl"] .mdc-text-field .mdc-text-field__label, [dir="rtl"] .input-field .mdc-text-field__label, [dir="rtl"] .mdc-text-field .input-field label, .input-field [dir="rtl"] .mdc-text-field label, [dir="rtl"] .input-field label, .mdc-text-field[dir="rtl"] .mdc-text-field__label, [dir="rtl"].input-field .mdc-text-field__label, .mdc-text-field[dir="rtl"] .input-field label, .input-field .mdc-text-field[dir="rtl"] label, [dir="rtl"].input-field label { right: 0; left: auto; transform-origin: right top; }
.mdc-text-field--theme-dark .mdc-text-field__label, .mdc-text-field--theme-dark .input-field label, .input-field .mdc-text-field--theme-dark label, .mdc-theme--dark .mdc-text-field__label, .mdc-theme--dark .input-field label, .input-field .mdc-theme--dark label { color: rgba(255, 255, 255, 0.6); }
.mdc-text-field__label--float-above { transform: translateY(-100%) scale(0.75, 0.75); cursor: auto; }

.mdc-text-field__input:-webkit-autofill + .mdc-text-field__label, .input-field input:-webkit-autofill + .mdc-text-field__label, .input-field .mdc-text-field__input:-webkit-autofill + label, .input-field input:-webkit-autofill + label { transform: translateY(-100%) scale(0.75, 0.75); cursor: auto; }

.mdc-text-field--box { --mdc-ripple-fg-size: 0; --mdc-ripple-left: 0; --mdc-ripple-top: 0; --mdc-ripple-fg-scale: 1; --mdc-ripple-fg-translate-end: 0; --mdc-ripple-fg-translate-start: 0; will-change: transform, opacity; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); border-radius: 4px 4px 0 0; display: inline-flex; position: relative; height: 56px; background-color: rgba(0, 0, 0, 0.04); overflow: hidden; }
.mdc-text-field--box::before, .mdc-text-field--box::after { position: absolute; transition: opacity 250ms linear; border-radius: 50%; pointer-events: none; content: ""; }
.mdc-text-field--box::before, .mdc-text-field--box::after { background-color: rgba(0, 0, 0, 0.04); opacity: 0; }
.mdc-text-field--box:not(.mdc-ripple-upgraded):hover::before, .mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before, .mdc-text-field--box:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-text-field--box.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-text-field--box.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-text-field--box.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-text-field--box.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-text-field--box.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-text-field--box::before, .mdc-text-field--box::after { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; }
.mdc-text-field--box.mdc-ripple-upgraded::before { top: calc(50% - 100%); left: calc(50% - 100%); width: 200%; height: 200%; transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-text-field--box.mdc-ripple-upgraded--unbounded::before { top: var(--mdc-ripple-top, calc(50% - 50%)); left: var(--mdc-ripple-left, calc(50% - 50%)); width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(var(--mdc-ripple-fg-scale, 0)); }
.mdc-text-field--box.mdc-ripple-upgraded::after { top: 0; left: 0; width: var(--mdc-ripple-fg-size, 100%); height: var(--mdc-ripple-fg-size, 100%); transform: scale(0); transform-origin: center center; }
.mdc-text-field--box.mdc-ripple-upgraded--unbounded::after { top: var(--mdc-ripple-top, 0); left: var(--mdc-ripple-left, 0); }
.mdc-text-field--theme-dark.mdc-text-field--box, .mdc-theme--dark .mdc-text-field--box { background-color: rgba(255, 255, 255, 0.1); }
.mdc-text-field--theme-dark.mdc-text-field--box::before, .mdc-text-field--theme-dark.mdc-text-field--box::after, .mdc-theme--dark .mdc-text-field--box::before, .mdc-theme--dark .mdc-text-field--box::after { background-color: rgba(255, 255, 255, 0.05); opacity: 0; }
.mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded):hover::before, .mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before, .mdc-text-field--theme-dark.mdc-text-field--box:not(.mdc-ripple-upgraded):active::after, .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded):hover::before, .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded):focus::before, .mdc-theme--dark .mdc-text-field--box:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded--background-focused::before, .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded--background-active-fill::before, .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded::after, .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded::after { opacity: 0; }
.mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded--foreground-activation::after, .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.mdc-text-field--theme-dark.mdc-text-field--box.mdc-ripple-upgraded--foreground-deactivation::after, .mdc-theme--dark .mdc-text-field--box.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }
.mdc-text-field--box .mdc-text-field__input, .mdc-text-field--box .input-field input, .input-field .mdc-text-field--box input { align-self: flex-end; box-sizing: border-box; height: 100%; padding: 20px 16px 0; }
.mdc-text-field--box .mdc-text-field__label, .mdc-text-field--box .input-field label, .input-field .mdc-text-field--box label { left: 16px; right: initial; position: absolute; bottom: 20px; width: calc(100% - 48px); color: rgba(0, 0, 0, 0.6); text-overflow: ellipsis; white-space: nowrap; pointer-events: none; overflow: hidden; will-change: transform; }
[dir="rtl"] .mdc-text-field--box .mdc-text-field__label, [dir="rtl"] .mdc-text-field--box .input-field label, .input-field [dir="rtl"] .mdc-text-field--box label, .mdc-text-field--box .mdc-text-field__label[dir="rtl"], .mdc-text-field--box .input-field label[dir="rtl"], .input-field .mdc-text-field--box label[dir="rtl"] { left: initial; right: 16px; }
.mdc-text-field--theme-dark .mdc-text-field--box .mdc-text-field__label, .mdc-text-field--theme-dark .mdc-text-field--box .input-field label, .input-field .mdc-text-field--theme-dark .mdc-text-field--box label, .mdc-theme--dark .mdc-text-field--box .mdc-text-field__label, .mdc-theme--dark .mdc-text-field--box .input-field label, .input-field .mdc-theme--dark .mdc-text-field--box label { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }
.mdc-text-field--box .mdc-text-field__label--float-above { transform: translateY(-50%) scale(0.75, 0.75); }
.mdc-text-field--box .mdc-text-field__label--float-above.mdc-text-field__label--shake { animation: invalid-shake-float-above-box 250ms 1; }
.mdc-text-field--box.mdc-text-field--disabled { color: rgba(255, 255, 255, 0.3); border-bottom: none; background-color: rgba(0, 0, 0, 0.02); }
.mdc-text-field--theme-dark.mdc-text-field--box.mdc-text-field--disabled, .mdc-theme--dark .mdc-text-field--box.mdc-text-field--disabled { background-color: #303030; color: rgba(0, 0, 0, 0.38); border-bottom: none; }
.mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--box.mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--box.mdc-text-field--disabled label { bottom: 20px; }
.mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__icon { color: rgba(0, 0, 0, 0.3); }
.mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__icon--theme-dark, .mdc-theme--dark .mdc-text-field--box.mdc-text-field--disabled .mdc-text-field__icon { color: rgba(255, 255, 255, 0.3); }
.mdc-text-field--box.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--box.mdc-text-field--dense .input-field input, .input-field .mdc-text-field--box.mdc-text-field--dense input { padding: 12px 12px 0; }
.mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label, .mdc-text-field--box.mdc-text-field--dense .input-field label, .input-field .mdc-text-field--box.mdc-text-field--dense label { left: 12px; right: initial; bottom: 20px; }
[dir="rtl"] .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label, [dir="rtl"] .mdc-text-field--box.mdc-text-field--dense .input-field label, .input-field [dir="rtl"] .mdc-text-field--box.mdc-text-field--dense label, .mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label[dir="rtl"], .mdc-text-field--box.mdc-text-field--dense .input-field label[dir="rtl"], .input-field .mdc-text-field--box.mdc-text-field--dense label[dir="rtl"] { left: initial; right: 12px; }
.mdc-text-field--box.mdc-text-field--dense .mdc-text-field__label--float-above { transform: translateY(calc(-75% - 2px)) scale(0.923, 0.923); }

.mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--with-trailing-icon .mdc-text-field__icon { position: absolute; bottom: 16px; cursor: pointer; }
.mdc-text-field--theme-dark .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-theme--dark .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--theme-dark .mdc-text-field--with-trailing-icon .mdc-text-field__icon, .mdc-theme--dark .mdc-text-field--with-trailing-icon .mdc-text-field__icon { /* @alternate */ color: rgba(255, 255, 255, 0.7); color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }

.mdc-text-field--with-leading-icon .mdc-text-field__input, .mdc-text-field--with-leading-icon .input-field input, .input-field .mdc-text-field--with-leading-icon input { padding-left: 48px; padding-right: 15px; }
[dir="rtl"] .mdc-text-field--with-leading-icon .mdc-text-field__input, [dir="rtl"] .mdc-text-field--with-leading-icon .input-field input, .input-field [dir="rtl"] .mdc-text-field--with-leading-icon input, .mdc-text-field--with-leading-icon .mdc-text-field__input[dir="rtl"], .mdc-text-field--with-leading-icon .input-field input[dir="rtl"], .input-field .mdc-text-field--with-leading-icon input[dir="rtl"] { padding-left: 15px; padding-right: 48px; }
.mdc-text-field--with-leading-icon .mdc-text-field__icon { left: 15px; right: initial; }
[dir="rtl"] .mdc-text-field--with-leading-icon .mdc-text-field__icon, .mdc-text-field--with-leading-icon .mdc-text-field__icon[dir="rtl"] { left: initial; right: 15px; }
.mdc-text-field--with-leading-icon .mdc-text-field__label, .mdc-text-field--with-leading-icon .input-field label, .input-field .mdc-text-field--with-leading-icon label { left: 48px; right: initial; }
[dir="rtl"] .mdc-text-field--with-leading-icon .mdc-text-field__label, [dir="rtl"] .mdc-text-field--with-leading-icon .input-field label, .input-field [dir="rtl"] .mdc-text-field--with-leading-icon label, .mdc-text-field--with-leading-icon .mdc-text-field__label[dir="rtl"], .mdc-text-field--with-leading-icon .input-field label[dir="rtl"], .input-field .mdc-text-field--with-leading-icon label[dir="rtl"] { left: initial; right: 48px; }

.mdc-text-field--with-trailing-icon .mdc-text-field__input, .mdc-text-field--with-trailing-icon .input-field input, .input-field .mdc-text-field--with-trailing-icon input { padding-left: 15px; padding-right: 48px; }
[dir="rtl"] .mdc-text-field--with-trailing-icon .mdc-text-field__input, [dir="rtl"] .mdc-text-field--with-trailing-icon .input-field input, .input-field [dir="rtl"] .mdc-text-field--with-trailing-icon input, .mdc-text-field--with-trailing-icon .mdc-text-field__input[dir="rtl"], .mdc-text-field--with-trailing-icon .input-field input[dir="rtl"], .input-field .mdc-text-field--with-trailing-icon input[dir="rtl"] { padding-left: 48px; padding-right: 15px; }
.mdc-text-field--with-trailing-icon .mdc-text-field__icon { left: initial; right: 15px; }
[dir="rtl"] .mdc-text-field--with-trailing-icon .mdc-text-field__icon, .mdc-text-field--with-trailing-icon .mdc-text-field__icon[dir="rtl"] { left: 15px; right: initial; }

.mdc-text-field__icon:not([tabindex]), .mdc-text-field__icon[tabindex="-1"] { cursor: default; pointer-events: none; }

.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon { bottom: 16px; transform: scale(0.8); }

.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-leading-icon.mdc-text-field--dense .input-field input, .input-field .mdc-text-field--with-leading-icon.mdc-text-field--dense input { padding-left: 38px; padding-right: 12px; }
[dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input, [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .input-field input, .input-field [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense input, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__input[dir="rtl"], .mdc-text-field--with-leading-icon.mdc-text-field--dense .input-field input[dir="rtl"], .input-field .mdc-text-field--with-leading-icon.mdc-text-field--dense input[dir="rtl"] { padding-left: 12px; padding-right: 38px; }
.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon { left: 12px; right: initial; }
[dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__icon[dir="rtl"] { left: initial; right: 12px; }
.mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__label, .mdc-text-field--with-leading-icon.mdc-text-field--dense .input-field label, .input-field .mdc-text-field--with-leading-icon.mdc-text-field--dense label { left: 38px; right: initial; }
[dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__label, [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense .input-field label, .input-field [dir="rtl"] .mdc-text-field--with-leading-icon.mdc-text-field--dense label, .mdc-text-field--with-leading-icon.mdc-text-field--dense .mdc-text-field__label[dir="rtl"], .mdc-text-field--with-leading-icon.mdc-text-field--dense .input-field label[dir="rtl"], .input-field .mdc-text-field--with-leading-icon.mdc-text-field--dense label[dir="rtl"] { left: initial; right: 38px; }

.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .input-field input, .input-field .mdc-text-field--with-trailing-icon.mdc-text-field--dense input { padding-left: 12px; padding-right: 38px; }
[dir="rtl"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input, [dir="rtl"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .input-field input, .input-field [dir="rtl"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense input, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__input[dir="rtl"], .mdc-text-field--with-trailing-icon.mdc-text-field--dense .input-field input[dir="rtl"], .input-field .mdc-text-field--with-trailing-icon.mdc-text-field--dense input[dir="rtl"] { padding-left: 38px; padding-right: 12px; }
.mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon { left: initial; right: 12px; }
[dir="rtl"] .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon, .mdc-text-field--with-trailing-icon.mdc-text-field--dense .mdc-text-field__icon[dir="rtl"] { left: 12px; right: initial; }

.mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) { display: inline-flex; position: relative; align-items: flex-end; box-sizing: border-box; margin-top: 16px; }
.mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box):not(.mdc-text-field--textarea) { height: 48px; }
.mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) .mdc-text-field__label, .mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) .input-field label, .input-field .mdc-text-field--upgraded:not(.mdc-text-field--fullwidth):not(.mdc-text-field--box) label { pointer-events: none; }

.mdc-text-field--invalid .mdc-text-field__label, .mdc-text-field--invalid .input-field label, .input-field .mdc-text-field--invalid label { color: #d50000; }
.mdc-text-field--invalid .mdc-text-field__input, .mdc-text-field--invalid .input-field input, .input-field .mdc-text-field--invalid input { border-color: #d50000; }
.mdc-text-field--invalid .mdc-text-field__bottom-line, .mdc-text-field--invalid .input-field div, .input-field .mdc-text-field--invalid div { background-color: #d50000; }

.mdc-text-field--invalid.mdc-text-field--textarea { border-color: #d50000; }

.mdc-text-field__label--float-above.mdc-text-field__label--shake { animation: invalid-shake-float-above-standard 250ms 1; }

.mdc-text-field--dense { margin-top: 12px; margin-bottom: 4px; font-size: .813rem; }
.mdc-text-field--dense .mdc-text-field__label--float-above { transform: translateY(calc(-100% - 2px)) scale(0.923, 0.923); }

.mdc-text-field--disabled { pointer-events: none; }
.mdc-text-field--disabled .mdc-text-field__input, .mdc-text-field--disabled .input-field input, .input-field .mdc-text-field--disabled input { border-bottom: 1px dotted rgba(35, 31, 32, 0.26); }
.mdc-text-field--theme-dark.mdc-text-field--disabled .mdc-text-field__input, .mdc-text-field--theme-dark.mdc-text-field--disabled .input-field input, .input-field .mdc-text-field--theme-dark.mdc-text-field--disabled input, .mdc-theme--dark .mdc-text-field--disabled .mdc-text-field__input, .mdc-theme--dark .mdc-text-field--disabled .input-field input, .input-field .mdc-theme--dark .mdc-text-field--disabled input { border-bottom: 1px dotted rgba(255, 255, 255, 0.3); }
.mdc-text-field--disabled .mdc-text-field__input, .mdc-text-field--disabled .input-field input, .input-field .mdc-text-field--disabled input, .mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--disabled label, .mdc-text-field--disabled + .mdc-text-field-helptext, .mdc-text-field--disabled + .help-text { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-text-field--theme-dark .mdc-text-field--disabled .mdc-text-field__input, .mdc-text-field--theme-dark .mdc-text-field--disabled .input-field input, .input-field .mdc-text-field--theme-dark .mdc-text-field--disabled input, .mdc-theme--dark .mdc-text-field--disabled .mdc-text-field__input, .mdc-theme--dark .mdc-text-field--disabled .input-field input, .input-field .mdc-theme--dark .mdc-text-field--disabled input, .mdc-text-field--theme-dark .mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--theme-dark .mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--theme-dark .mdc-text-field--disabled label, .mdc-theme--dark .mdc-text-field--disabled .mdc-text-field__label, .mdc-theme--dark .mdc-text-field--disabled .input-field label, .input-field .mdc-theme--dark .mdc-text-field--disabled label { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-text-field--theme-dark.mdc-text-field--disabled + .mdc-text-field-helptext, .mdc-text-field--theme-dark.mdc-text-field--disabled + .help-text, .mdc-theme--dark .mdc-text-field--disabled + .mdc-text-field-helptext, .mdc-theme--dark .mdc-text-field--disabled + .help-text { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--disabled label { bottom: 8px; cursor: default; }

.mdc-text-field--invalid.mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--invalid.mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--invalid.mdc-text-field--disabled label { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }
.mdc-text-field--theme-dark .mdc-text-field--invalid.mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--theme-dark .mdc-text-field--invalid.mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--theme-dark .mdc-text-field--invalid.mdc-text-field--disabled label, .mdc-theme--dark .mdc-text-field--invalid.mdc-text-field--disabled .mdc-text-field__label, .mdc-theme--dark .mdc-text-field--invalid.mdc-text-field--disabled .input-field label, .input-field .mdc-theme--dark .mdc-text-field--invalid.mdc-text-field--disabled label { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }

.mdc-text-field__input:required + .mdc-text-field__label::after, .input-field input:required + .mdc-text-field__label::after, .input-field .mdc-text-field__input:required + label::after, .input-field input:required + label::after { margin-left: 1px; content: "*"; }
.mdc-text-field--focused .mdc-text-field__input:required + .mdc-text-field__label::after, .mdc-text-field--focused .input-field input:required + .mdc-text-field__label::after, .input-field .mdc-text-field--focused input:required + .mdc-text-field__label::after, .mdc-text-field--focused .input-field .mdc-text-field__input:required + label::after, .input-field .mdc-text-field--focused .mdc-text-field__input:required + label::after, .mdc-text-field--focused .input-field input:required + label::after, .input-field .mdc-text-field--focused input:required + label::after { color: #d50000; }
.mdc-text-field--theme-dark.mdc-text-field--focused .mdc-text-field__input:required + .mdc-text-field__label::after, .mdc-text-field--theme-dark.mdc-text-field--focused .input-field input:required + .mdc-text-field__label::after, .input-field .mdc-text-field--theme-dark.mdc-text-field--focused input:required + .mdc-text-field__label::after, .mdc-text-field--theme-dark.mdc-text-field--focused .input-field .mdc-text-field__input:required + label::after, .input-field .mdc-text-field--theme-dark.mdc-text-field--focused .mdc-text-field__input:required + label::after, .mdc-text-field--theme-dark.mdc-text-field--focused .input-field input:required + label::after, .input-field .mdc-text-field--theme-dark.mdc-text-field--focused input:required + label::after, .mdc-theme--dark .mdc-text-field--focused .mdc-text-field__input:required + .mdc-text-field__label::after, .mdc-theme--dark .mdc-text-field--focused .input-field input:required + .mdc-text-field__label::after, .input-field .mdc-theme--dark .mdc-text-field--focused input:required + .mdc-text-field__label::after, .mdc-theme--dark .mdc-text-field--focused .input-field .mdc-text-field__input:required + label::after, .input-field .mdc-theme--dark .mdc-text-field--focused .mdc-text-field__input:required + label::after, .mdc-theme--dark .mdc-text-field--focused .input-field input:required + label::after, .input-field .mdc-theme--dark .mdc-text-field--focused input:required + label::after { color: #ff6e6e; }

.mdc-text-field--textarea { border-radius: 4px; display: flex; height: initial; transition: none; border: 1px solid rgba(0, 0, 0, 0.73); overflow: hidden; }
.mdc-text-field--textarea .mdc-text-field__label, .mdc-text-field--textarea .input-field label, .input-field .mdc-text-field--textarea label { border-radius: 4px 4px 0 0; }
.mdc-text-field--textarea .mdc-text-field__input, .mdc-text-field--textarea .input-field input, .input-field .mdc-text-field--textarea input { border-radius: 2px; }
.mdc-text-field--theme-dark .mdc-text-field--textarea, .mdc-theme--dark .mdc-text-field--textarea { border-color: white; }
.mdc-text-field--textarea .mdc-text-field__input, .mdc-text-field--textarea .input-field input, .input-field .mdc-text-field--textarea input { padding: 16px; padding-top: 32px; border: 1px solid transparent; }
.mdc-text-field--textarea .mdc-text-field__input:focus, .mdc-text-field--textarea .input-field input:focus, .input-field .mdc-text-field--textarea input:focus { /* @alternate */ border-color: #e5c601; border-color: var(--mdc-theme-primary, #e5c601); }
.mdc-text-field--textarea .mdc-text-field__input:invalid:not(:focus), .mdc-text-field--textarea .input-field input:invalid:not(:focus), .input-field .mdc-text-field--textarea input:invalid:not(:focus) { border-color: #d50000; }
.mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__input:hover, .mdc-text-field--theme-dark .mdc-text-field--textarea .input-field input:hover, .input-field .mdc-text-field--theme-dark .mdc-text-field--textarea input:hover, .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__input:hover, .mdc-theme--dark .mdc-text-field--textarea .input-field input:hover, .input-field .mdc-theme--dark .mdc-text-field--textarea input:hover { border-bottom-color: transparent; }
.mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__input:focus, .mdc-text-field--theme-dark .mdc-text-field--textarea .input-field input:focus, .input-field .mdc-text-field--theme-dark .mdc-text-field--textarea input:focus, .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__input:focus, .mdc-theme--dark .mdc-text-field--textarea .input-field input:focus, .input-field .mdc-theme--dark .mdc-text-field--textarea input:focus { /* @alternate */ border-color: #00bcd4; border-color: var(--mdc-theme-secondary, #00bcd4); }
.mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__input:invalid:not(:focus), .mdc-text-field--theme-dark .mdc-text-field--textarea .input-field input:invalid:not(:focus), .input-field .mdc-text-field--theme-dark .mdc-text-field--textarea input:invalid:not(:focus), .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__input:invalid:not(:focus), .mdc-theme--dark .mdc-text-field--textarea .input-field input:invalid:not(:focus), .input-field .mdc-theme--dark .mdc-text-field--textarea input:invalid:not(:focus) { border-color: #ff6e6e; }
.mdc-text-field--textarea .mdc-text-field__label, .mdc-text-field--textarea .input-field label, .input-field .mdc-text-field--textarea label { left: 1px; right: initial; top: 18px; bottom: auto; padding: 8px 16px; background-color: white; }
[dir="rtl"] .mdc-text-field--textarea .mdc-text-field__label, [dir="rtl"] .mdc-text-field--textarea .input-field label, .input-field [dir="rtl"] .mdc-text-field--textarea label, .mdc-text-field--textarea .mdc-text-field__label[dir="rtl"], .mdc-text-field--textarea .input-field label[dir="rtl"], .input-field .mdc-text-field--textarea label[dir="rtl"] { left: initial; right: 1px; }
.mdc-text-field--theme-dark .mdc-text-field--textarea .mdc-text-field__label, .mdc-text-field--theme-dark .mdc-text-field--textarea .input-field label, .input-field .mdc-text-field--theme-dark .mdc-text-field--textarea label, .mdc-theme--dark .mdc-text-field--textarea .mdc-text-field__label, .mdc-theme--dark .mdc-text-field--textarea .input-field label, .input-field .mdc-theme--dark .mdc-text-field--textarea label { background-color: #303030; }
.mdc-text-field--textarea .mdc-text-field__label--float-above { transform: translateY(-50%) scale(0.923, 0.923); }
.mdc-text-field--textarea.mdc-text-field--disabled { border-style: solid; border-color: rgba(35, 31, 32, 0.26); background-color: #f9f9f9; }
.mdc-text-field--theme-dark .mdc-text-field--textarea.mdc-text-field--disabled, .mdc-theme--dark .mdc-text-field--textarea.mdc-text-field--disabled { border-color: rgba(255, 255, 255, 0.3); background-color: #2f2f2f; }
.mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--textarea.mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--textarea.mdc-text-field--disabled label { background-color: #f9f9f9; }
.mdc-text-field--theme-dark .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__label, .mdc-text-field--theme-dark .mdc-text-field--textarea.mdc-text-field--disabled .input-field label, .input-field .mdc-text-field--theme-dark .mdc-text-field--textarea.mdc-text-field--disabled label, .mdc-theme--dark .mdc-text-field--textarea.mdc-text-field--disabled .mdc-text-field__label, .mdc-theme--dark .mdc-text-field--textarea.mdc-text-field--disabled .input-field label, .input-field .mdc-theme--dark .mdc-text-field--textarea.mdc-text-field--disabled label { background-color: #2f2f2f; }
.mdc-text-field--textarea:not(.mdc-text-field--upgraded) .mdc-text-field__input, .mdc-text-field--textarea:not(.mdc-text-field--upgraded) .input-field input, .input-field .mdc-text-field--textarea:not(.mdc-text-field--upgraded) input { padding-top: 16px; }

.mdc-text-field--textarea.mdc-text-field--focused { /* @alternate */ border-color: #e5c601; border-color: var(--mdc-theme-primary, #e5c601); }

.mdc-text-field--fullwidth { width: 100%; }
.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) { display: block; box-sizing: border-box; height: 56px; margin: 0; border: none; border-bottom: 1px solid rgba(0, 0, 0, 0.12); outline: none; }
.mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .mdc-text-field__input, .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) .input-field input, .input-field .mdc-text-field--fullwidth:not(.mdc-text-field--textarea) input { width: 100%; height: 100%; padding: 0; resize: none; border: none !important; }
.mdc-text-field--fullwidth--theme-dark, .mdc-theme--dark .mdc-text-field--fullwidth { border-bottom: 1px solid rgba(255, 255, 255, 0.12); }

.mdc-text-field:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) .mdc-text-field__input, .input-field:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) .mdc-text-field__input, .mdc-text-field:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) .input-field input, .input-field .mdc-text-field:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) input, .input-field:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) input { transition: border-bottom-color 180ms cubic-bezier(0.4, 0, 0.2, 1); border-bottom: 1px solid rgba(0, 0, 0, 0.12); }
.mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:focus, .input-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:focus, .mdc-text-field:not(.mdc-text-field--upgraded) .input-field input:focus, .input-field .mdc-text-field:not(.mdc-text-field--upgraded) input:focus, .input-field:not(.mdc-text-field--upgraded) input:focus { /* @alternate */ border-color: #e5c601; border-color: var(--mdc-theme-primary, #e5c601); }
.mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled, .input-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled, .mdc-text-field:not(.mdc-text-field--upgraded) .input-field input:disabled, .input-field .mdc-text-field:not(.mdc-text-field--upgraded) input:disabled, .input-field:not(.mdc-text-field--upgraded) input:disabled { color: rgba(0, 0, 0, 0.38); border-bottom-style: dotted; }
.mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus), .input-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus), .mdc-text-field:not(.mdc-text-field--upgraded) .input-field input:invalid:not(:focus), .input-field .mdc-text-field:not(.mdc-text-field--upgraded) input:invalid:not(:focus), .input-field:not(.mdc-text-field--upgraded) input:invalid:not(:focus) { border-color: #d50000; }
.mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .mdc-text-field__input:not(:focus), .mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .input-field input:not(:focus), .input-field .mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) input:not(:focus), .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:not(:focus), .mdc-theme--dark .input-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:not(:focus), .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .input-field input:not(:focus), .input-field .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) input:not(:focus), .mdc-theme--dark .input-field:not(.mdc-text-field--upgraded) input:not(:focus) { border-color: rgba(255, 255, 255, 0.12); }
.mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled, .mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .input-field input:disabled, .input-field .mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) input:disabled, .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled, .mdc-theme--dark .input-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:disabled, .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .input-field input:disabled, .input-field .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) input:disabled, .mdc-theme--dark .input-field:not(.mdc-text-field--upgraded) input:disabled { color: rgba(0, 0, 0, 0.38); border-color: rgba(255, 255, 255, 0.3); background-color: #2f2f2f; }
.mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus), .mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) .input-field input:invalid:not(:focus), .input-field .mdc-text-field--theme-dark:not(.mdc-text-field--upgraded) input:invalid:not(:focus), .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus), .mdc-theme--dark .input-field:not(.mdc-text-field--upgraded) .mdc-text-field__input:invalid:not(:focus), .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) .input-field input:invalid:not(:focus), .input-field .mdc-theme--dark .mdc-text-field:not(.mdc-text-field--upgraded) input:invalid:not(:focus), .mdc-theme--dark .input-field:not(.mdc-text-field--upgraded) input:invalid:not(:focus) { border-color: #ff6e6e; }

.mdc-text-field--box:not(.mdc-text-field--upgraded) { height: 56px; }
.mdc-text-field--box:not(.mdc-text-field--upgraded)::before, .mdc-text-field--box:not(.mdc-text-field--upgraded)::after { border-radius: 0; }
.mdc-text-field--box:not(.mdc-text-field--upgraded) .mdc-text-field__input, .mdc-text-field--box:not(.mdc-text-field--upgraded) .input-field input, .input-field .mdc-text-field--box:not(.mdc-text-field--upgraded) input { padding-top: 0; }

.mdc-text-field-helptext, .help-text { /* @alternate */ color: rgba(0, 0, 0, 0.38); color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)); margin: 0; transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1); opacity: 0; font-size: .75rem; will-change: opacity; }
.mdc-text-field-helptext--theme-dark, .mdc-theme--dark .mdc-text-field-helptext, .mdc-theme--dark .help-text { /* @alternate */ color: rgba(255, 255, 255, 0.5); color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }
.mdc-text-field + .mdc-text-field-helptext, .input-field + .mdc-text-field-helptext, .mdc-text-field + .help-text, .input-field + .help-text { margin-bottom: 8px; }
.mdc-text-field--dense + .mdc-text-field-helptext, .mdc-text-field--dense + .help-text { margin-bottom: 4px; }
.mdc-text-field--focused + .mdc-text-field-helptext:not(.mdc-text-field-helptext--validation-msg), .mdc-text-field--focused + .help-text:not(.mdc-text-field-helptext--validation-msg) { opacity: 1; }
.mdc-text-field--box + .mdc-text-field-helptext, .mdc-text-field--box + .help-text { margin-right: 16px; margin-left: 16px; }

.mdc-text-field-helptext--persistent { transition: none; opacity: 1; will-change: initial; }

.mdc-text-field--invalid + .mdc-text-field-helptext--validation-msg { opacity: 1; color: #d50000; }
.mdc-text-field--theme-dark.mdc-text-field--invalid + .mdc-text-field-helptext--validation-msg, .mdc-theme--dark .mdc-text-field--invalid + .mdc-text-field-helptext--validation-msg { color: #ff6e6e; }

.mdc-form-field > .mdc-text-field + label, .mdc-form-field > .input-field + label { align-self: flex-start; }

:root { --mdc-theme-primary: #e5c601; --mdc-theme-primary-light: #fee22f; --mdc-theme-primary-dark: #9e8901; --mdc-theme-secondary: #00bcd4; --mdc-theme-secondary-light: #1ce5ff; --mdc-theme-secondary-dark: #007d8d; --mdc-theme-background: #fff; --mdc-theme-text-primary-on-primary: rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-primary: rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-primary: rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-primary: rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-primary: rgba(0, 0, 0, 0.38); --mdc-theme-text-primary-on-primary-light: rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-primary-light: rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-primary-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-primary-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-primary-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-primary-on-primary-dark: white; --mdc-theme-text-secondary-on-primary-dark: rgba(255, 255, 255, 0.7); --mdc-theme-text-hint-on-primary-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-disabled-on-primary-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-icon-on-primary-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-primary-on-secondary: rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-secondary: rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-secondary: rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-secondary: rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-secondary: rgba(0, 0, 0, 0.38); --mdc-theme-text-primary-on-secondary-light: rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-secondary-light: rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-secondary-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-secondary-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-secondary-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-primary-on-secondary-dark: white; --mdc-theme-text-secondary-on-secondary-dark: rgba(255, 255, 255, 0.7); --mdc-theme-text-hint-on-secondary-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-disabled-on-secondary-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-icon-on-secondary-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38); --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87); --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54); --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38); --mdc-theme-text-primary-on-dark: white; --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7); --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5); --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5); }

.mdc-theme--background { /* @alternate */ background-color: #fff; background-color: var(--mdc-theme-background, #fff); }

.mdc-theme--primary { /* @alternate */ color: #e5c601 !important; color: var(--mdc-theme-primary, #e5c601) !important; }

.mdc-theme--primary-light { /* @alternate */ color: #fee22f !important; color: var(--mdc-theme-primary-light, #fee22f) !important; }

.mdc-theme--primary-dark { /* @alternate */ color: #9e8901 !important; color: var(--mdc-theme-primary-dark, #9e8901) !important; }

.mdc-theme--secondary { /* @alternate */ color: #00bcd4 !important; color: var(--mdc-theme-secondary, #00bcd4) !important; }

.mdc-theme--secondary-light { /* @alternate */ color: #1ce5ff !important; color: var(--mdc-theme-secondary-light, #1ce5ff) !important; }

.mdc-theme--secondary-dark { /* @alternate */ color: #007d8d !important; color: var(--mdc-theme-secondary-dark, #007d8d) !important; }

.mdc-theme--text-primary-on-primary { /* @alternate */ color: rgba(0, 0, 0, 0.87) !important; color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-primary { /* @alternate */ color: rgba(0, 0, 0, 0.54) !important; color: var(--mdc-theme-text-secondary-on-primary, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-primary { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-hint-on-primary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-primary { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-disabled-on-primary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-primary { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-icon-on-primary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-primary-light { /* @alternate */ color: rgba(0, 0, 0, 0.87) !important; color: var(--mdc-theme-text-primary-on-primary-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-primary-light { /* @alternate */ color: rgba(0, 0, 0, 0.54) !important; color: var(--mdc-theme-text-secondary-on-primary-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-primary-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-hint-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-primary-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-disabled-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-primary-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-icon-on-primary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-primary-dark { /* @alternate */ color: white !important; color: var(--mdc-theme-text-primary-on-primary-dark, white) !important; }

.mdc-theme--text-secondary-on-primary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.7) !important; color: var(--mdc-theme-text-secondary-on-primary-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-primary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-hint-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-primary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-disabled-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-primary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-icon-on-primary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-secondary { /* @alternate */ color: rgba(0, 0, 0, 0.87) !important; color: var(--mdc-theme-text-primary-on-secondary, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-secondary, .cta-actions button { /* @alternate */ color: rgba(0, 0, 0, 0.54) !important; color: var(--mdc-theme-text-secondary-on-secondary, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-secondary { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-hint-on-secondary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-secondary { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-disabled-on-secondary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-secondary { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-icon-on-secondary, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-secondary-light { /* @alternate */ color: rgba(0, 0, 0, 0.87) !important; color: var(--mdc-theme-text-primary-on-secondary-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-secondary-light { /* @alternate */ color: rgba(0, 0, 0, 0.54) !important; color: var(--mdc-theme-text-secondary-on-secondary-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-secondary-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-hint-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-secondary-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-disabled-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-secondary-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-icon-on-secondary-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-secondary-dark { /* @alternate */ color: white !important; color: var(--mdc-theme-text-primary-on-secondary-dark, white) !important; }

.mdc-theme--text-secondary-on-secondary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.7) !important; color: var(--mdc-theme-text-secondary-on-secondary-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-secondary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-hint-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-secondary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-disabled-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-secondary-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-icon-on-secondary-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-primary-on-background { /* @alternate */ color: rgba(0, 0, 0, 0.87) !important; color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-background { /* @alternate */ color: rgba(0, 0, 0, 0.54) !important; color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-background { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-background { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-background { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-light { /* @alternate */ color: rgba(0, 0, 0, 0.87) !important; color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important; }

.mdc-theme--text-secondary-on-light { /* @alternate */ color: rgba(0, 0, 0, 0.54) !important; color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important; }

.mdc-theme--text-hint-on-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-disabled-on-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-icon-on-light { /* @alternate */ color: rgba(0, 0, 0, 0.38) !important; color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important; }

.mdc-theme--text-primary-on-dark { /* @alternate */ color: white !important; color: var(--mdc-theme-text-primary-on-dark, white) !important; }

.mdc-theme--text-secondary-on-dark { /* @alternate */ color: rgba(255, 255, 255, 0.7) !important; color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important; }

.mdc-theme--text-hint-on-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-disabled-on-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--text-icon-on-dark { /* @alternate */ color: rgba(255, 255, 255, 0.5) !important; color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important; }

.mdc-theme--primary-bg { /* @alternate */ background-color: #e5c601 !important; background-color: var(--mdc-theme-primary, #e5c601) !important; }

.mdc-theme--primary-light-bg { /* @alternate */ background-color: #fee22f !important; background-color: var(--mdc-theme-primary-light, #fee22f) !important; }

.mdc-theme--primary-dark-bg { /* @alternate */ background-color: #9e8901 !important; background-color: var(--mdc-theme-primary-dark, #9e8901) !important; }

.mdc-theme--secondary-bg, .cta-actions button { /* @alternate */ background-color: #00bcd4 !important; background-color: var(--mdc-theme-secondary, #00bcd4) !important; }

.mdc-theme--secondary-light-bg { /* @alternate */ background-color: #1ce5ff !important; background-color: var(--mdc-theme-secondary-light, #1ce5ff) !important; }

.mdc-theme--secondary-dark-bg { /* @alternate */ background-color: #007d8d !important; background-color: var(--mdc-theme-secondary-dark, #007d8d) !important; }

/** The css property used for elevation. In most cases this should not be changed. It is exposed as a variable for abstraction / easy use when needing to reference the property directly, for example in a `will-change` rule. */
/** The default duration value for elevation transitions. */
/** The default easing value for elevation transitions. */
/** Applies the correct css rules to an element to give it the elevation specified by $z-value. The $z-value must be between 0 and 24. */
/** Returns a string that can be used as the value for a `transition` property for elevation. Calling this function directly is useful in situations where a component needs to transition more than one property.  ```scss .foo { transition: mdc-elevation-transition-rule(), opacity 100ms ease; will-change: $mdc-elevation-property, opacity; } ``` */
/** Applies the correct css rules needed to have an element transition between elevations. This mixin should be applied to elements whose elevation values will change depending on their context (e.g. when active or disabled). */
/** Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.  Usage Example: ```scss .mdc-foo { position: absolute; left: 0;  @include mdc-rtl { left: auto; right: 0; }  &__bar { margin-left: 4px; @include mdc-rtl(".mdc-foo") { margin-left: auto; margin-right: 4px; } } }  .mdc-foo--mod { padding-left: 4px;  @include mdc-rtl { padding-left: auto; padding-right: 4px; } } ```  Note that this works by checking for [dir="rtl"] on an ancestor element. While this will work in most cases, it will in some cases lead to false negatives, e.g.  ```html <html dir="rtl"> <!-- ... --> <div dir="ltr"> <div class="mdc-foo">Styled incorrectly as RTL!</div> </div> </html> ```  In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this. */
/** Takes a base box-model property - e.g. margin / border / padding - along with a default direction and value, and emits rules which apply the value to the "<base-property>-<default-direction>" property by default, but flips the direction when within an RTL context.  For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, left, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: 8px;  @include mdc-rtl { margin-right: 8px; margin-left: 0; } } ``` whereas:  ```scss .mdc-foo { @include mdc-rtl-reflexive-box(margin, right, 8px); } ``` is equivalent to:  ```scss .mdc-foo { margin-right: 8px;  @include mdc-rtl { margin-right: 0; margin-left: 8px; } } ```  You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`, e.g. `@include mdc-rtl-reflexive-box(margin, left, 8px, ".mdc-component")`.  Note that this function will always zero out the original value in an RTL context. If you're trying to flip the values, use mdc-rtl-reflexive-property(). */
/** Takes a base property and emits rules that assign <base-property>-left to <left-value> and <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-property(margin, auto, 12px); } ``` is equivalent to:  ```scss .mdc-foo { margin-left: auto; margin-right: 12px;  @include mdc-rtl { margin-left: 12px; margin-right: auto; } } ```  A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`. */
/** Takes an argument specifying a horizontal position property (either "left" or "right") as well as a value, and applies that value to the specified position in a LTR context, and flips it in a RTL context. For example:  ```scss .mdc-foo { @include mdc-rtl-reflexive-position(left, 0); position: absolute; } ``` is equivalent to:  ```scss .mdc-foo { position: absolute; left: 0; right: initial;  @include mdc-rtl { right: 0; left: initial; } } ``` An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/** Applies styles to the different types of icons that can exist in toolbars. Both .mdc-toolbar__icon and .mdc-toolbar__menu-icon share all styles except for horizontal padding. */
.mdc-toolbar { /* @alternate */ background-color: #e5c601; background-color: var(--mdc-theme-primary, #e5c601); /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); display: flex; position: relative; flex-direction: column; justify-content: space-between; box-sizing: border-box; width: 100%; }
.mdc-toolbar__row { display: flex; position: relative; align-items: center; box-sizing: border-box; width: 100%; height: auto; min-height: 64px; }
@media (max-width: 959px) and (orientation: landscape) { .mdc-toolbar__row { min-height: 48px; } }
@media (max-width: 599px) { .mdc-toolbar__row { min-height: 56px; } }
.mdc-toolbar__section { display: inline-flex; flex: 1; align-items: flex-start; justify-content: center; min-width: 0; height: 100%; z-index: 1; }
.mdc-toolbar__section--align-start { justify-content: flex-start; order: -1; }
.mdc-toolbar__section--align-end { justify-content: flex-end; order: 1; }
.mdc-toolbar__title { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1.25rem; font-weight: 500; letter-spacing: 0.02em; line-height: 2rem; text-decoration: inherit; text-transform: inherit; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; margin-left: 24px; margin-right: 0; align-self: center; padding: 16px 0; line-height: 1.5rem; z-index: 1; }
[dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"] { margin-left: 0; margin-right: 24px; }
.mdc-toolbar__icon { display: flex; align-items: center; justify-content: center; padding: 16px; border: none; background-color: inherit; color: inherit; text-decoration: none; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); padding-right: 12px; padding-left: 12px; cursor: pointer; }
.mdc-toolbar__icon:last-of-type { padding-left: 12px; padding-right: 24px; }
[dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"] { padding-left: 24px; padding-right: 12px; }
.mdc-toolbar__menu-icon { display: flex; align-items: center; justify-content: center; padding: 16px; border: none; background-color: inherit; color: inherit; text-decoration: none; /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-primary, rgba(0, 0, 0, 0.87)); padding-right: 24px; padding-left: 24px; cursor: pointer; }

.mdc-toolbar__menu-icon + .mdc-toolbar__title { margin-left: 8px; margin-right: 0; }
[dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"] { margin-left: 0; margin-right: 8px; }

@media (max-width: 599px) { .mdc-toolbar__title { margin-left: 16px; margin-right: 0; }
  [dir="rtl"] .mdc-toolbar__title, .mdc-toolbar__title[dir="rtl"] { margin-left: 0; margin-right: 16px; }
  .mdc-toolbar__icon { padding-right: 8px; padding-left: 8px; }
  .mdc-toolbar__icon:last-of-type { padding-left: 8px; padding-right: 16px; }
  [dir="rtl"] .mdc-toolbar__icon:last-of-type, .mdc-toolbar__icon:last-of-type[dir="rtl"] { padding-left: 16px; padding-right: 8px; }
  .mdc-toolbar__menu-icon { padding-right: 16px; padding-left: 16px; }
  .mdc-toolbar__menu-icon + .mdc-toolbar__title { margin-left: 16px; margin-right: 0; }
  [dir="rtl"] .mdc-toolbar__menu-icon + .mdc-toolbar__title, .mdc-toolbar__menu-icon + .mdc-toolbar__title[dir="rtl"] { margin-left: 0; margin-right: 16px; } }
.mdc-toolbar--fixed { box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); position: fixed; top: 0; left: 0; z-index: 4; }

.mdc-toolbar--flexible { --mdc-toolbar-ratio-to-extend-flexible: 4; }
.mdc-toolbar--flexible .mdc-toolbar__row:first-child { height: 256px; height: calc(64px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); }
@media (max-width: 599px) { .mdc-toolbar--flexible .mdc-toolbar__row:first-child { height: 224px; height: calc(56px * var(--mdc-toolbar-ratio-to-extend-flexible, 4)); } }
.mdc-toolbar--flexible .mdc-toolbar__row:first-child::after { position: absolute; content: ""; }
.mdc-toolbar--flexible-default-behavior .mdc-toolbar__title { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 2.125rem; font-weight: 400; letter-spacing: normal; line-height: 2.5rem; text-decoration: inherit; text-transform: inherit; align-self: flex-end; line-height: 1.5rem; }
.mdc-toolbar--flexible-default-behavior .mdc-toolbar__row:first-child::after { top: 0; left: 0; width: 100%; height: 100%; transition: opacity .2s ease; opacity: 1; }
.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__row:first-child::after { opacity: 0; }
.mdc-toolbar--flexible-default-behavior.mdc-toolbar--flexible-space-minimized .mdc-toolbar__title { font-weight: 500; }

.mdc-toolbar--waterfall.mdc-toolbar--fixed { box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1); will-change: box-shadow; }
.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--flexible-space-minimized { box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }
.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--flexible-space-minimized { box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }
.mdc-toolbar--waterfall.mdc-toolbar--fixed.mdc-toolbar--fixed-lastrow-only.mdc-toolbar--fixed-at-last-row { box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }

.mdc-toolbar-fixed-adjust { margin-top: 64px; }
@media (max-width: 959px) and (orientation: landscape) { .mdc-toolbar-fixed-adjust { margin-top: 48px; } }
@media (max-width: 599px) { .mdc-toolbar-fixed-adjust { margin-top: 56px; } }

.mdc-toolbar__section--shrink-to-fit { flex: none; }

/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
.mdc-typography, html { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; }

.mdc-typography--display4 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 7rem; font-weight: 300; letter-spacing: -0.04em; line-height: 7rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display4 { margin: -1rem 0 3.5rem -0.085em; }

.mdc-typography--display3 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 3.5rem; font-weight: 400; letter-spacing: -0.02em; line-height: 3.5rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display3 { margin: -8px 0 64px -0.07em; }

.mdc-typography--display2 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 2.813rem; font-weight: 400; letter-spacing: normal; line-height: 3rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display2 { margin: -0.5rem 0 4rem -0.07em; }

.mdc-typography--display1 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 2.125rem; font-weight: 400; letter-spacing: normal; line-height: 2.5rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--display1 { margin: -0.5rem 0 4rem -0.07em; }

.mdc-typography--headline, #intro-section div h3 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1.5rem; font-weight: 400; letter-spacing: normal; line-height: 2rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--headline, #intro-section div h3.mdc-typography--adjust-margin { margin: -0.5rem 0 1rem -0.06em; }

.mdc-typography--title { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1.25rem; font-weight: 500; letter-spacing: 0.02em; line-height: 2rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--title { margin: -0.5rem 0 1rem -0.05em; }

.mdc-typography--subheading2 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 1rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.75rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--subheading2 { margin: -0.5rem 0 1rem -0.06em; }

.mdc-typography--subheading1 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.938rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--subheading1 { margin: -0.313rem 0 0.813rem -0.06em; }

.mdc-typography--body2 { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 1.5rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--body2 { margin: -0.25rem 0 0.75rem 0; }

.mdc-typography--body1, body { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 400; letter-spacing: 0.04em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--body1, body.mdc-typography--adjust-margin { margin: -0.25rem 0 0.75rem 0; }

.mdc-typography--caption { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.75rem; font-weight: 400; letter-spacing: 0.08em; line-height: 1.25rem; text-decoration: inherit; text-transform: inherit; }

.mdc-typography--adjust-margin.mdc-typography--caption { margin: -0.5rem 0 1rem -0.04em; }

.mdc-typography--button { font-family: Roboto, sans-serif; -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; font-size: 0.875rem; font-weight: 500; letter-spacing: 0.04em; line-height: 2.25rem; text-decoration: none; text-transform: uppercase; }

.mdc-typography--adjust-margin.mdc-typography--button { margin: inherit; }

/*!
 *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome
 *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)
 */
/* FONT PATH -------------------------- */
@font-face { font-family: 'FontAwesome'; src: url("../fonts/fontawesome-webfont.eot?v=4.7.0"); src: url("../fonts/fontawesome-webfont.eot?#iefix&v=4.7.0") format("embedded-opentype"), url("../fonts/fontawesome-webfont.woff2?v=4.7.0") format("woff2"), url("../fonts/fontawesome-webfont.woff?v=4.7.0") format("woff"), url("../fonts/fontawesome-webfont.ttf?v=4.7.0") format("truetype"), url("../fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular") format("svg"); font-weight: normal; font-style: normal; }
.fa { display: inline-block; font: normal normal normal 14px/1 FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

/* makes the font 33% larger relative to the icon container */
.fa-lg { font-size: 1.3333333333em; line-height: 0.75em; vertical-align: -15%; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-fw { width: 1.2857142857em; text-align: center; }

.fa-ul { padding-left: 0; margin-left: 2.1428571429em; list-style-type: none; }
.fa-ul > li { position: relative; }

.fa-li { position: absolute; left: -2.1428571429em; width: 2.1428571429em; top: 0.1428571429em; text-align: center; }
.fa-li.fa-lg { left: -1.8571428571em; }

.fa-border { padding: .2em .25em .15em; border: solid 0.08em #eee; border-radius: .1em; }

.fa-pull-left { float: left; }

.fa-pull-right { float: right; }

.fa.fa-pull-left { margin-right: .3em; }
.fa.fa-pull-right { margin-left: .3em; }

/* Deprecated as of 4.4.0 */
.pull-right { float: right; }

.pull-left { float: left; }

.fa.pull-left { margin-right: .3em; }
.fa.pull-right { margin-left: .3em; }

.fa-spin { -webkit-animation: fa-spin 2s infinite linear; animation: fa-spin 2s infinite linear; }

.fa-pulse { -webkit-animation: fa-spin 1s infinite steps(8); animation: fa-spin 1s infinite steps(8); }

@-webkit-keyframes fa-spin { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }
  100% { -webkit-transform: rotate(359deg); transform: rotate(359deg); } }
@keyframes fa-spin { 0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }
  100% { -webkit-transform: rotate(359deg); transform: rotate(359deg); } }
.fa-rotate-90 { -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)"; -webkit-transform: rotate(90deg); -ms-transform: rotate(90deg); transform: rotate(90deg); }

.fa-rotate-180 { -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)"; -webkit-transform: rotate(180deg); -ms-transform: rotate(180deg); transform: rotate(180deg); }

.fa-rotate-270 { -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)"; -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); }

.fa-flip-horizontal { -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)"; -webkit-transform: scale(-1, 1); -ms-transform: scale(-1, 1); transform: scale(-1, 1); }

.fa-flip-vertical { -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)"; -webkit-transform: scale(1, -1); -ms-transform: scale(1, -1); transform: scale(1, -1); }

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-flip-horizontal, :root .fa-flip-vertical { filter: none; }

.fa-stack { position: relative; display: inline-block; width: 2em; height: 2em; line-height: 2em; vertical-align: middle; }

.fa-stack-1x, .fa-stack-2x { position: absolute; left: 0; width: 100%; text-align: center; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: #fff; }

/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen readers do not read off random characters that represent icons */
.fa-glass:before { content: ""; }

.fa-music:before { content: ""; }

.fa-search:before { content: ""; }

.fa-envelope-o:before { content: ""; }

.fa-heart:before { content: ""; }

.fa-star:before { content: ""; }

.fa-star-o:before { content: ""; }

.fa-user:before { content: ""; }

.fa-film:before { content: ""; }

.fa-th-large:before { content: ""; }

.fa-th:before { content: ""; }

.fa-th-list:before { content: ""; }

.fa-check:before { content: ""; }

.fa-remove:before, .fa-close:before, .fa-times:before { content: ""; }

.fa-search-plus:before { content: ""; }

.fa-search-minus:before { content: ""; }

.fa-power-off:before { content: ""; }

.fa-signal:before { content: ""; }

.fa-gear:before, .fa-cog:before { content: ""; }

.fa-trash-o:before { content: ""; }

.fa-home:before { content: ""; }

.fa-file-o:before { content: ""; }

.fa-clock-o:before { content: ""; }

.fa-road:before { content: ""; }

.fa-download:before { content: ""; }

.fa-arrow-circle-o-down:before { content: ""; }

.fa-arrow-circle-o-up:before { content: ""; }

.fa-inbox:before { content: ""; }

.fa-play-circle-o:before { content: ""; }

.fa-rotate-right:before, .fa-repeat:before { content: ""; }

.fa-refresh:before { content: ""; }

.fa-list-alt:before { content: ""; }

.fa-lock:before { content: ""; }

.fa-flag:before { content: ""; }

.fa-headphones:before { content: ""; }

.fa-volume-off:before { content: ""; }

.fa-volume-down:before { content: ""; }

.fa-volume-up:before { content: ""; }

.fa-qrcode:before { content: ""; }

.fa-barcode:before { content: ""; }

.fa-tag:before { content: ""; }

.fa-tags:before { content: ""; }

.fa-book:before { content: ""; }

.fa-bookmark:before { content: ""; }

.fa-print:before { content: ""; }

.fa-camera:before { content: ""; }

.fa-font:before { content: ""; }

.fa-bold:before { content: ""; }

.fa-italic:before { content: ""; }

.fa-text-height:before { content: ""; }

.fa-text-width:before { content: ""; }

.fa-align-left:before { content: ""; }

.fa-align-center:before { content: ""; }

.fa-align-right:before { content: ""; }

.fa-align-justify:before { content: ""; }

.fa-list:before { content: ""; }

.fa-dedent:before, .fa-outdent:before { content: ""; }

.fa-indent:before { content: ""; }

.fa-video-camera:before { content: ""; }

.fa-photo:before, .fa-image:before, .fa-picture-o:before { content: ""; }

.fa-pencil:before { content: ""; }

.fa-map-marker:before { content: ""; }

.fa-adjust:before { content: ""; }

.fa-tint:before { content: ""; }

.fa-edit:before, .fa-pencil-square-o:before { content: ""; }

.fa-share-square-o:before { content: ""; }

.fa-check-square-o:before { content: ""; }

.fa-arrows:before { content: ""; }

.fa-step-backward:before { content: ""; }

.fa-fast-backward:before { content: ""; }

.fa-backward:before { content: ""; }

.fa-play:before { content: ""; }

.fa-pause:before { content: ""; }

.fa-stop:before { content: ""; }

.fa-forward:before { content: ""; }

.fa-fast-forward:before { content: ""; }

.fa-step-forward:before { content: ""; }

.fa-eject:before { content: ""; }

.fa-chevron-left:before { content: ""; }

.fa-chevron-right:before { content: ""; }

.fa-plus-circle:before { content: ""; }

.fa-minus-circle:before { content: ""; }

.fa-times-circle:before { content: ""; }

.fa-check-circle:before { content: ""; }

.fa-question-circle:before { content: ""; }

.fa-info-circle:before { content: ""; }

.fa-crosshairs:before { content: ""; }

.fa-times-circle-o:before { content: ""; }

.fa-check-circle-o:before { content: ""; }

.fa-ban:before { content: ""; }

.fa-arrow-left:before { content: ""; }

.fa-arrow-right:before { content: ""; }

.fa-arrow-up:before { content: ""; }

.fa-arrow-down:before { content: ""; }

.fa-mail-forward:before, .fa-share:before { content: ""; }

.fa-expand:before { content: ""; }

.fa-compress:before { content: ""; }

.fa-plus:before { content: ""; }

.fa-minus:before { content: ""; }

.fa-asterisk:before { content: ""; }

.fa-exclamation-circle:before { content: ""; }

.fa-gift:before { content: ""; }

.fa-leaf:before { content: ""; }

.fa-fire:before { content: ""; }

.fa-eye:before { content: ""; }

.fa-eye-slash:before { content: ""; }

.fa-warning:before, .fa-exclamation-triangle:before { content: ""; }

.fa-plane:before { content: ""; }

.fa-calendar:before { content: ""; }

.fa-random:before { content: ""; }

.fa-comment:before { content: ""; }

.fa-magnet:before { content: ""; }

.fa-chevron-up:before { content: ""; }

.fa-chevron-down:before { content: ""; }

.fa-retweet:before { content: ""; }

.fa-shopping-cart:before { content: ""; }

.fa-folder:before { content: ""; }

.fa-folder-open:before { content: ""; }

.fa-arrows-v:before { content: ""; }

.fa-arrows-h:before { content: ""; }

.fa-bar-chart-o:before, .fa-bar-chart:before { content: ""; }

.fa-twitter-square:before { content: ""; }

.fa-facebook-square:before { content: ""; }

.fa-camera-retro:before { content: ""; }

.fa-key:before { content: ""; }

.fa-gears:before, .fa-cogs:before { content: ""; }

.fa-comments:before { content: ""; }

.fa-thumbs-o-up:before { content: ""; }

.fa-thumbs-o-down:before { content: ""; }

.fa-star-half:before { content: ""; }

.fa-heart-o:before { content: ""; }

.fa-sign-out:before { content: ""; }

.fa-linkedin-square:before { content: ""; }

.fa-thumb-tack:before { content: ""; }

.fa-external-link:before { content: ""; }

.fa-sign-in:before { content: ""; }

.fa-trophy:before { content: ""; }

.fa-github-square:before { content: ""; }

.fa-upload:before { content: ""; }

.fa-lemon-o:before { content: ""; }

.fa-phone:before { content: ""; }

.fa-square-o:before { content: ""; }

.fa-bookmark-o:before { content: ""; }

.fa-phone-square:before { content: ""; }

.fa-twitter:before { content: ""; }

.fa-facebook-f:before, .fa-facebook:before { content: ""; }

.fa-github:before { content: ""; }

.fa-unlock:before { content: ""; }

.fa-credit-card:before { content: ""; }

.fa-feed:before, .fa-rss:before { content: ""; }

.fa-hdd-o:before { content: ""; }

.fa-bullhorn:before { content: ""; }

.fa-bell:before { content: ""; }

.fa-certificate:before { content: ""; }

.fa-hand-o-right:before { content: ""; }

.fa-hand-o-left:before { content: ""; }

.fa-hand-o-up:before { content: ""; }

.fa-hand-o-down:before { content: ""; }

.fa-arrow-circle-left:before { content: ""; }

.fa-arrow-circle-right:before { content: ""; }

.fa-arrow-circle-up:before { content: ""; }

.fa-arrow-circle-down:before { content: ""; }

.fa-globe:before { content: ""; }

.fa-wrench:before { content: ""; }

.fa-tasks:before { content: ""; }

.fa-filter:before { content: ""; }

.fa-briefcase:before { content: ""; }

.fa-arrows-alt:before { content: ""; }

.fa-group:before, .fa-users:before { content: ""; }

.fa-chain:before, .fa-link:before { content: ""; }

.fa-cloud:before { content: ""; }

.fa-flask:before { content: ""; }

.fa-cut:before, .fa-scissors:before { content: ""; }

.fa-copy:before, .fa-files-o:before { content: ""; }

.fa-paperclip:before { content: ""; }

.fa-save:before, .fa-floppy-o:before { content: ""; }

.fa-square:before { content: ""; }

.fa-navicon:before, .fa-reorder:before, .fa-bars:before { content: ""; }

.fa-list-ul:before { content: ""; }

.fa-list-ol:before { content: ""; }

.fa-strikethrough:before { content: ""; }

.fa-underline:before { content: ""; }

.fa-table:before { content: ""; }

.fa-magic:before { content: ""; }

.fa-truck:before { content: ""; }

.fa-pinterest:before { content: ""; }

.fa-pinterest-square:before { content: ""; }

.fa-google-plus-square:before { content: ""; }

.fa-google-plus:before { content: ""; }

.fa-money:before { content: ""; }

.fa-caret-down:before { content: ""; }

.fa-caret-up:before { content: ""; }

.fa-caret-left:before { content: ""; }

.fa-caret-right:before { content: ""; }

.fa-columns:before { content: ""; }

.fa-unsorted:before, .fa-sort:before { content: ""; }

.fa-sort-down:before, .fa-sort-desc:before { content: ""; }

.fa-sort-up:before, .fa-sort-asc:before { content: ""; }

.fa-envelope:before { content: ""; }

.fa-linkedin:before { content: ""; }

.fa-rotate-left:before, .fa-undo:before { content: ""; }

.fa-legal:before, .fa-gavel:before { content: ""; }

.fa-dashboard:before, .fa-tachometer:before { content: ""; }

.fa-comment-o:before { content: ""; }

.fa-comments-o:before { content: ""; }

.fa-flash:before, .fa-bolt:before { content: ""; }

.fa-sitemap:before { content: ""; }

.fa-umbrella:before { content: ""; }

.fa-paste:before, .fa-clipboard:before { content: ""; }

.fa-lightbulb-o:before { content: ""; }

.fa-exchange:before { content: ""; }

.fa-cloud-download:before { content: ""; }

.fa-cloud-upload:before { content: ""; }

.fa-user-md:before { content: ""; }

.fa-stethoscope:before { content: ""; }

.fa-suitcase:before { content: ""; }

.fa-bell-o:before { content: ""; }

.fa-coffee:before { content: ""; }

.fa-cutlery:before { content: ""; }

.fa-file-text-o:before { content: ""; }

.fa-building-o:before { content: ""; }

.fa-hospital-o:before { content: ""; }

.fa-ambulance:before { content: ""; }

.fa-medkit:before { content: ""; }

.fa-fighter-jet:before { content: ""; }

.fa-beer:before { content: ""; }

.fa-h-square:before { content: ""; }

.fa-plus-square:before { content: ""; }

.fa-angle-double-left:before { content: ""; }

.fa-angle-double-right:before { content: ""; }

.fa-angle-double-up:before { content: ""; }

.fa-angle-double-down:before { content: ""; }

.fa-angle-left:before { content: ""; }

.fa-angle-right:before { content: ""; }

.fa-angle-up:before { content: ""; }

.fa-angle-down:before { content: ""; }

.fa-desktop:before { content: ""; }

.fa-laptop:before { content: ""; }

.fa-tablet:before { content: ""; }

.fa-mobile-phone:before, .fa-mobile:before { content: ""; }

.fa-circle-o:before { content: ""; }

.fa-quote-left:before { content: ""; }

.fa-quote-right:before { content: ""; }

.fa-spinner:before { content: ""; }

.fa-circle:before { content: ""; }

.fa-mail-reply:before, .fa-reply:before { content: ""; }

.fa-github-alt:before { content: ""; }

.fa-folder-o:before { content: ""; }

.fa-folder-open-o:before { content: ""; }

.fa-smile-o:before { content: ""; }

.fa-frown-o:before { content: ""; }

.fa-meh-o:before { content: ""; }

.fa-gamepad:before { content: ""; }

.fa-keyboard-o:before { content: ""; }

.fa-flag-o:before { content: ""; }

.fa-flag-checkered:before { content: ""; }

.fa-terminal:before { content: ""; }

.fa-code:before { content: ""; }

.fa-mail-reply-all:before, .fa-reply-all:before { content: ""; }

.fa-star-half-empty:before, .fa-star-half-full:before, .fa-star-half-o:before { content: ""; }

.fa-location-arrow:before { content: ""; }

.fa-crop:before { content: ""; }

.fa-code-fork:before { content: ""; }

.fa-unlink:before, .fa-chain-broken:before { content: ""; }

.fa-question:before { content: ""; }

.fa-info:before { content: ""; }

.fa-exclamation:before { content: ""; }

.fa-superscript:before { content: ""; }

.fa-subscript:before { content: ""; }

.fa-eraser:before { content: ""; }

.fa-puzzle-piece:before { content: ""; }

.fa-microphone:before { content: ""; }

.fa-microphone-slash:before { content: ""; }

.fa-shield:before { content: ""; }

.fa-calendar-o:before { content: ""; }

.fa-fire-extinguisher:before { content: ""; }

.fa-rocket:before { content: ""; }

.fa-maxcdn:before { content: ""; }

.fa-chevron-circle-left:before { content: ""; }

.fa-chevron-circle-right:before { content: ""; }

.fa-chevron-circle-up:before { content: ""; }

.fa-chevron-circle-down:before { content: ""; }

.fa-html5:before { content: ""; }

.fa-css3:before { content: ""; }

.fa-anchor:before { content: ""; }

.fa-unlock-alt:before { content: ""; }

.fa-bullseye:before { content: ""; }

.fa-ellipsis-h:before { content: ""; }

.fa-ellipsis-v:before { content: ""; }

.fa-rss-square:before { content: ""; }

.fa-play-circle:before { content: ""; }

.fa-ticket:before { content: ""; }

.fa-minus-square:before { content: ""; }

.fa-minus-square-o:before { content: ""; }

.fa-level-up:before { content: ""; }

.fa-level-down:before { content: ""; }

.fa-check-square:before { content: ""; }

.fa-pencil-square:before { content: ""; }

.fa-external-link-square:before { content: ""; }

.fa-share-square:before { content: ""; }

.fa-compass:before { content: ""; }

.fa-toggle-down:before, .fa-caret-square-o-down:before { content: ""; }

.fa-toggle-up:before, .fa-caret-square-o-up:before { content: ""; }

.fa-toggle-right:before, .fa-caret-square-o-right:before { content: ""; }

.fa-euro:before, .fa-eur:before { content: ""; }

.fa-gbp:before { content: ""; }

.fa-dollar:before, .fa-usd:before { content: ""; }

.fa-rupee:before, .fa-inr:before { content: ""; }

.fa-cny:before, .fa-rmb:before, .fa-yen:before, .fa-jpy:before { content: ""; }

.fa-ruble:before, .fa-rouble:before, .fa-rub:before { content: ""; }

.fa-won:before, .fa-krw:before { content: ""; }

.fa-bitcoin:before, .fa-btc:before { content: ""; }

.fa-file:before { content: ""; }

.fa-file-text:before { content: ""; }

.fa-sort-alpha-asc:before { content: ""; }

.fa-sort-alpha-desc:before { content: ""; }

.fa-sort-amount-asc:before { content: ""; }

.fa-sort-amount-desc:before { content: ""; }

.fa-sort-numeric-asc:before { content: ""; }

.fa-sort-numeric-desc:before { content: ""; }

.fa-thumbs-up:before { content: ""; }

.fa-thumbs-down:before { content: ""; }

.fa-youtube-square:before { content: ""; }

.fa-youtube:before { content: ""; }

.fa-xing:before { content: ""; }

.fa-xing-square:before { content: ""; }

.fa-youtube-play:before { content: ""; }

.fa-dropbox:before { content: ""; }

.fa-stack-overflow:before { content: ""; }

.fa-instagram:before { content: ""; }

.fa-flickr:before { content: ""; }

.fa-adn:before { content: ""; }

.fa-bitbucket:before { content: ""; }

.fa-bitbucket-square:before { content: ""; }

.fa-tumblr:before { content: ""; }

.fa-tumblr-square:before { content: ""; }

.fa-long-arrow-down:before { content: ""; }

.fa-long-arrow-up:before { content: ""; }

.fa-long-arrow-left:before { content: ""; }

.fa-long-arrow-right:before { content: ""; }

.fa-apple:before { content: ""; }

.fa-windows:before { content: ""; }

.fa-android:before { content: ""; }

.fa-linux:before { content: ""; }

.fa-dribbble:before { content: ""; }

.fa-skype:before { content: ""; }

.fa-foursquare:before { content: ""; }

.fa-trello:before { content: ""; }

.fa-female:before { content: ""; }

.fa-male:before { content: ""; }

.fa-gittip:before, .fa-gratipay:before { content: ""; }

.fa-sun-o:before { content: ""; }

.fa-moon-o:before { content: ""; }

.fa-archive:before { content: ""; }

.fa-bug:before { content: ""; }

.fa-vk:before { content: ""; }

.fa-weibo:before { content: ""; }

.fa-renren:before { content: ""; }

.fa-pagelines:before { content: ""; }

.fa-stack-exchange:before { content: ""; }

.fa-arrow-circle-o-right:before { content: ""; }

.fa-arrow-circle-o-left:before { content: ""; }

.fa-toggle-left:before, .fa-caret-square-o-left:before { content: ""; }

.fa-dot-circle-o:before { content: ""; }

.fa-wheelchair:before { content: ""; }

.fa-vimeo-square:before { content: ""; }

.fa-turkish-lira:before, .fa-try:before { content: ""; }

.fa-plus-square-o:before { content: ""; }

.fa-space-shuttle:before { content: ""; }

.fa-slack:before { content: ""; }

.fa-envelope-square:before { content: ""; }

.fa-wordpress:before { content: ""; }

.fa-openid:before { content: ""; }

.fa-institution:before, .fa-bank:before, .fa-university:before { content: ""; }

.fa-mortar-board:before, .fa-graduation-cap:before { content: ""; }

.fa-yahoo:before { content: ""; }

.fa-google:before { content: ""; }

.fa-reddit:before { content: ""; }

.fa-reddit-square:before { content: ""; }

.fa-stumbleupon-circle:before { content: ""; }

.fa-stumbleupon:before { content: ""; }

.fa-delicious:before { content: ""; }

.fa-digg:before { content: ""; }

.fa-pied-piper-pp:before { content: ""; }

.fa-pied-piper-alt:before { content: ""; }

.fa-drupal:before { content: ""; }

.fa-joomla:before { content: ""; }

.fa-language:before { content: ""; }

.fa-fax:before { content: ""; }

.fa-building:before { content: ""; }

.fa-child:before { content: ""; }

.fa-paw:before { content: ""; }

.fa-spoon:before { content: ""; }

.fa-cube:before { content: ""; }

.fa-cubes:before { content: ""; }

.fa-behance:before { content: ""; }

.fa-behance-square:before { content: ""; }

.fa-steam:before { content: ""; }

.fa-steam-square:before { content: ""; }

.fa-recycle:before { content: ""; }

.fa-automobile:before, .fa-car:before { content: ""; }

.fa-cab:before, .fa-taxi:before { content: ""; }

.fa-tree:before { content: ""; }

.fa-spotify:before { content: ""; }

.fa-deviantart:before { content: ""; }

.fa-soundcloud:before { content: ""; }

.fa-database:before { content: ""; }

.fa-file-pdf-o:before { content: ""; }

.fa-file-word-o:before { content: ""; }

.fa-file-excel-o:before { content: ""; }

.fa-file-powerpoint-o:before { content: ""; }

.fa-file-photo-o:before, .fa-file-picture-o:before, .fa-file-image-o:before { content: ""; }

.fa-file-zip-o:before, .fa-file-archive-o:before { content: ""; }

.fa-file-sound-o:before, .fa-file-audio-o:before { content: ""; }

.fa-file-movie-o:before, .fa-file-video-o:before { content: ""; }

.fa-file-code-o:before { content: ""; }

.fa-vine:before { content: ""; }

.fa-codepen:before { content: ""; }

.fa-jsfiddle:before { content: ""; }

.fa-life-bouy:before, .fa-life-buoy:before, .fa-life-saver:before, .fa-support:before, .fa-life-ring:before { content: ""; }

.fa-circle-o-notch:before { content: ""; }

.fa-ra:before, .fa-resistance:before, .fa-rebel:before { content: ""; }

.fa-ge:before, .fa-empire:before { content: ""; }

.fa-git-square:before { content: ""; }

.fa-git:before { content: ""; }

.fa-y-combinator-square:before, .fa-yc-square:before, .fa-hacker-news:before { content: ""; }

.fa-tencent-weibo:before { content: ""; }

.fa-qq:before { content: ""; }

.fa-wechat:before, .fa-weixin:before { content: ""; }

.fa-send:before, .fa-paper-plane:before { content: ""; }

.fa-send-o:before, .fa-paper-plane-o:before { content: ""; }

.fa-history:before { content: ""; }

.fa-circle-thin:before { content: ""; }

.fa-header:before { content: ""; }

.fa-paragraph:before { content: ""; }

.fa-sliders:before { content: ""; }

.fa-share-alt:before { content: ""; }

.fa-share-alt-square:before { content: ""; }

.fa-bomb:before { content: ""; }

.fa-soccer-ball-o:before, .fa-futbol-o:before { content: ""; }

.fa-tty:before { content: ""; }

.fa-binoculars:before { content: ""; }

.fa-plug:before { content: ""; }

.fa-slideshare:before { content: ""; }

.fa-twitch:before { content: ""; }

.fa-yelp:before { content: ""; }

.fa-newspaper-o:before { content: ""; }

.fa-wifi:before { content: ""; }

.fa-calculator:before { content: ""; }

.fa-paypal:before { content: ""; }

.fa-google-wallet:before { content: ""; }

.fa-cc-visa:before { content: ""; }

.fa-cc-mastercard:before { content: ""; }

.fa-cc-discover:before { content: ""; }

.fa-cc-amex:before { content: ""; }

.fa-cc-paypal:before { content: ""; }

.fa-cc-stripe:before { content: ""; }

.fa-bell-slash:before { content: ""; }

.fa-bell-slash-o:before { content: ""; }

.fa-trash:before { content: ""; }

.fa-copyright:before { content: ""; }

.fa-at:before { content: ""; }

.fa-eyedropper:before { content: ""; }

.fa-paint-brush:before { content: ""; }

.fa-birthday-cake:before { content: ""; }

.fa-area-chart:before { content: ""; }

.fa-pie-chart:before { content: ""; }

.fa-line-chart:before { content: ""; }

.fa-lastfm:before { content: ""; }

.fa-lastfm-square:before { content: ""; }

.fa-toggle-off:before { content: ""; }

.fa-toggle-on:before { content: ""; }

.fa-bicycle:before { content: ""; }

.fa-bus:before { content: ""; }

.fa-ioxhost:before { content: ""; }

.fa-angellist:before { content: ""; }

.fa-cc:before { content: ""; }

.fa-shekel:before, .fa-sheqel:before, .fa-ils:before { content: ""; }

.fa-meanpath:before { content: ""; }

.fa-buysellads:before { content: ""; }

.fa-connectdevelop:before { content: ""; }

.fa-dashcube:before { content: ""; }

.fa-forumbee:before { content: ""; }

.fa-leanpub:before { content: ""; }

.fa-sellsy:before { content: ""; }

.fa-shirtsinbulk:before { content: ""; }

.fa-simplybuilt:before { content: ""; }

.fa-skyatlas:before { content: ""; }

.fa-cart-plus:before { content: ""; }

.fa-cart-arrow-down:before { content: ""; }

.fa-diamond:before { content: ""; }

.fa-ship:before { content: ""; }

.fa-user-secret:before { content: ""; }

.fa-motorcycle:before { content: ""; }

.fa-street-view:before { content: ""; }

.fa-heartbeat:before { content: ""; }

.fa-venus:before { content: ""; }

.fa-mars:before { content: ""; }

.fa-mercury:before { content: ""; }

.fa-intersex:before, .fa-transgender:before { content: ""; }

.fa-transgender-alt:before { content: ""; }

.fa-venus-double:before { content: ""; }

.fa-mars-double:before { content: ""; }

.fa-venus-mars:before { content: ""; }

.fa-mars-stroke:before { content: ""; }

.fa-mars-stroke-v:before { content: ""; }

.fa-mars-stroke-h:before { content: ""; }

.fa-neuter:before { content: ""; }

.fa-genderless:before { content: ""; }

.fa-facebook-official:before { content: ""; }

.fa-pinterest-p:before { content: ""; }

.fa-whatsapp:before { content: ""; }

.fa-server:before { content: ""; }

.fa-user-plus:before { content: ""; }

.fa-user-times:before { content: ""; }

.fa-hotel:before, .fa-bed:before { content: ""; }

.fa-viacoin:before { content: ""; }

.fa-train:before { content: ""; }

.fa-subway:before { content: ""; }

.fa-medium:before { content: ""; }

.fa-yc:before, .fa-y-combinator:before { content: ""; }

.fa-optin-monster:before { content: ""; }

.fa-opencart:before { content: ""; }

.fa-expeditedssl:before { content: ""; }

.fa-battery-4:before, .fa-battery:before, .fa-battery-full:before { content: ""; }

.fa-battery-3:before, .fa-battery-three-quarters:before { content: ""; }

.fa-battery-2:before, .fa-battery-half:before { content: ""; }

.fa-battery-1:before, .fa-battery-quarter:before { content: ""; }

.fa-battery-0:before, .fa-battery-empty:before { content: ""; }

.fa-mouse-pointer:before { content: ""; }

.fa-i-cursor:before { content: ""; }

.fa-object-group:before { content: ""; }

.fa-object-ungroup:before { content: ""; }

.fa-sticky-note:before { content: ""; }

.fa-sticky-note-o:before { content: ""; }

.fa-cc-jcb:before { content: ""; }

.fa-cc-diners-club:before { content: ""; }

.fa-clone:before { content: ""; }

.fa-balance-scale:before { content: ""; }

.fa-hourglass-o:before { content: ""; }

.fa-hourglass-1:before, .fa-hourglass-start:before { content: ""; }

.fa-hourglass-2:before, .fa-hourglass-half:before { content: ""; }

.fa-hourglass-3:before, .fa-hourglass-end:before { content: ""; }

.fa-hourglass:before { content: ""; }

.fa-hand-grab-o:before, .fa-hand-rock-o:before { content: ""; }

.fa-hand-stop-o:before, .fa-hand-paper-o:before { content: ""; }

.fa-hand-scissors-o:before { content: ""; }

.fa-hand-lizard-o:before { content: ""; }

.fa-hand-spock-o:before { content: ""; }

.fa-hand-pointer-o:before { content: ""; }

.fa-hand-peace-o:before { content: ""; }

.fa-trademark:before { content: ""; }

.fa-registered:before { content: ""; }

.fa-creative-commons:before { content: ""; }

.fa-gg:before { content: ""; }

.fa-gg-circle:before { content: ""; }

.fa-tripadvisor:before { content: ""; }

.fa-odnoklassniki:before { content: ""; }

.fa-odnoklassniki-square:before { content: ""; }

.fa-get-pocket:before { content: ""; }

.fa-wikipedia-w:before { content: ""; }

.fa-safari:before { content: ""; }

.fa-chrome:before { content: ""; }

.fa-firefox:before { content: ""; }

.fa-opera:before { content: ""; }

.fa-internet-explorer:before { content: ""; }

.fa-tv:before, .fa-television:before { content: ""; }

.fa-contao:before { content: ""; }

.fa-500px:before { content: ""; }

.fa-amazon:before { content: ""; }

.fa-calendar-plus-o:before { content: ""; }

.fa-calendar-minus-o:before { content: ""; }

.fa-calendar-times-o:before { content: ""; }

.fa-calendar-check-o:before { content: ""; }

.fa-industry:before { content: ""; }

.fa-map-pin:before { content: ""; }

.fa-map-signs:before { content: ""; }

.fa-map-o:before { content: ""; }

.fa-map:before { content: ""; }

.fa-commenting:before { content: ""; }

.fa-commenting-o:before { content: ""; }

.fa-houzz:before { content: ""; }

.fa-vimeo:before { content: ""; }

.fa-black-tie:before { content: ""; }

.fa-fonticons:before { content: ""; }

.fa-reddit-alien:before { content: ""; }

.fa-edge:before { content: ""; }

.fa-credit-card-alt:before { content: ""; }

.fa-codiepie:before { content: ""; }

.fa-modx:before { content: ""; }

.fa-fort-awesome:before { content: ""; }

.fa-usb:before { content: ""; }

.fa-product-hunt:before { content: ""; }

.fa-mixcloud:before { content: ""; }

.fa-scribd:before { content: ""; }

.fa-pause-circle:before { content: ""; }

.fa-pause-circle-o:before { content: ""; }

.fa-stop-circle:before { content: ""; }

.fa-stop-circle-o:before { content: ""; }

.fa-shopping-bag:before { content: ""; }

.fa-shopping-basket:before { content: ""; }

.fa-hashtag:before { content: ""; }

.fa-bluetooth:before { content: ""; }

.fa-bluetooth-b:before { content: ""; }

.fa-percent:before { content: ""; }

.fa-gitlab:before { content: ""; }

.fa-wpbeginner:before { content: ""; }

.fa-wpforms:before { content: ""; }

.fa-envira:before { content: ""; }

.fa-universal-access:before { content: ""; }

.fa-wheelchair-alt:before { content: ""; }

.fa-question-circle-o:before { content: ""; }

.fa-blind:before { content: ""; }

.fa-audio-description:before { content: ""; }

.fa-volume-control-phone:before { content: ""; }

.fa-braille:before { content: ""; }

.fa-assistive-listening-systems:before { content: ""; }

.fa-asl-interpreting:before, .fa-american-sign-language-interpreting:before { content: ""; }

.fa-deafness:before, .fa-hard-of-hearing:before, .fa-deaf:before { content: ""; }

.fa-glide:before { content: ""; }

.fa-glide-g:before { content: ""; }

.fa-signing:before, .fa-sign-language:before { content: ""; }

.fa-low-vision:before { content: ""; }

.fa-viadeo:before { content: ""; }

.fa-viadeo-square:before { content: ""; }

.fa-snapchat:before { content: ""; }

.fa-snapchat-ghost:before { content: ""; }

.fa-snapchat-square:before { content: ""; }

.fa-pied-piper:before { content: ""; }

.fa-first-order:before { content: ""; }

.fa-yoast:before { content: ""; }

.fa-themeisle:before { content: ""; }

.fa-google-plus-circle:before, .fa-google-plus-official:before { content: ""; }

.fa-fa:before, .fa-font-awesome:before { content: ""; }

.fa-handshake-o:before { content: ""; }

.fa-envelope-open:before { content: ""; }

.fa-envelope-open-o:before { content: ""; }

.fa-linode:before { content: ""; }

.fa-address-book:before { content: ""; }

.fa-address-book-o:before { content: ""; }

.fa-vcard:before, .fa-address-card:before { content: ""; }

.fa-vcard-o:before, .fa-address-card-o:before { content: ""; }

.fa-user-circle:before { content: ""; }

.fa-user-circle-o:before { content: ""; }

.fa-user-o:before { content: ""; }

.fa-id-badge:before { content: ""; }

.fa-drivers-license:before, .fa-id-card:before { content: ""; }

.fa-drivers-license-o:before, .fa-id-card-o:before { content: ""; }

.fa-quora:before { content: ""; }

.fa-free-code-camp:before { content: ""; }

.fa-telegram:before { content: ""; }

.fa-thermometer-4:before, .fa-thermometer:before, .fa-thermometer-full:before { content: ""; }

.fa-thermometer-3:before, .fa-thermometer-three-quarters:before { content: ""; }

.fa-thermometer-2:before, .fa-thermometer-half:before { content: ""; }

.fa-thermometer-1:before, .fa-thermometer-quarter:before { content: ""; }

.fa-thermometer-0:before, .fa-thermometer-empty:before { content: ""; }

.fa-shower:before { content: ""; }

.fa-bathtub:before, .fa-s15:before, .fa-bath:before { content: ""; }

.fa-podcast:before { content: ""; }

.fa-window-maximize:before { content: ""; }

.fa-window-minimize:before { content: ""; }

.fa-window-restore:before { content: ""; }

.fa-times-rectangle:before, .fa-window-close:before { content: ""; }

.fa-times-rectangle-o:before, .fa-window-close-o:before { content: ""; }

.fa-bandcamp:before { content: ""; }

.fa-grav:before { content: ""; }

.fa-etsy:before { content: ""; }

.fa-imdb:before { content: ""; }

.fa-ravelry:before { content: ""; }

.fa-eercast:before { content: ""; }

.fa-microchip:before { content: ""; }

.fa-snowflake-o:before { content: ""; }

.fa-superpowers:before { content: ""; }

.fa-wpexplorer:before { content: ""; }

.fa-meetup:before { content: ""; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); border: 0; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; width: auto; height: auto; margin: 0; overflow: visible; clip: auto; }

header, main { max-width: 960px; margin: auto; }

header { margin-top: 1rem; overflow: hidden; padding-bottom: 0; }
header div h1 { margin-top: 0; padding-top: 0; }
header div h1 a { width: 100%; }
header div h1 a img { width: 100%; }
header menu ul { list-style-type: none; }
header menu ul li { padding-left: .5rem; text-wrap: none; display: inline-block; }

.header-quote { margin: 0; padding: 0; color: #56566a; }
.header-quote blockquote { background-color: #f5f5f5; font-size: .8rem; font-style: italic; }
.header-quote blockquote cite { text-align: right; display: block; }
.header-quote blockquote cite span { content: '\2014 \0020'; }

main { padding-top: 0; }
main section { margin-top: 2rem; }

#intro-section { text-align: center; }

.cta-button { line-height: 2rem; font-size: 1.3rem; text-transform: uppercase; color: #231f20; width: 100%; vertical-align: middle; }

.cta-actions { text-align: right; }

#contribute { border-left: 2px solid #e1e1e1; }

#contribution-selections { list-style-type: none; }
#contribution-selections li { padding-left: .5rem; text-wrap: none; display: inline-block; }

main hr { border-bottom: 1px solid #212121; margin: 50px auto 0; }

#who-we-are, #meet-us, #get-involved { margin-top: 2rem; color: #231f20; }
#who-we-are header, #meet-us header, #get-involved header { text-align: center; }
#who-we-are footer, #meet-us footer, #get-involved footer { background: white; text-align: center; margin-top: 15px; padding-top: 15px; }

.flat-button:not(:disabled) { background-color: #e5c601; }
.flat-button:not(:disabled) { /* @alternate */ color: rgba(0, 0, 0, 0.87); color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }
.flat-button::before, .flat-button::after { background-color: rgba(0, 0, 0, 0.32); opacity: 0; }
@supports (background-color: color(green a(10%))) { .flat-button::before, .flat-button::after { background-color: color(var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) a(32%)); } }
.flat-button:not(.mdc-ripple-upgraded):hover::before, .flat-button:not(.mdc-ripple-upgraded):focus::before, .flat-button:not(.mdc-ripple-upgraded):active::after { transition-duration: 85ms; opacity: .6; }
.flat-button.mdc-ripple-upgraded--background-focused::before { opacity: .99999; }
.flat-button.mdc-ripple-upgraded--background-active-fill::before { transition-duration: 120ms; opacity: 1; }
.flat-button.mdc-ripple-upgraded::after { opacity: 0; }
.flat-button.mdc-ripple-upgraded--foreground-activation::after { animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }
.flat-button.mdc-ripple-upgraded--foreground-deactivation::after { animation: 83ms mdc-ripple-fg-opacity-out; transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); }

.raised-accent-button, #contribution-selections li a { background-color: #e5c601; }

#intro-section { color: #231f20; }

#page-footer { width: 100%; max-width: 100%; margin: 0; padding: 0; margin-top: 2rem; background-color: #56566a; color: #9e9e9e; font-size: .75rem; padding-top: 3rem; padding-bottom: 5rem; text-align: left; }
#page-footer h3, #page-footer h4 { color: #e5c601; }
#page-footer #socialnetworkicons li { padding-right: .5rem; margin: 0; font-size: 2rem; margin-top: 1rem; }
#page-footer #socialnetworkicons li a { padding: 0; }

#copyright { margin-top: 2rem; }

a { color: #00bcd4; text-decoration: none; }
a :hover { color: #00a2b6; }
